// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	enabled bool,
	oauthClientId string,
	oauthClientSecret string,
) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s := CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest{}
	s.name = name
	s.Enabled = enabled
	s.OauthClientId = oauthClientId
	s.OauthClientSecret = oauthClientSecret
	return &s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthGrantClientCredentials(oauthGrantClientCredentials bool) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthGrantClientCredentials = &oauthGrantClientCredentials
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithOauthAllowedScopes(oauthAllowedScopes []AllowedScope) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.OauthAllowedScopes = oauthAllowedScopes
	return s
}

func (s *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithComment(comment string) *CreateApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewCreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	enabled bool,
	oauthClientId string,
	oauthClientSecret string,
) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s := CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest{}
	s.name = name
	s.Enabled = enabled
	s.OauthClientId = oauthClientId
	s.OauthClientSecret = oauthClientSecret
	return &s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthAuthorizationEndpoint(oauthAuthorizationEndpoint string) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthAuthorizationEndpoint = &oauthAuthorizationEndpoint
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthGrantAuthorizationCode(oauthGrantAuthorizationCode bool) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthGrantAuthorizationCode = &oauthGrantAuthorizationCode
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithOauthAllowedScopes(oauthAllowedScopes []AllowedScope) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.OauthAllowedScopes = oauthAllowedScopes
	return s
}

func (s *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithComment(comment string) *CreateApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewCreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	enabled bool,
	oauthAssertionIssuer string,
	oauthClientId string,
	oauthClientSecret string,
) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s := CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest{}
	s.name = name
	s.Enabled = enabled
	s.OauthAssertionIssuer = oauthAssertionIssuer
	s.OauthClientId = oauthClientId
	s.OauthClientSecret = oauthClientSecret
	return &s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthAuthorizationEndpoint(oauthAuthorizationEndpoint string) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthAuthorizationEndpoint = &oauthAuthorizationEndpoint
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthGrantJwtBearer(oauthGrantJwtBearer bool) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthGrantJwtBearer = &oauthGrantJwtBearer
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithComment(comment string) *CreateApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewCreateExternalOauthSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	enabled bool,
	externalOauthType ExternalOauthSecurityIntegrationTypeOption,
	externalOauthIssuer string,
	externalOauthTokenUserMappingClaim []TokenUserMappingClaim,
	externalOauthSnowflakeUserMappingAttribute ExternalOauthSecurityIntegrationSnowflakeUserMappingAttributeOption,
) *CreateExternalOauthSecurityIntegrationRequest {
	s := CreateExternalOauthSecurityIntegrationRequest{}
	s.name = name
	s.Enabled = enabled
	s.ExternalOauthType = externalOauthType
	s.ExternalOauthIssuer = externalOauthIssuer
	s.ExternalOauthTokenUserMappingClaim = externalOauthTokenUserMappingClaim
	s.ExternalOauthSnowflakeUserMappingAttribute = externalOauthSnowflakeUserMappingAttribute
	return &s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateExternalOauthSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateExternalOauthSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthJwsKeysUrl(externalOauthJwsKeysUrl []JwsKeysUrl) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthJwsKeysUrl = externalOauthJwsKeysUrl
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthBlockedRolesList(externalOauthBlockedRolesList BlockedRolesListRequest) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthBlockedRolesList = &externalOauthBlockedRolesList
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthAllowedRolesList(externalOauthAllowedRolesList AllowedRolesListRequest) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthAllowedRolesList = &externalOauthAllowedRolesList
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthRsaPublicKey(externalOauthRsaPublicKey string) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthRsaPublicKey = &externalOauthRsaPublicKey
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthRsaPublicKey2(externalOauthRsaPublicKey2 string) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthRsaPublicKey2 = &externalOauthRsaPublicKey2
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthAudienceList(externalOauthAudienceList AudienceListRequest) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthAudienceList = &externalOauthAudienceList
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthAnyRoleMode(externalOauthAnyRoleMode ExternalOauthSecurityIntegrationAnyRoleModeOption) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthAnyRoleMode = &externalOauthAnyRoleMode
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthScopeDelimiter(externalOauthScopeDelimiter string) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthScopeDelimiter = &externalOauthScopeDelimiter
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithExternalOauthScopeMappingAttribute(externalOauthScopeMappingAttribute string) *CreateExternalOauthSecurityIntegrationRequest {
	s.ExternalOauthScopeMappingAttribute = &externalOauthScopeMappingAttribute
	return s
}

func (s *CreateExternalOauthSecurityIntegrationRequest) WithComment(comment string) *CreateExternalOauthSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewBlockedRolesListRequest(
	blockedRolesList []AccountObjectIdentifier,
) *BlockedRolesListRequest {
	s := BlockedRolesListRequest{}
	s.BlockedRolesList = blockedRolesList
	return &s
}

func NewAllowedRolesListRequest(
	allowedRolesList []AccountObjectIdentifier,
) *AllowedRolesListRequest {
	s := AllowedRolesListRequest{}
	s.AllowedRolesList = allowedRolesList
	return &s
}

func NewAudienceListRequest(
	audienceList []AudienceListItem,
) *AudienceListRequest {
	s := AudienceListRequest{}
	s.AudienceList = audienceList
	return &s
}

func NewCreateOauthForPartnerApplicationsSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	oauthClient OauthSecurityIntegrationClientOption,
) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s := CreateOauthForPartnerApplicationsSecurityIntegrationRequest{}
	s.name = name
	s.OauthClient = oauthClient
	return &s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithOauthRedirectUri(oauthRedirectUri string) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.OauthRedirectUri = &oauthRedirectUri
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithEnabled(enabled bool) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.Enabled = &enabled
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithOauthIssueRefreshTokens(oauthIssueRefreshTokens bool) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.OauthIssueRefreshTokens = &oauthIssueRefreshTokens
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles OauthSecurityIntegrationUseSecondaryRolesOption) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithBlockedRolesList(blockedRolesList BlockedRolesListRequest) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.BlockedRolesList = &blockedRolesList
	return s
}

func (s *CreateOauthForPartnerApplicationsSecurityIntegrationRequest) WithComment(comment string) *CreateOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewCreateOauthForCustomClientsSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	oauthClientType OauthSecurityIntegrationClientTypeOption,
	oauthRedirectUri string,
) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s := CreateOauthForCustomClientsSecurityIntegrationRequest{}
	s.name = name
	s.OauthClientType = oauthClientType
	s.OauthRedirectUri = oauthRedirectUri
	return &s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithEnabled(enabled bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.Enabled = &enabled
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthAllowNonTlsRedirectUri(oauthAllowNonTlsRedirectUri bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthAllowNonTlsRedirectUri = &oauthAllowNonTlsRedirectUri
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthEnforcePkce(oauthEnforcePkce bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthEnforcePkce = &oauthEnforcePkce
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles OauthSecurityIntegrationUseSecondaryRolesOption) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithPreAuthorizedRolesList(preAuthorizedRolesList PreAuthorizedRolesListRequest) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.PreAuthorizedRolesList = &preAuthorizedRolesList
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithBlockedRolesList(blockedRolesList BlockedRolesListRequest) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.BlockedRolesList = &blockedRolesList
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthIssueRefreshTokens(oauthIssueRefreshTokens bool) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthIssueRefreshTokens = &oauthIssueRefreshTokens
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

// adjusted manually
func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithNetworkPolicy(networkPolicy AccountObjectIdentifier) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthClientRsaPublicKey(oauthClientRsaPublicKey string) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthClientRsaPublicKey = &oauthClientRsaPublicKey
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithOauthClientRsaPublicKey2(oauthClientRsaPublicKey2 string) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.OauthClientRsaPublicKey2 = &oauthClientRsaPublicKey2
	return s
}

func (s *CreateOauthForCustomClientsSecurityIntegrationRequest) WithComment(comment string) *CreateOauthForCustomClientsSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewPreAuthorizedRolesListRequest() *PreAuthorizedRolesListRequest {
	s := PreAuthorizedRolesListRequest{}
	return &s
}

func (s *PreAuthorizedRolesListRequest) WithPreAuthorizedRolesList(preAuthorizedRolesList []AccountObjectIdentifier) *PreAuthorizedRolesListRequest {
	s.PreAuthorizedRolesList = preAuthorizedRolesList
	return s
}

func NewCreateSaml2SecurityIntegrationRequest(
	name AccountObjectIdentifier,
	saml2Issuer string,
	saml2SsoUrl string,
	saml2Provider Saml2SecurityIntegrationSaml2ProviderOption,
	saml2X509Cert string,
) *CreateSaml2SecurityIntegrationRequest {
	s := CreateSaml2SecurityIntegrationRequest{}
	s.name = name
	s.Saml2Issuer = saml2Issuer
	s.Saml2SsoUrl = saml2SsoUrl
	s.Saml2Provider = saml2Provider
	s.Saml2X509Cert = saml2X509Cert
	return &s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateSaml2SecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateSaml2SecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithEnabled(enabled bool) *CreateSaml2SecurityIntegrationRequest {
	s.Enabled = &enabled
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithAllowedUserDomains(allowedUserDomains []UserDomain) *CreateSaml2SecurityIntegrationRequest {
	s.AllowedUserDomains = allowedUserDomains
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithAllowedEmailPatterns(allowedEmailPatterns []EmailPattern) *CreateSaml2SecurityIntegrationRequest {
	s.AllowedEmailPatterns = allowedEmailPatterns
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2SpInitiatedLoginPageLabel(saml2SpInitiatedLoginPageLabel string) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2SpInitiatedLoginPageLabel = &saml2SpInitiatedLoginPageLabel
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2EnableSpInitiated(saml2EnableSpInitiated bool) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2EnableSpInitiated = &saml2EnableSpInitiated
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2SnowflakeX509Cert(saml2SnowflakeX509Cert string) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2SnowflakeX509Cert = &saml2SnowflakeX509Cert
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2SignRequest(saml2SignRequest bool) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2SignRequest = &saml2SignRequest
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2RequestedNameidFormat(saml2RequestedNameidFormat Saml2SecurityIntegrationSaml2RequestedNameidFormatOption) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2RequestedNameidFormat = &saml2RequestedNameidFormat
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2PostLogoutRedirectUrl(saml2PostLogoutRedirectUrl string) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2PostLogoutRedirectUrl = &saml2PostLogoutRedirectUrl
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2ForceAuthn(saml2ForceAuthn bool) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2ForceAuthn = &saml2ForceAuthn
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2SnowflakeIssuerUrl(saml2SnowflakeIssuerUrl string) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2SnowflakeIssuerUrl = &saml2SnowflakeIssuerUrl
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithSaml2SnowflakeAcsUrl(saml2SnowflakeAcsUrl string) *CreateSaml2SecurityIntegrationRequest {
	s.Saml2SnowflakeAcsUrl = &saml2SnowflakeAcsUrl
	return s
}

func (s *CreateSaml2SecurityIntegrationRequest) WithComment(comment string) *CreateSaml2SecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewCreateScimSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	scimClient ScimSecurityIntegrationScimClientOption,
	runAsRole ScimSecurityIntegrationRunAsRoleOption,
) *CreateScimSecurityIntegrationRequest {
	s := CreateScimSecurityIntegrationRequest{}
	s.name = name
	s.ScimClient = scimClient
	s.RunAsRole = runAsRole
	return &s
}

func (s *CreateScimSecurityIntegrationRequest) WithOrReplace(orReplace bool) *CreateScimSecurityIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateScimSecurityIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateScimSecurityIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateScimSecurityIntegrationRequest) WithEnabled(enabled bool) *CreateScimSecurityIntegrationRequest {
	s.Enabled = &enabled
	return s
}

// adjusted manually
func (s *CreateScimSecurityIntegrationRequest) WithNetworkPolicy(networkPolicy AccountObjectIdentifier) *CreateScimSecurityIntegrationRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *CreateScimSecurityIntegrationRequest) WithSyncPassword(syncPassword bool) *CreateScimSecurityIntegrationRequest {
	s.SyncPassword = &syncPassword
	return s
}

func (s *CreateScimSecurityIntegrationRequest) WithComment(comment string) *CreateScimSecurityIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewAlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s := AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithSet(set ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest) WithUnset(unset ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest) *AlterApiAuthenticationWithClientCredentialsFlowSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest() *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s := ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest{}
	return &s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthClientId(oauthClientId string) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthClientId = &oauthClientId
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthClientSecret(oauthClientSecret string) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthClientSecret = &oauthClientSecret
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthGrantClientCredentials(oauthGrantClientCredentials bool) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthGrantClientCredentials = &oauthGrantClientCredentials
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithOauthAllowedScopes(oauthAllowedScopes []AllowedScope) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.OauthAllowedScopes = oauthAllowedScopes
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest) WithComment(comment string) *ApiAuthenticationWithClientCredentialsFlowIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest() *ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest {
	s := ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest{}
	return &s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest) WithComment(comment bool) *ApiAuthenticationWithClientCredentialsFlowIntegrationUnsetRequest {
	s.Comment = &comment
	return s
}

func NewAlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s := AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithSet(set ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest) WithUnset(unset ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest) *AlterApiAuthenticationWithAuthorizationCodeGrantFlowSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest() *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s := ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest{}
	return &s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthAuthorizationEndpoint(oauthAuthorizationEndpoint string) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthAuthorizationEndpoint = &oauthAuthorizationEndpoint
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthClientId(oauthClientId string) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthClientId = &oauthClientId
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthClientSecret(oauthClientSecret string) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthClientSecret = &oauthClientSecret
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthGrantAuthorizationCode(oauthGrantAuthorizationCode bool) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthGrantAuthorizationCode = &oauthGrantAuthorizationCode
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithOauthAllowedScopes(oauthAllowedScopes []AllowedScope) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.OauthAllowedScopes = oauthAllowedScopes
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest) WithComment(comment string) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest() *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest {
	s := ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest{}
	return &s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest) WithComment(comment bool) *ApiAuthenticationWithAuthorizationCodeGrantFlowIntegrationUnsetRequest {
	s.Comment = &comment
	return s
}

func NewAlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s := AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithSet(set ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest) WithUnset(unset ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest) *AlterApiAuthenticationWithJwtBearerFlowSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewApiAuthenticationWithJwtBearerFlowIntegrationSetRequest() *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s := ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest{}
	return &s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthAuthorizationEndpoint(oauthAuthorizationEndpoint string) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthAuthorizationEndpoint = &oauthAuthorizationEndpoint
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthTokenEndpoint(oauthTokenEndpoint string) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthTokenEndpoint = &oauthTokenEndpoint
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthClientAuthMethod(oauthClientAuthMethod ApiAuthenticationSecurityIntegrationOauthClientAuthMethodOption) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthClientAuthMethod = &oauthClientAuthMethod
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthClientId(oauthClientId string) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthClientId = &oauthClientId
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthClientSecret(oauthClientSecret string) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthClientSecret = &oauthClientSecret
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthGrantJwtBearer(oauthGrantJwtBearer bool) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthGrantJwtBearer = &oauthGrantJwtBearer
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthAccessTokenValidity = &oauthAccessTokenValidity
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest) WithComment(comment string) *ApiAuthenticationWithJwtBearerFlowIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest() *ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest {
	s := ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest{}
	return &s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest) WithEnabled(enabled bool) *ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest) WithComment(comment bool) *ApiAuthenticationWithJwtBearerFlowIntegrationUnsetRequest {
	s.Comment = &comment
	return s
}

func NewAlterExternalOauthSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterExternalOauthSecurityIntegrationRequest {
	s := AlterExternalOauthSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterExternalOauthSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterExternalOauthSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterExternalOauthSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterExternalOauthSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterExternalOauthSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterExternalOauthSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterExternalOauthSecurityIntegrationRequest) WithSet(set ExternalOauthIntegrationSetRequest) *AlterExternalOauthSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterExternalOauthSecurityIntegrationRequest) WithUnset(unset ExternalOauthIntegrationUnsetRequest) *AlterExternalOauthSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewExternalOauthIntegrationSetRequest() *ExternalOauthIntegrationSetRequest {
	s := ExternalOauthIntegrationSetRequest{}
	return &s
}

func (s *ExternalOauthIntegrationSetRequest) WithEnabled(enabled bool) *ExternalOauthIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthType(externalOauthType ExternalOauthSecurityIntegrationTypeOption) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthType = &externalOauthType
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthIssuer(externalOauthIssuer string) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthIssuer = &externalOauthIssuer
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthTokenUserMappingClaim(externalOauthTokenUserMappingClaim []TokenUserMappingClaim) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthTokenUserMappingClaim = externalOauthTokenUserMappingClaim
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthSnowflakeUserMappingAttribute(externalOauthSnowflakeUserMappingAttribute ExternalOauthSecurityIntegrationSnowflakeUserMappingAttributeOption) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthSnowflakeUserMappingAttribute = &externalOauthSnowflakeUserMappingAttribute
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthJwsKeysUrl(externalOauthJwsKeysUrl []JwsKeysUrl) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthJwsKeysUrl = externalOauthJwsKeysUrl
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthBlockedRolesList(externalOauthBlockedRolesList BlockedRolesListRequest) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthBlockedRolesList = &externalOauthBlockedRolesList
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthAllowedRolesList(externalOauthAllowedRolesList AllowedRolesListRequest) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthAllowedRolesList = &externalOauthAllowedRolesList
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthRsaPublicKey(externalOauthRsaPublicKey string) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthRsaPublicKey = &externalOauthRsaPublicKey
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthRsaPublicKey2(externalOauthRsaPublicKey2 string) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthRsaPublicKey2 = &externalOauthRsaPublicKey2
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthAudienceList(externalOauthAudienceList AudienceListRequest) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthAudienceList = &externalOauthAudienceList
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthAnyRoleMode(externalOauthAnyRoleMode ExternalOauthSecurityIntegrationAnyRoleModeOption) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthAnyRoleMode = &externalOauthAnyRoleMode
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthScopeDelimiter(externalOauthScopeDelimiter string) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthScopeDelimiter = &externalOauthScopeDelimiter
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithExternalOauthScopeMappingAttribute(externalOauthScopeMappingAttribute string) *ExternalOauthIntegrationSetRequest {
	s.ExternalOauthScopeMappingAttribute = &externalOauthScopeMappingAttribute
	return s
}

func (s *ExternalOauthIntegrationSetRequest) WithComment(comment StringAllowEmpty) *ExternalOauthIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewExternalOauthIntegrationUnsetRequest() *ExternalOauthIntegrationUnsetRequest {
	s := ExternalOauthIntegrationUnsetRequest{}
	return &s
}

func (s *ExternalOauthIntegrationUnsetRequest) WithEnabled(enabled bool) *ExternalOauthIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ExternalOauthIntegrationUnsetRequest) WithExternalOauthAudienceList(externalOauthAudienceList bool) *ExternalOauthIntegrationUnsetRequest {
	s.ExternalOauthAudienceList = &externalOauthAudienceList
	return s
}

func NewAlterOauthForPartnerApplicationsSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s := AlterOauthForPartnerApplicationsSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterOauthForPartnerApplicationsSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterOauthForPartnerApplicationsSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterOauthForPartnerApplicationsSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterOauthForPartnerApplicationsSecurityIntegrationRequest) WithSet(set OauthForPartnerApplicationsIntegrationSetRequest) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterOauthForPartnerApplicationsSecurityIntegrationRequest) WithUnset(unset OauthForPartnerApplicationsIntegrationUnsetRequest) *AlterOauthForPartnerApplicationsSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewOauthForPartnerApplicationsIntegrationSetRequest() *OauthForPartnerApplicationsIntegrationSetRequest {
	s := OauthForPartnerApplicationsIntegrationSetRequest{}
	return &s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithEnabled(enabled bool) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithOauthIssueRefreshTokens(oauthIssueRefreshTokens bool) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.OauthIssueRefreshTokens = &oauthIssueRefreshTokens
	return s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithOauthRedirectUri(oauthRedirectUri string) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.OauthRedirectUri = &oauthRedirectUri
	return s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles OauthSecurityIntegrationUseSecondaryRolesOption) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithBlockedRolesList(blockedRolesList BlockedRolesListRequest) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.BlockedRolesList = &blockedRolesList
	return s
}

// adjusted manually
func (s *OauthForPartnerApplicationsIntegrationSetRequest) WithComment(comment string) *OauthForPartnerApplicationsIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewOauthForPartnerApplicationsIntegrationUnsetRequest() *OauthForPartnerApplicationsIntegrationUnsetRequest {
	s := OauthForPartnerApplicationsIntegrationUnsetRequest{}
	return &s
}

func (s *OauthForPartnerApplicationsIntegrationUnsetRequest) WithEnabled(enabled bool) *OauthForPartnerApplicationsIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *OauthForPartnerApplicationsIntegrationUnsetRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles bool) *OauthForPartnerApplicationsIntegrationUnsetRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

func NewAlterOauthForCustomClientsSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s := AlterOauthForCustomClientsSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterOauthForCustomClientsSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterOauthForCustomClientsSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterOauthForCustomClientsSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterOauthForCustomClientsSecurityIntegrationRequest) WithSet(set OauthForCustomClientsIntegrationSetRequest) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterOauthForCustomClientsSecurityIntegrationRequest) WithUnset(unset OauthForCustomClientsIntegrationUnsetRequest) *AlterOauthForCustomClientsSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewOauthForCustomClientsIntegrationSetRequest() *OauthForCustomClientsIntegrationSetRequest {
	s := OauthForCustomClientsIntegrationSetRequest{}
	return &s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithEnabled(enabled bool) *OauthForCustomClientsIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthRedirectUri(oauthRedirectUri string) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthRedirectUri = &oauthRedirectUri
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthAllowNonTlsRedirectUri(oauthAllowNonTlsRedirectUri bool) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthAllowNonTlsRedirectUri = &oauthAllowNonTlsRedirectUri
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthEnforcePkce(oauthEnforcePkce bool) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthEnforcePkce = &oauthEnforcePkce
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithPreAuthorizedRolesList(preAuthorizedRolesList PreAuthorizedRolesListRequest) *OauthForCustomClientsIntegrationSetRequest {
	s.PreAuthorizedRolesList = &preAuthorizedRolesList
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithBlockedRolesList(blockedRolesList BlockedRolesListRequest) *OauthForCustomClientsIntegrationSetRequest {
	s.BlockedRolesList = &blockedRolesList
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthIssueRefreshTokens(oauthIssueRefreshTokens bool) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthIssueRefreshTokens = &oauthIssueRefreshTokens
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthRefreshTokenValidity = &oauthRefreshTokenValidity
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles OauthSecurityIntegrationUseSecondaryRolesOption) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

// adjusted manually
func (s *OauthForCustomClientsIntegrationSetRequest) WithNetworkPolicy(networkPolicy AccountObjectIdentifier) *OauthForCustomClientsIntegrationSetRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthClientRsaPublicKey(oauthClientRsaPublicKey string) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthClientRsaPublicKey = &oauthClientRsaPublicKey
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithOauthClientRsaPublicKey2(oauthClientRsaPublicKey2 string) *OauthForCustomClientsIntegrationSetRequest {
	s.OauthClientRsaPublicKey2 = &oauthClientRsaPublicKey2
	return s
}

func (s *OauthForCustomClientsIntegrationSetRequest) WithComment(comment string) *OauthForCustomClientsIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewOauthForCustomClientsIntegrationUnsetRequest() *OauthForCustomClientsIntegrationUnsetRequest {
	s := OauthForCustomClientsIntegrationUnsetRequest{}
	return &s
}

func (s *OauthForCustomClientsIntegrationUnsetRequest) WithEnabled(enabled bool) *OauthForCustomClientsIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *OauthForCustomClientsIntegrationUnsetRequest) WithNetworkPolicy(networkPolicy bool) *OauthForCustomClientsIntegrationUnsetRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *OauthForCustomClientsIntegrationUnsetRequest) WithOauthClientRsaPublicKey(oauthClientRsaPublicKey bool) *OauthForCustomClientsIntegrationUnsetRequest {
	s.OauthClientRsaPublicKey = &oauthClientRsaPublicKey
	return s
}

func (s *OauthForCustomClientsIntegrationUnsetRequest) WithOauthClientRsaPublicKey2(oauthClientRsaPublicKey2 bool) *OauthForCustomClientsIntegrationUnsetRequest {
	s.OauthClientRsaPublicKey2 = &oauthClientRsaPublicKey2
	return s
}

func (s *OauthForCustomClientsIntegrationUnsetRequest) WithOauthUseSecondaryRoles(oauthUseSecondaryRoles bool) *OauthForCustomClientsIntegrationUnsetRequest {
	s.OauthUseSecondaryRoles = &oauthUseSecondaryRoles
	return s
}

func NewAlterSaml2SecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterSaml2SecurityIntegrationRequest {
	s := AlterSaml2SecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterSaml2SecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterSaml2SecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterSaml2SecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithSet(set Saml2IntegrationSetRequest) *AlterSaml2SecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithUnset(unset Saml2IntegrationUnsetRequest) *AlterSaml2SecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func (s *AlterSaml2SecurityIntegrationRequest) WithRefreshSaml2SnowflakePrivateKey(refreshSaml2SnowflakePrivateKey bool) *AlterSaml2SecurityIntegrationRequest {
	s.RefreshSaml2SnowflakePrivateKey = &refreshSaml2SnowflakePrivateKey
	return s
}

func NewSaml2IntegrationSetRequest() *Saml2IntegrationSetRequest {
	s := Saml2IntegrationSetRequest{}
	return &s
}

func (s *Saml2IntegrationSetRequest) WithEnabled(enabled bool) *Saml2IntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2Issuer(saml2Issuer string) *Saml2IntegrationSetRequest {
	s.Saml2Issuer = &saml2Issuer
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SsoUrl(saml2SsoUrl string) *Saml2IntegrationSetRequest {
	s.Saml2SsoUrl = &saml2SsoUrl
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2Provider(saml2Provider Saml2SecurityIntegrationSaml2ProviderOption) *Saml2IntegrationSetRequest {
	s.Saml2Provider = &saml2Provider
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2X509Cert(saml2X509Cert string) *Saml2IntegrationSetRequest {
	s.Saml2X509Cert = &saml2X509Cert
	return s
}

func (s *Saml2IntegrationSetRequest) WithAllowedUserDomains(allowedUserDomains []UserDomain) *Saml2IntegrationSetRequest {
	s.AllowedUserDomains = allowedUserDomains
	return s
}

func (s *Saml2IntegrationSetRequest) WithAllowedEmailPatterns(allowedEmailPatterns []EmailPattern) *Saml2IntegrationSetRequest {
	s.AllowedEmailPatterns = allowedEmailPatterns
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SpInitiatedLoginPageLabel(saml2SpInitiatedLoginPageLabel string) *Saml2IntegrationSetRequest {
	s.Saml2SpInitiatedLoginPageLabel = &saml2SpInitiatedLoginPageLabel
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2EnableSpInitiated(saml2EnableSpInitiated bool) *Saml2IntegrationSetRequest {
	s.Saml2EnableSpInitiated = &saml2EnableSpInitiated
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SnowflakeX509Cert(saml2SnowflakeX509Cert string) *Saml2IntegrationSetRequest {
	s.Saml2SnowflakeX509Cert = &saml2SnowflakeX509Cert
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SignRequest(saml2SignRequest bool) *Saml2IntegrationSetRequest {
	s.Saml2SignRequest = &saml2SignRequest
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2RequestedNameidFormat(saml2RequestedNameidFormat Saml2SecurityIntegrationSaml2RequestedNameidFormatOption) *Saml2IntegrationSetRequest {
	s.Saml2RequestedNameidFormat = &saml2RequestedNameidFormat
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2PostLogoutRedirectUrl(saml2PostLogoutRedirectUrl string) *Saml2IntegrationSetRequest {
	s.Saml2PostLogoutRedirectUrl = &saml2PostLogoutRedirectUrl
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2ForceAuthn(saml2ForceAuthn bool) *Saml2IntegrationSetRequest {
	s.Saml2ForceAuthn = &saml2ForceAuthn
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SnowflakeIssuerUrl(saml2SnowflakeIssuerUrl string) *Saml2IntegrationSetRequest {
	s.Saml2SnowflakeIssuerUrl = &saml2SnowflakeIssuerUrl
	return s
}

func (s *Saml2IntegrationSetRequest) WithSaml2SnowflakeAcsUrl(saml2SnowflakeAcsUrl string) *Saml2IntegrationSetRequest {
	s.Saml2SnowflakeAcsUrl = &saml2SnowflakeAcsUrl
	return s
}

func (s *Saml2IntegrationSetRequest) WithComment(comment string) *Saml2IntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewSaml2IntegrationUnsetRequest() *Saml2IntegrationUnsetRequest {
	s := Saml2IntegrationUnsetRequest{}
	return &s
}

func (s *Saml2IntegrationUnsetRequest) WithSaml2ForceAuthn(saml2ForceAuthn bool) *Saml2IntegrationUnsetRequest {
	s.Saml2ForceAuthn = &saml2ForceAuthn
	return s
}

func (s *Saml2IntegrationUnsetRequest) WithSaml2RequestedNameidFormat(saml2RequestedNameidFormat bool) *Saml2IntegrationUnsetRequest {
	s.Saml2RequestedNameidFormat = &saml2RequestedNameidFormat
	return s
}

func (s *Saml2IntegrationUnsetRequest) WithSaml2PostLogoutRedirectUrl(saml2PostLogoutRedirectUrl bool) *Saml2IntegrationUnsetRequest {
	s.Saml2PostLogoutRedirectUrl = &saml2PostLogoutRedirectUrl
	return s
}

func (s *Saml2IntegrationUnsetRequest) WithComment(comment bool) *Saml2IntegrationUnsetRequest {
	s.Comment = &comment
	return s
}

func NewAlterScimSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterScimSecurityIntegrationRequest {
	s := AlterScimSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterScimSecurityIntegrationRequest) WithIfExists(ifExists bool) *AlterScimSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterScimSecurityIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterScimSecurityIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterScimSecurityIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterScimSecurityIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterScimSecurityIntegrationRequest) WithSet(set ScimIntegrationSetRequest) *AlterScimSecurityIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterScimSecurityIntegrationRequest) WithUnset(unset ScimIntegrationUnsetRequest) *AlterScimSecurityIntegrationRequest {
	s.Unset = &unset
	return s
}

func NewScimIntegrationSetRequest() *ScimIntegrationSetRequest {
	s := ScimIntegrationSetRequest{}
	return &s
}

func (s *ScimIntegrationSetRequest) WithEnabled(enabled bool) *ScimIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

// adjusted manually
func (s *ScimIntegrationSetRequest) WithNetworkPolicy(networkPolicy AccountObjectIdentifier) *ScimIntegrationSetRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *ScimIntegrationSetRequest) WithSyncPassword(syncPassword bool) *ScimIntegrationSetRequest {
	s.SyncPassword = &syncPassword
	return s
}

func (s *ScimIntegrationSetRequest) WithComment(comment StringAllowEmpty) *ScimIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewScimIntegrationUnsetRequest() *ScimIntegrationUnsetRequest {
	s := ScimIntegrationUnsetRequest{}
	return &s
}

func (s *ScimIntegrationUnsetRequest) WithEnabled(enabled bool) *ScimIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ScimIntegrationUnsetRequest) WithNetworkPolicy(networkPolicy bool) *ScimIntegrationUnsetRequest {
	s.NetworkPolicy = &networkPolicy
	return s
}

func (s *ScimIntegrationUnsetRequest) WithSyncPassword(syncPassword bool) *ScimIntegrationUnsetRequest {
	s.SyncPassword = &syncPassword
	return s
}

func NewDropSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *DropSecurityIntegrationRequest {
	s := DropSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *DropSecurityIntegrationRequest) WithIfExists(ifExists bool) *DropSecurityIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func NewDescribeSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *DescribeSecurityIntegrationRequest {
	s := DescribeSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func NewShowSecurityIntegrationRequest() *ShowSecurityIntegrationRequest {
	s := ShowSecurityIntegrationRequest{}
	return &s
}

func (s *ShowSecurityIntegrationRequest) WithLike(like Like) *ShowSecurityIntegrationRequest {
	s.Like = &like
	return s
}
