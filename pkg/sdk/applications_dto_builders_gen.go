// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateApplicationRequest(
	name AccountObjectIdentifier,
	packageName AccountObjectIdentifier,
) *CreateApplicationRequest {
	s := CreateApplicationRequest{}
	s.name = name
	s.PackageName = packageName
	return &s
}

func (s *CreateApplicationRequest) WithVersion(version ApplicationVersionRequest) *CreateApplicationRequest {
	s.Version = &version
	return s
}

func (s *CreateApplicationRequest) WithDebugMode(debugMode bool) *CreateApplicationRequest {
	s.DebugMode = &debugMode
	return s
}

func (s *CreateApplicationRequest) WithComment(comment string) *CreateApplicationRequest {
	s.Comment = &comment
	return s
}

func (s *CreateApplicationRequest) WithTag(tag []TagAssociation) *CreateApplicationRequest {
	s.Tag = tag
	return s
}

func NewApplicationVersionRequest() *ApplicationVersionRequest {
	s := ApplicationVersionRequest{}
	return &s
}

func (s *ApplicationVersionRequest) WithVersionDirectory(versionDirectory string) *ApplicationVersionRequest {
	s.VersionDirectory = &versionDirectory
	return s
}

func (s *ApplicationVersionRequest) WithVersionAndPatch(versionAndPatch VersionAndPatchRequest) *ApplicationVersionRequest {
	s.VersionAndPatch = &versionAndPatch
	return s
}

func NewVersionAndPatchRequest(
	version string,
	patch *int,
) *VersionAndPatchRequest {
	s := VersionAndPatchRequest{}
	s.Version = version
	s.Patch = patch
	return &s
}

func NewDropApplicationRequest(
	name AccountObjectIdentifier,
) *DropApplicationRequest {
	s := DropApplicationRequest{}
	s.name = name
	return &s
}

func (s *DropApplicationRequest) WithIfExists(ifExists bool) *DropApplicationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *DropApplicationRequest) WithCascade(cascade bool) *DropApplicationRequest {
	s.Cascade = &cascade
	return s
}

func NewAlterApplicationRequest(
	name AccountObjectIdentifier,
) *AlterApplicationRequest {
	s := AlterApplicationRequest{}
	s.name = name
	return &s
}

func (s *AlterApplicationRequest) WithIfExists(ifExists bool) *AlterApplicationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterApplicationRequest) WithSet(set ApplicationSetRequest) *AlterApplicationRequest {
	s.Set = &set
	return s
}

func (s *AlterApplicationRequest) WithUnset(unset ApplicationUnsetRequest) *AlterApplicationRequest {
	s.Unset = &unset
	return s
}

func (s *AlterApplicationRequest) WithUpgrade(upgrade bool) *AlterApplicationRequest {
	s.Upgrade = &upgrade
	return s
}

func (s *AlterApplicationRequest) WithUpgradeVersion(upgradeVersion ApplicationVersionRequest) *AlterApplicationRequest {
	s.UpgradeVersion = &upgradeVersion
	return s
}

func (s *AlterApplicationRequest) WithUnsetReferences(unsetReferences ApplicationReferencesRequest) *AlterApplicationRequest {
	s.UnsetReferences = &unsetReferences
	return s
}

func (s *AlterApplicationRequest) WithSetTags(setTags []TagAssociation) *AlterApplicationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterApplicationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterApplicationRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewApplicationSetRequest() *ApplicationSetRequest {
	s := ApplicationSetRequest{}
	return &s
}

func (s *ApplicationSetRequest) WithComment(comment string) *ApplicationSetRequest {
	s.Comment = &comment
	return s
}

func (s *ApplicationSetRequest) WithShareEventsWithProvider(shareEventsWithProvider bool) *ApplicationSetRequest {
	s.ShareEventsWithProvider = &shareEventsWithProvider
	return s
}

func (s *ApplicationSetRequest) WithDebugMode(debugMode bool) *ApplicationSetRequest {
	s.DebugMode = &debugMode
	return s
}

func NewApplicationUnsetRequest() *ApplicationUnsetRequest {
	s := ApplicationUnsetRequest{}
	return &s
}

func (s *ApplicationUnsetRequest) WithComment(comment bool) *ApplicationUnsetRequest {
	s.Comment = &comment
	return s
}

func (s *ApplicationUnsetRequest) WithShareEventsWithProvider(shareEventsWithProvider bool) *ApplicationUnsetRequest {
	s.ShareEventsWithProvider = &shareEventsWithProvider
	return s
}

func (s *ApplicationUnsetRequest) WithDebugMode(debugMode bool) *ApplicationUnsetRequest {
	s.DebugMode = &debugMode
	return s
}

func NewApplicationReferencesRequest() *ApplicationReferencesRequest {
	s := ApplicationReferencesRequest{}
	return &s
}

func (s *ApplicationReferencesRequest) WithReferences(references []ApplicationReferenceRequest) *ApplicationReferencesRequest {
	s.References = references
	return s
}

func NewApplicationReferenceRequest() *ApplicationReferenceRequest {
	s := ApplicationReferenceRequest{}
	return &s
}

func (s *ApplicationReferenceRequest) WithReference(reference string) *ApplicationReferenceRequest {
	s.Reference = reference
	return s
}

func NewShowApplicationRequest() *ShowApplicationRequest {
	s := ShowApplicationRequest{}
	return &s
}

func (s *ShowApplicationRequest) WithLike(like Like) *ShowApplicationRequest {
	s.Like = &like
	return s
}

func (s *ShowApplicationRequest) WithStartsWith(startsWith string) *ShowApplicationRequest {
	s.StartsWith = &startsWith
	return s
}

func (s *ShowApplicationRequest) WithLimit(limit LimitFrom) *ShowApplicationRequest {
	s.Limit = &limit
	return s
}

func NewDescribeApplicationRequest(
	name AccountObjectIdentifier,
) *DescribeApplicationRequest {
	s := DescribeApplicationRequest{}
	s.name = name
	return &s
}
