// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewAddUserProgrammaticAccessTokenRequest(
	userName AccountObjectIdentifier,
	name AccountObjectIdentifier,
) *AddUserProgrammaticAccessTokenRequest {
	s := AddUserProgrammaticAccessTokenRequest{}
	s.UserName = userName
	s.name = name
	return &s
}

func (s *AddUserProgrammaticAccessTokenRequest) WithIfExists(ifExists bool) *AddUserProgrammaticAccessTokenRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AddUserProgrammaticAccessTokenRequest) WithRoleRestriction(roleRestriction AccountObjectIdentifier) *AddUserProgrammaticAccessTokenRequest {
	s.RoleRestriction = &roleRestriction
	return s
}

func (s *AddUserProgrammaticAccessTokenRequest) WithDaysToExpiry(daysToExpiry int) *AddUserProgrammaticAccessTokenRequest {
	s.DaysToExpiry = &daysToExpiry
	return s
}

func (s *AddUserProgrammaticAccessTokenRequest) WithMinsToBypassNetworkPolicyRequirement(minsToBypassNetworkPolicyRequirement int) *AddUserProgrammaticAccessTokenRequest {
	s.MinsToBypassNetworkPolicyRequirement = &minsToBypassNetworkPolicyRequirement
	return s
}

func (s *AddUserProgrammaticAccessTokenRequest) WithComment(comment string) *AddUserProgrammaticAccessTokenRequest {
	s.Comment = &comment
	return s
}

func NewModifyUserProgrammaticAccessTokenRequest(
	userName AccountObjectIdentifier,
	name AccountObjectIdentifier,
) *ModifyUserProgrammaticAccessTokenRequest {
	s := ModifyUserProgrammaticAccessTokenRequest{}
	s.UserName = userName
	s.name = name
	return &s
}

func (s *ModifyUserProgrammaticAccessTokenRequest) WithIfExists(ifExists bool) *ModifyUserProgrammaticAccessTokenRequest {
	s.IfExists = &ifExists
	return s
}

func (s *ModifyUserProgrammaticAccessTokenRequest) WithSet(set ModifyProgrammaticAccessTokenSetRequest) *ModifyUserProgrammaticAccessTokenRequest {
	s.Set = &set
	return s
}

func (s *ModifyUserProgrammaticAccessTokenRequest) WithUnset(unset ModifyProgrammaticAccessTokenUnsetRequest) *ModifyUserProgrammaticAccessTokenRequest {
	s.Unset = &unset
	return s
}

func (s *ModifyUserProgrammaticAccessTokenRequest) WithRenameTo(renameTo AccountObjectIdentifier) *ModifyUserProgrammaticAccessTokenRequest {
	s.RenameTo = &renameTo
	return s
}

func NewModifyProgrammaticAccessTokenSetRequest() *ModifyProgrammaticAccessTokenSetRequest {
	s := ModifyProgrammaticAccessTokenSetRequest{}
	return &s
}

func (s *ModifyProgrammaticAccessTokenSetRequest) WithDisabled(disabled bool) *ModifyProgrammaticAccessTokenSetRequest {
	s.Disabled = &disabled
	return s
}

func (s *ModifyProgrammaticAccessTokenSetRequest) WithMinsToBypassNetworkPolicyRequirement(minsToBypassNetworkPolicyRequirement int) *ModifyProgrammaticAccessTokenSetRequest {
	s.MinsToBypassNetworkPolicyRequirement = &minsToBypassNetworkPolicyRequirement
	return s
}

func (s *ModifyProgrammaticAccessTokenSetRequest) WithComment(comment string) *ModifyProgrammaticAccessTokenSetRequest {
	s.Comment = &comment
	return s
}

func NewModifyProgrammaticAccessTokenUnsetRequest() *ModifyProgrammaticAccessTokenUnsetRequest {
	s := ModifyProgrammaticAccessTokenUnsetRequest{}
	return &s
}

func (s *ModifyProgrammaticAccessTokenUnsetRequest) WithDisabled(disabled bool) *ModifyProgrammaticAccessTokenUnsetRequest {
	s.Disabled = &disabled
	return s
}

func (s *ModifyProgrammaticAccessTokenUnsetRequest) WithMinsToBypassNetworkPolicyRequirement(minsToBypassNetworkPolicyRequirement bool) *ModifyProgrammaticAccessTokenUnsetRequest {
	s.MinsToBypassNetworkPolicyRequirement = &minsToBypassNetworkPolicyRequirement
	return s
}

func (s *ModifyProgrammaticAccessTokenUnsetRequest) WithComment(comment bool) *ModifyProgrammaticAccessTokenUnsetRequest {
	s.Comment = &comment
	return s
}

func NewRotateUserProgrammaticAccessTokenRequest(
	userName AccountObjectIdentifier,
	name AccountObjectIdentifier,
) *RotateUserProgrammaticAccessTokenRequest {
	s := RotateUserProgrammaticAccessTokenRequest{}
	s.UserName = userName
	s.name = name
	return &s
}

func (s *RotateUserProgrammaticAccessTokenRequest) WithIfExists(ifExists bool) *RotateUserProgrammaticAccessTokenRequest {
	s.IfExists = &ifExists
	return s
}

func (s *RotateUserProgrammaticAccessTokenRequest) WithExpireRotatedTokenAfterHours(expireRotatedTokenAfterHours int) *RotateUserProgrammaticAccessTokenRequest {
	s.ExpireRotatedTokenAfterHours = &expireRotatedTokenAfterHours
	return s
}

func NewRemoveUserProgrammaticAccessTokenRequest(
	userName AccountObjectIdentifier,
	name AccountObjectIdentifier,
) *RemoveUserProgrammaticAccessTokenRequest {
	s := RemoveUserProgrammaticAccessTokenRequest{}
	s.UserName = userName
	s.name = name
	return &s
}

func (s *RemoveUserProgrammaticAccessTokenRequest) WithIfExists(ifExists bool) *RemoveUserProgrammaticAccessTokenRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowUserProgrammaticAccessTokenRequest() *ShowUserProgrammaticAccessTokenRequest {
	s := ShowUserProgrammaticAccessTokenRequest{}
	return &s
}

func (s *ShowUserProgrammaticAccessTokenRequest) WithUserName(userName AccountObjectIdentifier) *ShowUserProgrammaticAccessTokenRequest {
	s.UserName = &userName
	return s
}
