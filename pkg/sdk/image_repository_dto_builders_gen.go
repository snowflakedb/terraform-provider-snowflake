// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateImageRepositoryRequest(
	name SchemaObjectIdentifier,
) *CreateImageRepositoryRequest {
	s := CreateImageRepositoryRequest{}
	s.name = name
	return &s
}

func (r *CreateImageRepositoryRequest) GetName() SchemaObjectIdentifier {
	return r.name
}

func (s *CreateImageRepositoryRequest) WithOrReplace(OrReplace bool) *CreateImageRepositoryRequest {
	s.OrReplace = &OrReplace
	return s
}

func (s *CreateImageRepositoryRequest) WithIfNotExists(IfNotExists bool) *CreateImageRepositoryRequest {
	s.IfNotExists = &IfNotExists
	return s
}

func (s *CreateImageRepositoryRequest) WithComment(Comment string) *CreateImageRepositoryRequest {
	s.Comment = &Comment
	return s
}

func NewAlterImageRepositoryRequest(
	name SchemaObjectIdentifier,
) *AlterImageRepositoryRequest {
	s := AlterImageRepositoryRequest{}
	s.name = name
	return &s
}

func (s *AlterImageRepositoryRequest) WithIfExists(IfExists bool) *AlterImageRepositoryRequest {
	s.IfExists = &IfExists
	return s
}

func (s *AlterImageRepositoryRequest) WithSet(Set ImageRepositorySetRequest) *AlterImageRepositoryRequest {
	s.Set = &Set
	return s
}

func NewImageRepositorySetRequest() *ImageRepositorySetRequest {
	return &ImageRepositorySetRequest{}
}

func (s *ImageRepositorySetRequest) WithComment(Comment StringAllowEmpty) *ImageRepositorySetRequest {
	s.Comment = &Comment
	return s
}

func NewDropImageRepositoryRequest(
	name SchemaObjectIdentifier,
) *DropImageRepositoryRequest {
	s := DropImageRepositoryRequest{}
	s.name = name
	return &s
}

func (s *DropImageRepositoryRequest) WithIfExists(IfExists bool) *DropImageRepositoryRequest {
	s.IfExists = &IfExists
	return s
}

func NewShowImageRepositoryRequest() *ShowImageRepositoryRequest {
	return &ShowImageRepositoryRequest{}
}

func (s *ShowImageRepositoryRequest) WithLike(Like Like) *ShowImageRepositoryRequest {
	s.Like = &Like
	return s
}

func (s *ShowImageRepositoryRequest) WithIn(In In) *ShowImageRepositoryRequest {
	s.In = &In
	return s
}
