// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateApiIntegrationRequest(
	name AccountObjectIdentifier,
	apiAllowedPrefixes []ApiIntegrationEndpointPrefix,
	enabled bool,
) *CreateApiIntegrationRequest {
	s := CreateApiIntegrationRequest{}
	s.name = name
	s.ApiAllowedPrefixes = apiAllowedPrefixes
	s.Enabled = enabled
	return &s
}

func (s *CreateApiIntegrationRequest) WithOrReplace(orReplace bool) *CreateApiIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateApiIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateApiIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateApiIntegrationRequest) WithAwsApiProviderParams(awsApiProviderParams AwsApiParamsRequest) *CreateApiIntegrationRequest {
	s.AwsApiProviderParams = &awsApiProviderParams
	return s
}

func (s *CreateApiIntegrationRequest) WithAzureApiProviderParams(azureApiProviderParams AzureApiParamsRequest) *CreateApiIntegrationRequest {
	s.AzureApiProviderParams = &azureApiProviderParams
	return s
}

func (s *CreateApiIntegrationRequest) WithGoogleApiProviderParams(googleApiProviderParams GoogleApiParamsRequest) *CreateApiIntegrationRequest {
	s.GoogleApiProviderParams = &googleApiProviderParams
	return s
}

func (s *CreateApiIntegrationRequest) WithApiBlockedPrefixes(apiBlockedPrefixes []ApiIntegrationEndpointPrefix) *CreateApiIntegrationRequest {
	s.ApiBlockedPrefixes = apiBlockedPrefixes
	return s
}

func (s *CreateApiIntegrationRequest) WithComment(comment string) *CreateApiIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewAwsApiParamsRequest(
	apiProvider ApiIntegrationAwsApiProviderType,
	apiAwsRoleArn string,
) *AwsApiParamsRequest {
	s := AwsApiParamsRequest{}
	s.ApiProvider = apiProvider
	s.ApiAwsRoleArn = apiAwsRoleArn
	return &s
}

func (s *AwsApiParamsRequest) WithApiKey(apiKey string) *AwsApiParamsRequest {
	s.ApiKey = &apiKey
	return s
}

func NewAzureApiParamsRequest(
	azureTenantId string,
	azureAdApplicationId string,
) *AzureApiParamsRequest {
	s := AzureApiParamsRequest{}
	s.AzureTenantId = azureTenantId
	s.AzureAdApplicationId = azureAdApplicationId
	return &s
}

func (s *AzureApiParamsRequest) WithApiKey(apiKey string) *AzureApiParamsRequest {
	s.ApiKey = &apiKey
	return s
}

func NewGoogleApiParamsRequest(
	googleAudience string,
) *GoogleApiParamsRequest {
	s := GoogleApiParamsRequest{}
	s.GoogleAudience = googleAudience
	return &s
}

func NewAlterApiIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterApiIntegrationRequest {
	s := AlterApiIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterApiIntegrationRequest) WithIfExists(ifExists bool) *AlterApiIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterApiIntegrationRequest) WithSet(set ApiIntegrationSetRequest) *AlterApiIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterApiIntegrationRequest) WithUnset(unset ApiIntegrationUnsetRequest) *AlterApiIntegrationRequest {
	s.Unset = &unset
	return s
}

func (s *AlterApiIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterApiIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterApiIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterApiIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewApiIntegrationSetRequest() *ApiIntegrationSetRequest {
	s := ApiIntegrationSetRequest{}
	return &s
}

func (s *ApiIntegrationSetRequest) WithAwsParams(awsParams SetAwsApiParamsRequest) *ApiIntegrationSetRequest {
	s.AwsParams = &awsParams
	return s
}

func (s *ApiIntegrationSetRequest) WithAzureParams(azureParams SetAzureApiParamsRequest) *ApiIntegrationSetRequest {
	s.AzureParams = &azureParams
	return s
}

func (s *ApiIntegrationSetRequest) WithGoogleParams(googleParams SetGoogleApiParamsRequest) *ApiIntegrationSetRequest {
	s.GoogleParams = &googleParams
	return s
}

func (s *ApiIntegrationSetRequest) WithEnabled(enabled bool) *ApiIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiIntegrationSetRequest) WithApiAllowedPrefixes(apiAllowedPrefixes []ApiIntegrationEndpointPrefix) *ApiIntegrationSetRequest {
	s.ApiAllowedPrefixes = apiAllowedPrefixes
	return s
}

func (s *ApiIntegrationSetRequest) WithApiBlockedPrefixes(apiBlockedPrefixes []ApiIntegrationEndpointPrefix) *ApiIntegrationSetRequest {
	s.ApiBlockedPrefixes = apiBlockedPrefixes
	return s
}

func (s *ApiIntegrationSetRequest) WithComment(comment string) *ApiIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewSetAwsApiParamsRequest() *SetAwsApiParamsRequest {
	s := SetAwsApiParamsRequest{}
	return &s
}

func (s *SetAwsApiParamsRequest) WithApiAwsRoleArn(apiAwsRoleArn string) *SetAwsApiParamsRequest {
	s.ApiAwsRoleArn = &apiAwsRoleArn
	return s
}

func (s *SetAwsApiParamsRequest) WithApiKey(apiKey string) *SetAwsApiParamsRequest {
	s.ApiKey = &apiKey
	return s
}

func NewSetAzureApiParamsRequest() *SetAzureApiParamsRequest {
	s := SetAzureApiParamsRequest{}
	return &s
}

func (s *SetAzureApiParamsRequest) WithAzureTenantId(azureTenantId string) *SetAzureApiParamsRequest {
	s.AzureTenantId = &azureTenantId
	return s
}

func (s *SetAzureApiParamsRequest) WithAzureAdApplicationId(azureAdApplicationId string) *SetAzureApiParamsRequest {
	s.AzureAdApplicationId = &azureAdApplicationId
	return s
}

func (s *SetAzureApiParamsRequest) WithApiKey(apiKey string) *SetAzureApiParamsRequest {
	s.ApiKey = &apiKey
	return s
}

func NewSetGoogleApiParamsRequest(
	googleAudience string,
) *SetGoogleApiParamsRequest {
	s := SetGoogleApiParamsRequest{}
	s.GoogleAudience = googleAudience
	return &s
}

func NewApiIntegrationUnsetRequest() *ApiIntegrationUnsetRequest {
	s := ApiIntegrationUnsetRequest{}
	return &s
}

func (s *ApiIntegrationUnsetRequest) WithApiKey(apiKey bool) *ApiIntegrationUnsetRequest {
	s.ApiKey = &apiKey
	return s
}

func (s *ApiIntegrationUnsetRequest) WithEnabled(enabled bool) *ApiIntegrationUnsetRequest {
	s.Enabled = &enabled
	return s
}

func (s *ApiIntegrationUnsetRequest) WithApiBlockedPrefixes(apiBlockedPrefixes bool) *ApiIntegrationUnsetRequest {
	s.ApiBlockedPrefixes = &apiBlockedPrefixes
	return s
}

func (s *ApiIntegrationUnsetRequest) WithComment(comment bool) *ApiIntegrationUnsetRequest {
	s.Comment = &comment
	return s
}

func NewDropApiIntegrationRequest(
	name AccountObjectIdentifier,
) *DropApiIntegrationRequest {
	s := DropApiIntegrationRequest{}
	s.name = name
	return &s
}

func (s *DropApiIntegrationRequest) WithIfExists(ifExists bool) *DropApiIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowApiIntegrationRequest() *ShowApiIntegrationRequest {
	s := ShowApiIntegrationRequest{}
	return &s
}

func (s *ShowApiIntegrationRequest) WithLike(like Like) *ShowApiIntegrationRequest {
	s.Like = &like
	return s
}

func NewDescribeApiIntegrationRequest(
	name AccountObjectIdentifier,
) *DescribeApiIntegrationRequest {
	s := DescribeApiIntegrationRequest{}
	s.name = name
	return &s
}
