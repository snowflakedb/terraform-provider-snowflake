// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateNotificationIntegrationRequest(
	name AccountObjectIdentifier,
	enabled bool,
) *CreateNotificationIntegrationRequest {
	s := CreateNotificationIntegrationRequest{}
	s.name = name
	s.Enabled = enabled
	return &s
}

// added manually
func (r *CreateNotificationIntegrationRequest) GetName() AccountObjectIdentifier {
	return r.name
}

func (s *CreateNotificationIntegrationRequest) WithOrReplace(orReplace bool) *CreateNotificationIntegrationRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateNotificationIntegrationRequest) WithIfNotExists(ifNotExists bool) *CreateNotificationIntegrationRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateNotificationIntegrationRequest) WithAutomatedDataLoadsParams(automatedDataLoadsParams AutomatedDataLoadsParamsRequest) *CreateNotificationIntegrationRequest {
	s.AutomatedDataLoadsParams = &automatedDataLoadsParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithPushNotificationParams(pushNotificationParams PushNotificationParamsRequest) *CreateNotificationIntegrationRequest {
	s.PushNotificationParams = &pushNotificationParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithEmailParams(emailParams EmailParamsRequest) *CreateNotificationIntegrationRequest {
	s.EmailParams = &emailParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithComment(comment string) *CreateNotificationIntegrationRequest {
	s.Comment = &comment
	return s
}

func NewAutomatedDataLoadsParamsRequest() *AutomatedDataLoadsParamsRequest {
	s := AutomatedDataLoadsParamsRequest{}
	return &s
}

func (s *AutomatedDataLoadsParamsRequest) WithGoogleAutoParams(googleAutoParams GoogleAutoParamsRequest) *AutomatedDataLoadsParamsRequest {
	s.GoogleAutoParams = &googleAutoParams
	return s
}

func (s *AutomatedDataLoadsParamsRequest) WithAzureAutoParams(azureAutoParams AzureAutoParamsRequest) *AutomatedDataLoadsParamsRequest {
	s.AzureAutoParams = &azureAutoParams
	return s
}

func NewGoogleAutoParamsRequest(
	gcpPubsubSubscriptionName string,
) *GoogleAutoParamsRequest {
	s := GoogleAutoParamsRequest{}
	s.GcpPubsubSubscriptionName = gcpPubsubSubscriptionName
	return &s
}

func NewAzureAutoParamsRequest(
	azureStorageQueuePrimaryUri string,
	azureTenantId string,
) *AzureAutoParamsRequest {
	s := AzureAutoParamsRequest{}
	s.AzureStorageQueuePrimaryUri = azureStorageQueuePrimaryUri
	s.AzureTenantId = azureTenantId
	return &s
}

func NewPushNotificationParamsRequest() *PushNotificationParamsRequest {
	s := PushNotificationParamsRequest{}
	return &s
}

func (s *PushNotificationParamsRequest) WithAmazonPushParams(amazonPushParams AmazonPushParamsRequest) *PushNotificationParamsRequest {
	s.AmazonPushParams = &amazonPushParams
	return s
}

func (s *PushNotificationParamsRequest) WithGooglePushParams(googlePushParams GooglePushParamsRequest) *PushNotificationParamsRequest {
	s.GooglePushParams = &googlePushParams
	return s
}

func (s *PushNotificationParamsRequest) WithAzurePushParams(azurePushParams AzurePushParamsRequest) *PushNotificationParamsRequest {
	s.AzurePushParams = &azurePushParams
	return s
}

func NewAmazonPushParamsRequest(
	awsSnsTopicArn string,
	awsSnsRoleArn string,
) *AmazonPushParamsRequest {
	s := AmazonPushParamsRequest{}
	s.AwsSnsTopicArn = awsSnsTopicArn
	s.AwsSnsRoleArn = awsSnsRoleArn
	return &s
}

func NewGooglePushParamsRequest(
	gcpPubsubTopicName string,
) *GooglePushParamsRequest {
	s := GooglePushParamsRequest{}
	s.GcpPubsubTopicName = gcpPubsubTopicName
	return &s
}

func NewAzurePushParamsRequest(
	azureEventGridTopicEndpoint string,
	azureTenantId string,
) *AzurePushParamsRequest {
	s := AzurePushParamsRequest{}
	s.AzureEventGridTopicEndpoint = azureEventGridTopicEndpoint
	s.AzureTenantId = azureTenantId
	return &s
}

func NewEmailParamsRequest() *EmailParamsRequest {
	s := EmailParamsRequest{}
	return &s
}

func (s *EmailParamsRequest) WithAllowedRecipients(allowedRecipients []NotificationIntegrationAllowedRecipient) *EmailParamsRequest {
	s.AllowedRecipients = allowedRecipients
	return s
}

func NewAlterNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterNotificationIntegrationRequest {
	s := AlterNotificationIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterNotificationIntegrationRequest) WithIfExists(ifExists bool) *AlterNotificationIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterNotificationIntegrationRequest) WithSet(set NotificationIntegrationSetRequest) *AlterNotificationIntegrationRequest {
	s.Set = &set
	return s
}

func (s *AlterNotificationIntegrationRequest) WithUnsetEmailParams(unsetEmailParams NotificationIntegrationUnsetEmailParamsRequest) *AlterNotificationIntegrationRequest {
	s.UnsetEmailParams = &unsetEmailParams
	return s
}

func (s *AlterNotificationIntegrationRequest) WithSetTags(setTags []TagAssociation) *AlterNotificationIntegrationRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterNotificationIntegrationRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterNotificationIntegrationRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewNotificationIntegrationSetRequest() *NotificationIntegrationSetRequest {
	s := NotificationIntegrationSetRequest{}
	return &s
}

func (s *NotificationIntegrationSetRequest) WithEnabled(enabled bool) *NotificationIntegrationSetRequest {
	s.Enabled = &enabled
	return s
}

func (s *NotificationIntegrationSetRequest) WithSetPushParams(setPushParams SetPushParamsRequest) *NotificationIntegrationSetRequest {
	s.SetPushParams = &setPushParams
	return s
}

func (s *NotificationIntegrationSetRequest) WithSetEmailParams(setEmailParams SetEmailParamsRequest) *NotificationIntegrationSetRequest {
	s.SetEmailParams = &setEmailParams
	return s
}

func (s *NotificationIntegrationSetRequest) WithComment(comment string) *NotificationIntegrationSetRequest {
	s.Comment = &comment
	return s
}

func NewSetPushParamsRequest() *SetPushParamsRequest {
	s := SetPushParamsRequest{}
	return &s
}

func (s *SetPushParamsRequest) WithSetAmazonPush(setAmazonPush SetAmazonPushRequest) *SetPushParamsRequest {
	s.SetAmazonPush = &setAmazonPush
	return s
}

func (s *SetPushParamsRequest) WithSetGooglePush(setGooglePush SetGooglePushRequest) *SetPushParamsRequest {
	s.SetGooglePush = &setGooglePush
	return s
}

func (s *SetPushParamsRequest) WithSetAzurePush(setAzurePush SetAzurePushRequest) *SetPushParamsRequest {
	s.SetAzurePush = &setAzurePush
	return s
}

func NewSetAmazonPushRequest(
	awsSnsTopicArn string,
	awsSnsRoleArn string,
) *SetAmazonPushRequest {
	s := SetAmazonPushRequest{}
	s.AwsSnsTopicArn = awsSnsTopicArn
	s.AwsSnsRoleArn = awsSnsRoleArn
	return &s
}

func NewSetGooglePushRequest(
	gcpPubsubSubscriptionName string,
) *SetGooglePushRequest {
	s := SetGooglePushRequest{}
	s.GcpPubsubSubscriptionName = gcpPubsubSubscriptionName
	return &s
}

func NewSetAzurePushRequest(
	azureStorageQueuePrimaryUri string,
	azureTenantId string,
) *SetAzurePushRequest {
	s := SetAzurePushRequest{}
	s.AzureStorageQueuePrimaryUri = azureStorageQueuePrimaryUri
	s.AzureTenantId = azureTenantId
	return &s
}

func NewSetEmailParamsRequest(
	allowedRecipients []NotificationIntegrationAllowedRecipient,
) *SetEmailParamsRequest {
	s := SetEmailParamsRequest{}
	s.AllowedRecipients = allowedRecipients
	return &s
}

func NewNotificationIntegrationUnsetEmailParamsRequest() *NotificationIntegrationUnsetEmailParamsRequest {
	s := NotificationIntegrationUnsetEmailParamsRequest{}
	return &s
}

func (s *NotificationIntegrationUnsetEmailParamsRequest) WithAllowedRecipients(allowedRecipients bool) *NotificationIntegrationUnsetEmailParamsRequest {
	s.AllowedRecipients = &allowedRecipients
	return s
}

func (s *NotificationIntegrationUnsetEmailParamsRequest) WithComment(comment bool) *NotificationIntegrationUnsetEmailParamsRequest {
	s.Comment = &comment
	return s
}

func NewDropNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *DropNotificationIntegrationRequest {
	s := DropNotificationIntegrationRequest{}
	s.name = name
	return &s
}

func (s *DropNotificationIntegrationRequest) WithIfExists(ifExists bool) *DropNotificationIntegrationRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowNotificationIntegrationRequest() *ShowNotificationIntegrationRequest {
	s := ShowNotificationIntegrationRequest{}
	return &s
}

func (s *ShowNotificationIntegrationRequest) WithLike(like Like) *ShowNotificationIntegrationRequest {
	s.Like = &like
	return s
}

func NewDescribeNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *DescribeNotificationIntegrationRequest {
	s := DescribeNotificationIntegrationRequest{}
	s.name = name
	return &s
}
