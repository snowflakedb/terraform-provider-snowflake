// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

import "github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk/datatypes"

func NewCreateRowAccessPolicyRequest(
	name SchemaObjectIdentifier,
	args []CreateRowAccessPolicyArgsRequest,
	body string,
) *CreateRowAccessPolicyRequest {
	s := CreateRowAccessPolicyRequest{}
	s.name = name
	s.args = args
	s.body = body
	return &s
}

// added manually
func (r *CreateRowAccessPolicyRequest) GetName() SchemaObjectIdentifier {
	return r.name
}

func (s *CreateRowAccessPolicyRequest) WithOrReplace(orReplace bool) *CreateRowAccessPolicyRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateRowAccessPolicyRequest) WithIfNotExists(ifNotExists bool) *CreateRowAccessPolicyRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateRowAccessPolicyRequest) WithComment(comment string) *CreateRowAccessPolicyRequest {
	s.Comment = &comment
	return s
}

func NewCreateRowAccessPolicyArgsRequest(
	name string,
	dataType datatypes.DataType,
) *CreateRowAccessPolicyArgsRequest {
	s := CreateRowAccessPolicyArgsRequest{}
	s.Name = name
	s.DataType = dataType
	return &s
}

func NewAlterRowAccessPolicyRequest(
	name SchemaObjectIdentifier,
) *AlterRowAccessPolicyRequest {
	s := AlterRowAccessPolicyRequest{}
	s.name = name
	return &s
}

func (s *AlterRowAccessPolicyRequest) WithRenameTo(renameTo SchemaObjectIdentifier) *AlterRowAccessPolicyRequest {
	s.RenameTo = &renameTo
	return s
}

func (s *AlterRowAccessPolicyRequest) WithSetBody(setBody string) *AlterRowAccessPolicyRequest {
	s.SetBody = &setBody
	return s
}

func (s *AlterRowAccessPolicyRequest) WithSetTags(setTags []TagAssociation) *AlterRowAccessPolicyRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterRowAccessPolicyRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterRowAccessPolicyRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterRowAccessPolicyRequest) WithSetComment(setComment string) *AlterRowAccessPolicyRequest {
	s.SetComment = &setComment
	return s
}

func (s *AlterRowAccessPolicyRequest) WithUnsetComment(unsetComment bool) *AlterRowAccessPolicyRequest {
	s.UnsetComment = &unsetComment
	return s
}

func NewDropRowAccessPolicyRequest(
	name SchemaObjectIdentifier,
) *DropRowAccessPolicyRequest {
	s := DropRowAccessPolicyRequest{}
	s.name = name
	return &s
}

func (s *DropRowAccessPolicyRequest) WithIfExists(ifExists bool) *DropRowAccessPolicyRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowRowAccessPolicyRequest() *ShowRowAccessPolicyRequest {
	s := ShowRowAccessPolicyRequest{}
	return &s
}

func (s *ShowRowAccessPolicyRequest) WithLike(like Like) *ShowRowAccessPolicyRequest {
	s.Like = &like
	return s
}

func (s *ShowRowAccessPolicyRequest) WithIn(in ExtendedIn) *ShowRowAccessPolicyRequest {
	s.In = &in
	return s
}

func (s *ShowRowAccessPolicyRequest) WithLimit(limit LimitFrom) *ShowRowAccessPolicyRequest {
	s.Limit = &limit
	return s
}

func NewDescribeRowAccessPolicyRequest(
	name SchemaObjectIdentifier,
) *DescribeRowAccessPolicyRequest {
	s := DescribeRowAccessPolicyRequest{}
	s.name = name
	return &s
}
