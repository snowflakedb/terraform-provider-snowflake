// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateSessionPolicyRequest(
	name SchemaObjectIdentifier,
) *CreateSessionPolicyRequest {
	s := CreateSessionPolicyRequest{}
	s.name = name
	return &s
}

func (s *CreateSessionPolicyRequest) WithOrReplace(orReplace bool) *CreateSessionPolicyRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateSessionPolicyRequest) WithIfNotExists(ifNotExists bool) *CreateSessionPolicyRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateSessionPolicyRequest) WithSessionIdleTimeoutMins(sessionIdleTimeoutMins int) *CreateSessionPolicyRequest {
	s.SessionIdleTimeoutMins = &sessionIdleTimeoutMins
	return s
}

func (s *CreateSessionPolicyRequest) WithSessionUiIdleTimeoutMins(sessionUiIdleTimeoutMins int) *CreateSessionPolicyRequest {
	s.SessionUiIdleTimeoutMins = &sessionUiIdleTimeoutMins
	return s
}

func (s *CreateSessionPolicyRequest) WithComment(comment string) *CreateSessionPolicyRequest {
	s.Comment = &comment
	return s
}

func NewAlterSessionPolicyRequest(
	name SchemaObjectIdentifier,
) *AlterSessionPolicyRequest {
	s := AlterSessionPolicyRequest{}
	s.name = name
	return &s
}

func (s *AlterSessionPolicyRequest) WithIfExists(ifExists bool) *AlterSessionPolicyRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterSessionPolicyRequest) WithRenameTo(renameTo SchemaObjectIdentifier) *AlterSessionPolicyRequest {
	s.RenameTo = &renameTo
	return s
}

func (s *AlterSessionPolicyRequest) WithSet(set SessionPolicySetRequest) *AlterSessionPolicyRequest {
	s.Set = &set
	return s
}

func (s *AlterSessionPolicyRequest) WithSetTags(setTags []TagAssociation) *AlterSessionPolicyRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterSessionPolicyRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterSessionPolicyRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterSessionPolicyRequest) WithUnset(unset SessionPolicyUnsetRequest) *AlterSessionPolicyRequest {
	s.Unset = &unset
	return s
}

func NewSessionPolicySetRequest() *SessionPolicySetRequest {
	s := SessionPolicySetRequest{}
	return &s
}

func (s *SessionPolicySetRequest) WithSessionIdleTimeoutMins(sessionIdleTimeoutMins int) *SessionPolicySetRequest {
	s.SessionIdleTimeoutMins = &sessionIdleTimeoutMins
	return s
}

func (s *SessionPolicySetRequest) WithSessionUiIdleTimeoutMins(sessionUiIdleTimeoutMins int) *SessionPolicySetRequest {
	s.SessionUiIdleTimeoutMins = &sessionUiIdleTimeoutMins
	return s
}

func (s *SessionPolicySetRequest) WithComment(comment string) *SessionPolicySetRequest {
	s.Comment = &comment
	return s
}

func NewSessionPolicyUnsetRequest() *SessionPolicyUnsetRequest {
	s := SessionPolicyUnsetRequest{}
	return &s
}

func (s *SessionPolicyUnsetRequest) WithSessionIdleTimeoutMins(sessionIdleTimeoutMins bool) *SessionPolicyUnsetRequest {
	s.SessionIdleTimeoutMins = &sessionIdleTimeoutMins
	return s
}

func (s *SessionPolicyUnsetRequest) WithSessionUiIdleTimeoutMins(sessionUiIdleTimeoutMins bool) *SessionPolicyUnsetRequest {
	s.SessionUiIdleTimeoutMins = &sessionUiIdleTimeoutMins
	return s
}

func (s *SessionPolicyUnsetRequest) WithComment(comment bool) *SessionPolicyUnsetRequest {
	s.Comment = &comment
	return s
}

func NewDropSessionPolicyRequest(
	name SchemaObjectIdentifier,
) *DropSessionPolicyRequest {
	s := DropSessionPolicyRequest{}
	s.name = name
	return &s
}

func (s *DropSessionPolicyRequest) WithIfExists(ifExists bool) *DropSessionPolicyRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowSessionPolicyRequest() *ShowSessionPolicyRequest {
	s := ShowSessionPolicyRequest{}
	return &s
}

func NewDescribeSessionPolicyRequest(
	name SchemaObjectIdentifier,
) *DescribeSessionPolicyRequest {
	s := DescribeSessionPolicyRequest{}
	s.name = name
	return &s
}
