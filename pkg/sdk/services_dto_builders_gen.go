// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateServiceRequest(
	name SchemaObjectIdentifier,
	inComputePool AccountObjectIdentifier,
) *CreateServiceRequest {
	s := CreateServiceRequest{}
	s.name = name
	s.InComputePool = inComputePool
	return &s
}

func (s *CreateServiceRequest) WithIfNotExists(ifNotExists bool) *CreateServiceRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateServiceRequest) WithFromSpecification(fromSpecification ServiceFromSpecificationRequest) *CreateServiceRequest {
	s.FromSpecification = &fromSpecification
	return s
}

func (s *CreateServiceRequest) WithFromSpecificationTemplate(fromSpecificationTemplate ServiceFromSpecificationTemplateRequest) *CreateServiceRequest {
	s.FromSpecificationTemplate = &fromSpecificationTemplate
	return s
}

func (s *CreateServiceRequest) WithAutoSuspendSecs(autoSuspendSecs int) *CreateServiceRequest {
	s.AutoSuspendSecs = &autoSuspendSecs
	return s
}

func (s *CreateServiceRequest) WithExternalAccessIntegrations(externalAccessIntegrations ServiceExternalAccessIntegrationsRequest) *CreateServiceRequest {
	s.ExternalAccessIntegrations = &externalAccessIntegrations
	return s
}

func (s *CreateServiceRequest) WithAutoResume(autoResume bool) *CreateServiceRequest {
	s.AutoResume = &autoResume
	return s
}

func (s *CreateServiceRequest) WithMinInstances(minInstances int) *CreateServiceRequest {
	s.MinInstances = &minInstances
	return s
}

func (s *CreateServiceRequest) WithMinReadyInstances(minReadyInstances int) *CreateServiceRequest {
	s.MinReadyInstances = &minReadyInstances
	return s
}

func (s *CreateServiceRequest) WithMaxInstances(maxInstances int) *CreateServiceRequest {
	s.MaxInstances = &maxInstances
	return s
}

func (s *CreateServiceRequest) WithQueryWarehouse(queryWarehouse AccountObjectIdentifier) *CreateServiceRequest {
	s.QueryWarehouse = &queryWarehouse
	return s
}

func (s *CreateServiceRequest) WithTag(tag []TagAssociation) *CreateServiceRequest {
	s.Tag = tag
	return s
}

func (s *CreateServiceRequest) WithComment(comment string) *CreateServiceRequest {
	s.Comment = &comment
	return s
}

func NewServiceFromSpecificationRequest() *ServiceFromSpecificationRequest {
	s := ServiceFromSpecificationRequest{}
	return &s
}

func (s *ServiceFromSpecificationRequest) WithLocation(location Location) *ServiceFromSpecificationRequest {
	s.Location = location
	return s
}

func (s *ServiceFromSpecificationRequest) WithSpecificationFile(specificationFile string) *ServiceFromSpecificationRequest {
	s.SpecificationFile = &specificationFile
	return s
}

func (s *ServiceFromSpecificationRequest) WithSpecification(specification string) *ServiceFromSpecificationRequest {
	s.Specification = &specification
	return s
}

func NewServiceFromSpecificationTemplateRequest(
	using []ListItem,
) *ServiceFromSpecificationTemplateRequest {
	s := ServiceFromSpecificationTemplateRequest{}
	s.Using = using
	return &s
}

func (s *ServiceFromSpecificationTemplateRequest) WithLocation(location Location) *ServiceFromSpecificationTemplateRequest {
	s.Location = location
	return s
}

func (s *ServiceFromSpecificationTemplateRequest) WithSpecificationTemplateFile(specificationTemplateFile string) *ServiceFromSpecificationTemplateRequest {
	s.SpecificationTemplateFile = &specificationTemplateFile
	return s
}

func (s *ServiceFromSpecificationTemplateRequest) WithSpecificationTemplate(specificationTemplate string) *ServiceFromSpecificationTemplateRequest {
	s.SpecificationTemplate = &specificationTemplate
	return s
}

func NewServiceExternalAccessIntegrationsRequest(
	externalAccessIntegrations []AccountObjectIdentifier,
) *ServiceExternalAccessIntegrationsRequest {
	s := ServiceExternalAccessIntegrationsRequest{}
	s.ExternalAccessIntegrations = externalAccessIntegrations
	return &s
}

func NewAlterServiceRequest(
	name SchemaObjectIdentifier,
) *AlterServiceRequest {
	s := AlterServiceRequest{}
	s.name = name
	return &s
}

func (s *AlterServiceRequest) WithIfExists(ifExists bool) *AlterServiceRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterServiceRequest) WithResume(resume bool) *AlterServiceRequest {
	s.Resume = &resume
	return s
}

func (s *AlterServiceRequest) WithSuspend(suspend bool) *AlterServiceRequest {
	s.Suspend = &suspend
	return s
}

func (s *AlterServiceRequest) WithFromSpecification(fromSpecification ServiceFromSpecificationRequest) *AlterServiceRequest {
	s.FromSpecification = &fromSpecification
	return s
}

func (s *AlterServiceRequest) WithFromSpecificationTemplate(fromSpecificationTemplate ServiceFromSpecificationTemplateRequest) *AlterServiceRequest {
	s.FromSpecificationTemplate = &fromSpecificationTemplate
	return s
}

func (s *AlterServiceRequest) WithRestore(restore RestoreRequest) *AlterServiceRequest {
	s.Restore = &restore
	return s
}

func (s *AlterServiceRequest) WithSet(set ServiceSetRequest) *AlterServiceRequest {
	s.Set = &set
	return s
}

func (s *AlterServiceRequest) WithUnset(unset ServiceUnsetRequest) *AlterServiceRequest {
	s.Unset = &unset
	return s
}

func (s *AlterServiceRequest) WithSetTags(setTags []TagAssociation) *AlterServiceRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterServiceRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterServiceRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewRestoreRequest(
	volume string,
	instances []int,
	fromSnapshot SchemaObjectIdentifier,
) *RestoreRequest {
	s := RestoreRequest{}
	s.Volume = volume
	s.Instances = instances
	s.FromSnapshot = fromSnapshot
	return &s
}

func NewServiceSetRequest() *ServiceSetRequest {
	s := ServiceSetRequest{}
	return &s
}

func (s *ServiceSetRequest) WithMinInstances(minInstances int) *ServiceSetRequest {
	s.MinInstances = &minInstances
	return s
}

func (s *ServiceSetRequest) WithMaxInstances(maxInstances int) *ServiceSetRequest {
	s.MaxInstances = &maxInstances
	return s
}

func (s *ServiceSetRequest) WithAutoSuspendSecs(autoSuspendSecs int) *ServiceSetRequest {
	s.AutoSuspendSecs = &autoSuspendSecs
	return s
}

func (s *ServiceSetRequest) WithMinReadyInstances(minReadyInstances int) *ServiceSetRequest {
	s.MinReadyInstances = &minReadyInstances
	return s
}

func (s *ServiceSetRequest) WithQueryWarehouse(queryWarehouse AccountObjectIdentifier) *ServiceSetRequest {
	s.QueryWarehouse = &queryWarehouse
	return s
}

func (s *ServiceSetRequest) WithAutoResume(autoResume bool) *ServiceSetRequest {
	s.AutoResume = &autoResume
	return s
}

func (s *ServiceSetRequest) WithExternalAccessIntegrations(externalAccessIntegrations ServiceExternalAccessIntegrationsRequest) *ServiceSetRequest {
	s.ExternalAccessIntegrations = &externalAccessIntegrations
	return s
}

func (s *ServiceSetRequest) WithComment(comment string) *ServiceSetRequest {
	s.Comment = &comment
	return s
}

func NewServiceUnsetRequest() *ServiceUnsetRequest {
	s := ServiceUnsetRequest{}
	return &s
}

func (s *ServiceUnsetRequest) WithMinInstances(minInstances bool) *ServiceUnsetRequest {
	s.MinInstances = &minInstances
	return s
}

func (s *ServiceUnsetRequest) WithAutoSuspendSecs(autoSuspendSecs bool) *ServiceUnsetRequest {
	s.AutoSuspendSecs = &autoSuspendSecs
	return s
}

func (s *ServiceUnsetRequest) WithMaxInstances(maxInstances bool) *ServiceUnsetRequest {
	s.MaxInstances = &maxInstances
	return s
}

func (s *ServiceUnsetRequest) WithMinReadyInstances(minReadyInstances bool) *ServiceUnsetRequest {
	s.MinReadyInstances = &minReadyInstances
	return s
}

func (s *ServiceUnsetRequest) WithQueryWarehouse(queryWarehouse bool) *ServiceUnsetRequest {
	s.QueryWarehouse = &queryWarehouse
	return s
}

func (s *ServiceUnsetRequest) WithAutoResume(autoResume bool) *ServiceUnsetRequest {
	s.AutoResume = &autoResume
	return s
}

func (s *ServiceUnsetRequest) WithExternalAccessIntegrations(externalAccessIntegrations bool) *ServiceUnsetRequest {
	s.ExternalAccessIntegrations = &externalAccessIntegrations
	return s
}

func (s *ServiceUnsetRequest) WithComment(comment bool) *ServiceUnsetRequest {
	s.Comment = &comment
	return s
}

func NewDropServiceRequest(
	name SchemaObjectIdentifier,
) *DropServiceRequest {
	s := DropServiceRequest{}
	s.name = name
	return &s
}

func (s *DropServiceRequest) WithIfExists(ifExists bool) *DropServiceRequest {
	s.IfExists = &ifExists
	return s
}

func (s *DropServiceRequest) WithForce(force bool) *DropServiceRequest {
	s.Force = &force
	return s
}

func NewShowServiceRequest() *ShowServiceRequest {
	s := ShowServiceRequest{}
	return &s
}

func (s *ShowServiceRequest) WithJob(job bool) *ShowServiceRequest {
	s.Job = &job
	return s
}

func (s *ShowServiceRequest) WithExcludeJobs(excludeJobs bool) *ShowServiceRequest {
	s.ExcludeJobs = &excludeJobs
	return s
}

func (s *ShowServiceRequest) WithLike(like Like) *ShowServiceRequest {
	s.Like = &like
	return s
}

func (s *ShowServiceRequest) WithIn(in ServiceIn) *ShowServiceRequest {
	s.In = &in
	return s
}

func (s *ShowServiceRequest) WithStartsWith(startsWith string) *ShowServiceRequest {
	s.StartsWith = &startsWith
	return s
}

func (s *ShowServiceRequest) WithLimit(limit LimitFrom) *ShowServiceRequest {
	s.Limit = &limit
	return s
}

func NewDescribeServiceRequest(
	name SchemaObjectIdentifier,
) *DescribeServiceRequest {
	s := DescribeServiceRequest{}
	s.name = name
	return &s
}

func NewExecuteJobServiceRequest(
	inComputePool AccountObjectIdentifier,
	name SchemaObjectIdentifier,
) *ExecuteJobServiceRequest {
	s := ExecuteJobServiceRequest{}
	s.InComputePool = inComputePool
	s.Name = name
	return &s
}

func (s *ExecuteJobServiceRequest) WithAsync(async bool) *ExecuteJobServiceRequest {
	s.Async = &async
	return s
}

func (s *ExecuteJobServiceRequest) WithQueryWarehouse(queryWarehouse AccountObjectIdentifier) *ExecuteJobServiceRequest {
	s.QueryWarehouse = &queryWarehouse
	return s
}

func (s *ExecuteJobServiceRequest) WithComment(comment string) *ExecuteJobServiceRequest {
	s.Comment = &comment
	return s
}

func (s *ExecuteJobServiceRequest) WithExternalAccessIntegrations(externalAccessIntegrations ServiceExternalAccessIntegrationsRequest) *ExecuteJobServiceRequest {
	s.ExternalAccessIntegrations = &externalAccessIntegrations
	return s
}

func (s *ExecuteJobServiceRequest) WithJobServiceFromSpecification(jobServiceFromSpecification JobServiceFromSpecificationRequest) *ExecuteJobServiceRequest {
	s.JobServiceFromSpecification = &jobServiceFromSpecification
	return s
}

func (s *ExecuteJobServiceRequest) WithJobServiceFromSpecificationTemplate(jobServiceFromSpecificationTemplate JobServiceFromSpecificationTemplateRequest) *ExecuteJobServiceRequest {
	s.JobServiceFromSpecificationTemplate = &jobServiceFromSpecificationTemplate
	return s
}

func (s *ExecuteJobServiceRequest) WithTag(tag []TagAssociation) *ExecuteJobServiceRequest {
	s.Tag = tag
	return s
}

func NewJobServiceFromSpecificationRequest() *JobServiceFromSpecificationRequest {
	s := JobServiceFromSpecificationRequest{}
	return &s
}

func (s *JobServiceFromSpecificationRequest) WithLocation(location Location) *JobServiceFromSpecificationRequest {
	s.Location = location
	return s
}

func (s *JobServiceFromSpecificationRequest) WithSpecificationFile(specificationFile string) *JobServiceFromSpecificationRequest {
	s.SpecificationFile = &specificationFile
	return s
}

func (s *JobServiceFromSpecificationRequest) WithSpecification(specification string) *JobServiceFromSpecificationRequest {
	s.Specification = &specification
	return s
}

func NewJobServiceFromSpecificationTemplateRequest(
	using []ListItem,
) *JobServiceFromSpecificationTemplateRequest {
	s := JobServiceFromSpecificationTemplateRequest{}
	s.Using = using
	return &s
}

func (s *JobServiceFromSpecificationTemplateRequest) WithLocation(location Location) *JobServiceFromSpecificationTemplateRequest {
	s.Location = location
	return s
}

func (s *JobServiceFromSpecificationTemplateRequest) WithSpecificationTemplateFile(specificationTemplateFile string) *JobServiceFromSpecificationTemplateRequest {
	s.SpecificationTemplateFile = &specificationTemplateFile
	return s
}

func (s *JobServiceFromSpecificationTemplateRequest) WithSpecificationTemplate(specificationTemplate string) *JobServiceFromSpecificationTemplateRequest {
	s.SpecificationTemplate = &specificationTemplate
	return s
}
