// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateGitRepositoryRequest(
	name SchemaObjectIdentifier,
	origin string,
	apiIntegration AccountObjectIdentifier,
) *CreateGitRepositoryRequest {
	s := CreateGitRepositoryRequest{}
	s.name = name
	s.Origin = origin
	s.ApiIntegration = apiIntegration
	return &s
}

func (s *CreateGitRepositoryRequest) WithOrReplace(orReplace bool) *CreateGitRepositoryRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateGitRepositoryRequest) WithIfNotExists(ifNotExists bool) *CreateGitRepositoryRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateGitRepositoryRequest) WithGitCredentials(gitCredentials SchemaObjectIdentifier) *CreateGitRepositoryRequest {
	s.GitCredentials = &gitCredentials
	return s
}

func (s *CreateGitRepositoryRequest) WithComment(comment string) *CreateGitRepositoryRequest {
	s.Comment = &comment
	return s
}

func (s *CreateGitRepositoryRequest) WithTag(tag []TagAssociation) *CreateGitRepositoryRequest {
	s.Tag = tag
	return s
}

func NewAlterGitRepositoryRequest(
	name SchemaObjectIdentifier,
) *AlterGitRepositoryRequest {
	s := AlterGitRepositoryRequest{}
	s.name = name
	return &s
}

func (s *AlterGitRepositoryRequest) WithIfExists(ifExists bool) *AlterGitRepositoryRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterGitRepositoryRequest) WithSet(set GitRepositorySetRequest) *AlterGitRepositoryRequest {
	s.Set = &set
	return s
}

func (s *AlterGitRepositoryRequest) WithUnset(unset GitRepositoryUnsetRequest) *AlterGitRepositoryRequest {
	s.Unset = &unset
	return s
}

func (s *AlterGitRepositoryRequest) WithFetch(fetch bool) *AlterGitRepositoryRequest {
	s.Fetch = &fetch
	return s
}

func (s *AlterGitRepositoryRequest) WithSetTags(setTags []TagAssociation) *AlterGitRepositoryRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterGitRepositoryRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterGitRepositoryRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewGitRepositorySetRequest() *GitRepositorySetRequest {
	s := GitRepositorySetRequest{}
	return &s
}

func (s *GitRepositorySetRequest) WithApiIntegration(apiIntegration AccountObjectIdentifier) *GitRepositorySetRequest {
	s.ApiIntegration = &apiIntegration
	return s
}

func (s *GitRepositorySetRequest) WithGitCredentials(gitCredentials SchemaObjectIdentifier) *GitRepositorySetRequest {
	s.GitCredentials = &gitCredentials
	return s
}

func (s *GitRepositorySetRequest) WithComment(comment string) *GitRepositorySetRequest {
	s.Comment = &comment
	return s
}

func NewGitRepositoryUnsetRequest() *GitRepositoryUnsetRequest {
	s := GitRepositoryUnsetRequest{}
	return &s
}

func (s *GitRepositoryUnsetRequest) WithGitCredentials(gitCredentials bool) *GitRepositoryUnsetRequest {
	s.GitCredentials = &gitCredentials
	return s
}

func (s *GitRepositoryUnsetRequest) WithComment(comment bool) *GitRepositoryUnsetRequest {
	s.Comment = &comment
	return s
}

func NewDropGitRepositoryRequest(
	name SchemaObjectIdentifier,
) *DropGitRepositoryRequest {
	s := DropGitRepositoryRequest{}
	s.name = name
	return &s
}

func (s *DropGitRepositoryRequest) WithIfExists(ifExists bool) *DropGitRepositoryRequest {
	s.IfExists = &ifExists
	return s
}

func NewDescribeGitRepositoryRequest(
	name SchemaObjectIdentifier,
) *DescribeGitRepositoryRequest {
	s := DescribeGitRepositoryRequest{}
	s.name = name
	return &s
}

func NewShowGitRepositoryRequest() *ShowGitRepositoryRequest {
	s := ShowGitRepositoryRequest{}
	return &s
}

func (s *ShowGitRepositoryRequest) WithLike(like Like) *ShowGitRepositoryRequest {
	s.Like = &like
	return s
}

func (s *ShowGitRepositoryRequest) WithIn(in In) *ShowGitRepositoryRequest {
	s.In = &in
	return s
}

func (s *ShowGitRepositoryRequest) WithLimit(limit LimitFrom) *ShowGitRepositoryRequest {
	s.Limit = &limit
	return s
}

func NewShowGitBranchesGitRepositoryRequest(
	name SchemaObjectIdentifier,
) *ShowGitBranchesGitRepositoryRequest {
	s := ShowGitBranchesGitRepositoryRequest{}
	s.name = name
	return &s
}

func (s *ShowGitBranchesGitRepositoryRequest) WithLike(like Like) *ShowGitBranchesGitRepositoryRequest {
	s.Like = &like
	return s
}

func (s *ShowGitBranchesGitRepositoryRequest) WithGitRepository(gitRepository bool) *ShowGitBranchesGitRepositoryRequest {
	s.GitRepository = &gitRepository
	return s
}

func NewShowGitTagsGitRepositoryRequest(
	name SchemaObjectIdentifier,
) *ShowGitTagsGitRepositoryRequest {
	s := ShowGitTagsGitRepositoryRequest{}
	s.name = name
	return &s
}

func (s *ShowGitTagsGitRepositoryRequest) WithLike(like Like) *ShowGitTagsGitRepositoryRequest {
	s.Like = &like
	return s
}

func (s *ShowGitTagsGitRepositoryRequest) WithGitRepository(gitRepository bool) *ShowGitTagsGitRepositoryRequest {
	s.GitRepository = &gitRepository
	return s
}
