// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateMaterializedViewRequest(
	name SchemaObjectIdentifier,
	sql string,
) *CreateMaterializedViewRequest {
	s := CreateMaterializedViewRequest{}
	s.name = name
	s.sql = sql
	return &s
}

func (s *CreateMaterializedViewRequest) WithOrReplace(orReplace bool) *CreateMaterializedViewRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateMaterializedViewRequest) WithSecure(secure bool) *CreateMaterializedViewRequest {
	s.Secure = &secure
	return s
}

func (s *CreateMaterializedViewRequest) WithIfNotExists(ifNotExists bool) *CreateMaterializedViewRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateMaterializedViewRequest) WithCopyGrants(copyGrants bool) *CreateMaterializedViewRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateMaterializedViewRequest) WithColumns(columns []MaterializedViewColumnRequest) *CreateMaterializedViewRequest {
	s.Columns = columns
	return s
}

func (s *CreateMaterializedViewRequest) WithColumnsMaskingPolicies(columnsMaskingPolicies []MaterializedViewColumnMaskingPolicyRequest) *CreateMaterializedViewRequest {
	s.ColumnsMaskingPolicies = columnsMaskingPolicies
	return s
}

func (s *CreateMaterializedViewRequest) WithComment(comment string) *CreateMaterializedViewRequest {
	s.Comment = &comment
	return s
}

func (s *CreateMaterializedViewRequest) WithRowAccessPolicy(rowAccessPolicy MaterializedViewRowAccessPolicyRequest) *CreateMaterializedViewRequest {
	s.RowAccessPolicy = &rowAccessPolicy
	return s
}

func (s *CreateMaterializedViewRequest) WithTag(tag []TagAssociation) *CreateMaterializedViewRequest {
	s.Tag = tag
	return s
}

func (s *CreateMaterializedViewRequest) WithClusterBy(clusterBy MaterializedViewClusterByRequest) *CreateMaterializedViewRequest {
	s.ClusterBy = &clusterBy
	return s
}

func NewMaterializedViewColumnRequest(
	name string,
) *MaterializedViewColumnRequest {
	s := MaterializedViewColumnRequest{}
	s.Name = name
	return &s
}

func (s *MaterializedViewColumnRequest) WithComment(comment string) *MaterializedViewColumnRequest {
	s.Comment = &comment
	return s
}

func NewMaterializedViewColumnMaskingPolicyRequest(
	name string,
	maskingPolicy SchemaObjectIdentifier,
) *MaterializedViewColumnMaskingPolicyRequest {
	s := MaterializedViewColumnMaskingPolicyRequest{}
	s.Name = name
	s.MaskingPolicy = maskingPolicy
	return &s
}

func (s *MaterializedViewColumnMaskingPolicyRequest) WithUsing(using []string) *MaterializedViewColumnMaskingPolicyRequest {
	s.Using = using
	return s
}

func (s *MaterializedViewColumnMaskingPolicyRequest) WithTag(tag []TagAssociation) *MaterializedViewColumnMaskingPolicyRequest {
	s.Tag = tag
	return s
}

func NewMaterializedViewRowAccessPolicyRequest(
	rowAccessPolicy SchemaObjectIdentifier,
	on []string,
) *MaterializedViewRowAccessPolicyRequest {
	s := MaterializedViewRowAccessPolicyRequest{}
	s.RowAccessPolicy = rowAccessPolicy
	s.On = on
	return &s
}

func NewMaterializedViewClusterByRequest() *MaterializedViewClusterByRequest {
	s := MaterializedViewClusterByRequest{}
	return &s
}

func (s *MaterializedViewClusterByRequest) WithExpressions(expressions []MaterializedViewClusterByExpressionRequest) *MaterializedViewClusterByRequest {
	s.Expressions = expressions
	return s
}

func NewMaterializedViewClusterByExpressionRequest(
	name string,
) *MaterializedViewClusterByExpressionRequest {
	s := MaterializedViewClusterByExpressionRequest{}
	s.Name = name
	return &s
}

func NewAlterMaterializedViewRequest(
	name SchemaObjectIdentifier,
) *AlterMaterializedViewRequest {
	s := AlterMaterializedViewRequest{}
	s.name = name
	return &s
}

func (s *AlterMaterializedViewRequest) WithRenameTo(renameTo SchemaObjectIdentifier) *AlterMaterializedViewRequest {
	s.RenameTo = &renameTo
	return s
}

func (s *AlterMaterializedViewRequest) WithClusterBy(clusterBy MaterializedViewClusterByRequest) *AlterMaterializedViewRequest {
	s.ClusterBy = &clusterBy
	return s
}

func (s *AlterMaterializedViewRequest) WithDropClusteringKey(dropClusteringKey bool) *AlterMaterializedViewRequest {
	s.DropClusteringKey = &dropClusteringKey
	return s
}

func (s *AlterMaterializedViewRequest) WithSuspendRecluster(suspendRecluster bool) *AlterMaterializedViewRequest {
	s.SuspendRecluster = &suspendRecluster
	return s
}

func (s *AlterMaterializedViewRequest) WithResumeRecluster(resumeRecluster bool) *AlterMaterializedViewRequest {
	s.ResumeRecluster = &resumeRecluster
	return s
}

func (s *AlterMaterializedViewRequest) WithSuspend(suspend bool) *AlterMaterializedViewRequest {
	s.Suspend = &suspend
	return s
}

func (s *AlterMaterializedViewRequest) WithResume(resume bool) *AlterMaterializedViewRequest {
	s.Resume = &resume
	return s
}

func (s *AlterMaterializedViewRequest) WithSet(set MaterializedViewSetRequest) *AlterMaterializedViewRequest {
	s.Set = &set
	return s
}

func (s *AlterMaterializedViewRequest) WithUnset(unset MaterializedViewUnsetRequest) *AlterMaterializedViewRequest {
	s.Unset = &unset
	return s
}

func NewMaterializedViewSetRequest() *MaterializedViewSetRequest {
	s := MaterializedViewSetRequest{}
	return &s
}

func (s *MaterializedViewSetRequest) WithSecure(secure bool) *MaterializedViewSetRequest {
	s.Secure = &secure
	return s
}

func (s *MaterializedViewSetRequest) WithComment(comment string) *MaterializedViewSetRequest {
	s.Comment = &comment
	return s
}

func NewMaterializedViewUnsetRequest() *MaterializedViewUnsetRequest {
	s := MaterializedViewUnsetRequest{}
	return &s
}

func (s *MaterializedViewUnsetRequest) WithSecure(secure bool) *MaterializedViewUnsetRequest {
	s.Secure = &secure
	return s
}

func (s *MaterializedViewUnsetRequest) WithComment(comment bool) *MaterializedViewUnsetRequest {
	s.Comment = &comment
	return s
}

func NewDropMaterializedViewRequest(
	name SchemaObjectIdentifier,
) *DropMaterializedViewRequest {
	s := DropMaterializedViewRequest{}
	s.name = name
	return &s
}

func (s *DropMaterializedViewRequest) WithIfExists(ifExists bool) *DropMaterializedViewRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowMaterializedViewRequest() *ShowMaterializedViewRequest {
	s := ShowMaterializedViewRequest{}
	return &s
}

func (s *ShowMaterializedViewRequest) WithLike(like Like) *ShowMaterializedViewRequest {
	s.Like = &like
	return s
}

func (s *ShowMaterializedViewRequest) WithIn(in In) *ShowMaterializedViewRequest {
	s.In = &in
	return s
}

func NewDescribeMaterializedViewRequest(
	name SchemaObjectIdentifier,
) *DescribeMaterializedViewRequest {
	s := DescribeMaterializedViewRequest{}
	s.name = name
	return &s
}
