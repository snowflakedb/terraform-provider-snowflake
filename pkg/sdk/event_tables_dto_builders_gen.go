// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

func NewCreateEventTableRequest(
	name SchemaObjectIdentifier,
) *CreateEventTableRequest {
	s := CreateEventTableRequest{}
	s.name = name
	return &s
}

func (s *CreateEventTableRequest) WithOrReplace(orReplace bool) *CreateEventTableRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateEventTableRequest) WithIfNotExists(ifNotExists bool) *CreateEventTableRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateEventTableRequest) WithClusterBy(clusterBy []string) *CreateEventTableRequest {
	s.ClusterBy = clusterBy
	return s
}

func (s *CreateEventTableRequest) WithDataRetentionTimeInDays(dataRetentionTimeInDays int) *CreateEventTableRequest {
	s.DataRetentionTimeInDays = &dataRetentionTimeInDays
	return s
}

func (s *CreateEventTableRequest) WithMaxDataExtensionTimeInDays(maxDataExtensionTimeInDays int) *CreateEventTableRequest {
	s.MaxDataExtensionTimeInDays = &maxDataExtensionTimeInDays
	return s
}

func (s *CreateEventTableRequest) WithChangeTracking(changeTracking bool) *CreateEventTableRequest {
	s.ChangeTracking = &changeTracking
	return s
}

func (s *CreateEventTableRequest) WithDefaultDdlCollation(defaultDdlCollation string) *CreateEventTableRequest {
	s.DefaultDdlCollation = &defaultDdlCollation
	return s
}

func (s *CreateEventTableRequest) WithCopyGrants(copyGrants bool) *CreateEventTableRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateEventTableRequest) WithComment(comment string) *CreateEventTableRequest {
	s.Comment = &comment
	return s
}

func (s *CreateEventTableRequest) WithRowAccessPolicy(rowAccessPolicy TableRowAccessPolicy) *CreateEventTableRequest {
	s.RowAccessPolicy = &rowAccessPolicy
	return s
}

func (s *CreateEventTableRequest) WithTag(tag []TagAssociation) *CreateEventTableRequest {
	s.Tag = tag
	return s
}

func NewShowEventTableRequest() *ShowEventTableRequest {
	s := ShowEventTableRequest{}
	return &s
}

func (s *ShowEventTableRequest) WithTerse(terse bool) *ShowEventTableRequest {
	s.Terse = &terse
	return s
}

func (s *ShowEventTableRequest) WithLike(like Like) *ShowEventTableRequest {
	s.Like = &like
	return s
}

func (s *ShowEventTableRequest) WithIn(in In) *ShowEventTableRequest {
	s.In = &in
	return s
}

func (s *ShowEventTableRequest) WithStartsWith(startsWith string) *ShowEventTableRequest {
	s.StartsWith = &startsWith
	return s
}

func (s *ShowEventTableRequest) WithLimit(limit LimitFrom) *ShowEventTableRequest {
	s.Limit = &limit
	return s
}

func NewDescribeEventTableRequest(
	name SchemaObjectIdentifier,
) *DescribeEventTableRequest {
	s := DescribeEventTableRequest{}
	s.name = name
	return &s
}

func NewDropEventTableRequest(
	name SchemaObjectIdentifier,
) *DropEventTableRequest {
	s := DropEventTableRequest{}
	s.name = name
	return &s
}

func (s *DropEventTableRequest) WithIfExists(ifExists bool) *DropEventTableRequest {
	s.IfExists = &ifExists
	return s
}

func (s *DropEventTableRequest) WithRestrict(restrict bool) *DropEventTableRequest {
	s.Restrict = &restrict
	return s
}

func NewAlterEventTableRequest(
	name SchemaObjectIdentifier,
) *AlterEventTableRequest {
	s := AlterEventTableRequest{}
	s.name = name
	return &s
}

func (s *AlterEventTableRequest) WithIfNotExists(ifNotExists bool) *AlterEventTableRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *AlterEventTableRequest) WithSet(set EventTableSetRequest) *AlterEventTableRequest {
	s.Set = &set
	return s
}

func (s *AlterEventTableRequest) WithUnset(unset EventTableUnsetRequest) *AlterEventTableRequest {
	s.Unset = &unset
	return s
}

func (s *AlterEventTableRequest) WithAddRowAccessPolicy(addRowAccessPolicy EventTableAddRowAccessPolicyRequest) *AlterEventTableRequest {
	s.AddRowAccessPolicy = &addRowAccessPolicy
	return s
}

func (s *AlterEventTableRequest) WithDropRowAccessPolicy(dropRowAccessPolicy EventTableDropRowAccessPolicyRequest) *AlterEventTableRequest {
	s.DropRowAccessPolicy = &dropRowAccessPolicy
	return s
}

func (s *AlterEventTableRequest) WithDropAndAddRowAccessPolicy(dropAndAddRowAccessPolicy EventTableDropAndAddRowAccessPolicyRequest) *AlterEventTableRequest {
	s.DropAndAddRowAccessPolicy = &dropAndAddRowAccessPolicy
	return s
}

func (s *AlterEventTableRequest) WithDropAllRowAccessPolicies(dropAllRowAccessPolicies bool) *AlterEventTableRequest {
	s.DropAllRowAccessPolicies = &dropAllRowAccessPolicies
	return s
}

func (s *AlterEventTableRequest) WithClusteringAction(clusteringAction EventTableClusteringActionRequest) *AlterEventTableRequest {
	s.ClusteringAction = &clusteringAction
	return s
}

func (s *AlterEventTableRequest) WithSearchOptimizationAction(searchOptimizationAction EventTableSearchOptimizationActionRequest) *AlterEventTableRequest {
	s.SearchOptimizationAction = &searchOptimizationAction
	return s
}

func (s *AlterEventTableRequest) WithSetTags(setTags []TagAssociation) *AlterEventTableRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterEventTableRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterEventTableRequest {
	s.UnsetTags = unsetTags
	return s
}

func (s *AlterEventTableRequest) WithRenameTo(renameTo SchemaObjectIdentifier) *AlterEventTableRequest {
	s.RenameTo = &renameTo
	return s
}

func NewEventTableSetRequest() *EventTableSetRequest {
	s := EventTableSetRequest{}
	return &s
}

func (s *EventTableSetRequest) WithDataRetentionTimeInDays(dataRetentionTimeInDays int) *EventTableSetRequest {
	s.DataRetentionTimeInDays = &dataRetentionTimeInDays
	return s
}

func (s *EventTableSetRequest) WithMaxDataExtensionTimeInDays(maxDataExtensionTimeInDays int) *EventTableSetRequest {
	s.MaxDataExtensionTimeInDays = &maxDataExtensionTimeInDays
	return s
}

func (s *EventTableSetRequest) WithChangeTracking(changeTracking bool) *EventTableSetRequest {
	s.ChangeTracking = &changeTracking
	return s
}

func (s *EventTableSetRequest) WithComment(comment string) *EventTableSetRequest {
	s.Comment = &comment
	return s
}

func NewEventTableUnsetRequest() *EventTableUnsetRequest {
	s := EventTableUnsetRequest{}
	return &s
}

func (s *EventTableUnsetRequest) WithDataRetentionTimeInDays(dataRetentionTimeInDays bool) *EventTableUnsetRequest {
	s.DataRetentionTimeInDays = &dataRetentionTimeInDays
	return s
}

func (s *EventTableUnsetRequest) WithMaxDataExtensionTimeInDays(maxDataExtensionTimeInDays bool) *EventTableUnsetRequest {
	s.MaxDataExtensionTimeInDays = &maxDataExtensionTimeInDays
	return s
}

func (s *EventTableUnsetRequest) WithChangeTracking(changeTracking bool) *EventTableUnsetRequest {
	s.ChangeTracking = &changeTracking
	return s
}

func (s *EventTableUnsetRequest) WithComment(comment bool) *EventTableUnsetRequest {
	s.Comment = &comment
	return s
}

func NewEventTableAddRowAccessPolicyRequest(
	rowAccessPolicy SchemaObjectIdentifier,
	on []string,
) *EventTableAddRowAccessPolicyRequest {
	s := EventTableAddRowAccessPolicyRequest{}
	s.RowAccessPolicy = rowAccessPolicy
	s.On = on
	return &s
}

func NewEventTableDropRowAccessPolicyRequest(
	rowAccessPolicy SchemaObjectIdentifier,
) *EventTableDropRowAccessPolicyRequest {
	s := EventTableDropRowAccessPolicyRequest{}
	s.RowAccessPolicy = rowAccessPolicy
	return &s
}

func NewEventTableDropAndAddRowAccessPolicyRequest(
	drop EventTableDropRowAccessPolicyRequest,
	add EventTableAddRowAccessPolicyRequest,
) *EventTableDropAndAddRowAccessPolicyRequest {
	s := EventTableDropAndAddRowAccessPolicyRequest{}
	s.Drop = drop
	s.Add = add
	return &s
}

func NewEventTableClusteringActionRequest() *EventTableClusteringActionRequest {
	s := EventTableClusteringActionRequest{}
	return &s
}

// adjusted manually
func (s *EventTableClusteringActionRequest) WithClusterBy(clusterBy *[]string) *EventTableClusteringActionRequest {
	s.ClusterBy = clusterBy
	return s
}

func (s *EventTableClusteringActionRequest) WithSuspendRecluster(suspendRecluster bool) *EventTableClusteringActionRequest {
	s.SuspendRecluster = &suspendRecluster
	return s
}

func (s *EventTableClusteringActionRequest) WithResumeRecluster(resumeRecluster bool) *EventTableClusteringActionRequest {
	s.ResumeRecluster = &resumeRecluster
	return s
}

func (s *EventTableClusteringActionRequest) WithDropClusteringKey(dropClusteringKey bool) *EventTableClusteringActionRequest {
	s.DropClusteringKey = &dropClusteringKey
	return s
}

func NewEventTableSearchOptimizationActionRequest() *EventTableSearchOptimizationActionRequest {
	s := EventTableSearchOptimizationActionRequest{}
	return &s
}

func (s *EventTableSearchOptimizationActionRequest) WithAdd(add SearchOptimizationRequest) *EventTableSearchOptimizationActionRequest {
	s.Add = &add
	return s
}

func (s *EventTableSearchOptimizationActionRequest) WithDrop(drop SearchOptimizationRequest) *EventTableSearchOptimizationActionRequest {
	s.Drop = &drop
	return s
}

func NewSearchOptimizationRequest() *SearchOptimizationRequest {
	s := SearchOptimizationRequest{}
	return &s
}

func (s *SearchOptimizationRequest) WithOn(on []string) *SearchOptimizationRequest {
	s.On = on
	return s
}
