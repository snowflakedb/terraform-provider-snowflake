// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateDbtProjectRequest(
	name SchemaObjectIdentifier,
) *CreateDbtProjectRequest {
	s := CreateDbtProjectRequest{}
	s.name = name
	return &s
}

func (s *CreateDbtProjectRequest) WithOrReplace(OrReplace bool) *CreateDbtProjectRequest {
	s.OrReplace = &OrReplace
	return s
}

func (s *CreateDbtProjectRequest) WithIfNotExists(IfNotExists bool) *CreateDbtProjectRequest {
	s.IfNotExists = &IfNotExists
	return s
}

func (s *CreateDbtProjectRequest) WithFrom(From string) *CreateDbtProjectRequest {
	s.From = &From
	return s
}

func (s *CreateDbtProjectRequest) WithDefaultArgs(DefaultArgs string) *CreateDbtProjectRequest {
	s.DefaultArgs = &DefaultArgs
	return s
}

func (s *CreateDbtProjectRequest) WithDefaultVersion(DefaultVersion DbtProjectDefaultVersion) *CreateDbtProjectRequest {
	s.DefaultVersion = &DefaultVersion
	return s
}

func (s *CreateDbtProjectRequest) WithComment(Comment string) *CreateDbtProjectRequest {
	s.Comment = &Comment
	return s
}

func NewAlterDbtProjectRequest(
	name SchemaObjectIdentifier,
) *AlterDbtProjectRequest {
	s := AlterDbtProjectRequest{}
	s.name = name
	return &s
}

func (s *AlterDbtProjectRequest) WithIfExists(IfExists bool) *AlterDbtProjectRequest {
	s.IfExists = &IfExists
	return s
}

func (s *AlterDbtProjectRequest) WithSet(Set DbtProjectSetRequest) *AlterDbtProjectRequest {
	s.Set = &Set
	return s
}

func (s *AlterDbtProjectRequest) WithUnset(Unset DbtProjectUnsetRequest) *AlterDbtProjectRequest {
	s.Unset = &Unset
	return s
}

func NewDbtProjectSetRequest() *DbtProjectSetRequest {
	return &DbtProjectSetRequest{}
}

func (s *DbtProjectSetRequest) WithDefaultArgs(DefaultArgs string) *DbtProjectSetRequest {
	s.DefaultArgs = &DefaultArgs
	return s
}

func (s *DbtProjectSetRequest) WithDefaultVersion(DefaultVersion DbtProjectDefaultVersion) *DbtProjectSetRequest {
	s.DefaultVersion = &DefaultVersion
	return s
}

func (s *DbtProjectSetRequest) WithComment(Comment string) *DbtProjectSetRequest {
	s.Comment = &Comment
	return s
}

func NewDbtProjectUnsetRequest() *DbtProjectUnsetRequest {
	return &DbtProjectUnsetRequest{}
}

func (s *DbtProjectUnsetRequest) WithDefaultArgs(DefaultArgs bool) *DbtProjectUnsetRequest {
	s.DefaultArgs = &DefaultArgs
	return s
}

func (s *DbtProjectUnsetRequest) WithDefaultVersion(DefaultVersion bool) *DbtProjectUnsetRequest {
	s.DefaultVersion = &DefaultVersion
	return s
}

func (s *DbtProjectUnsetRequest) WithComment(Comment bool) *DbtProjectUnsetRequest {
	s.Comment = &Comment
	return s
}

func NewDropDbtProjectRequest(
	name SchemaObjectIdentifier,
) *DropDbtProjectRequest {
	s := DropDbtProjectRequest{}
	s.name = name
	return &s
}

func (s *DropDbtProjectRequest) WithIfExists(IfExists bool) *DropDbtProjectRequest {
	s.IfExists = &IfExists
	return s
}

func NewShowDbtProjectRequest() *ShowDbtProjectRequest {
	return &ShowDbtProjectRequest{}
}

func (s *ShowDbtProjectRequest) WithLike(Like Like) *ShowDbtProjectRequest {
	s.Like = &Like
	return s
}

func (s *ShowDbtProjectRequest) WithIn(In In) *ShowDbtProjectRequest {
	s.In = &In
	return s
}

func NewDescribeDbtProjectRequest(
	name SchemaObjectIdentifier,
) *DescribeDbtProjectRequest {
	s := DescribeDbtProjectRequest{}
	s.name = name
	return &s
}
