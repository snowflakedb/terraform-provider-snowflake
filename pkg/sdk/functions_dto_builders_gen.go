// Code generated by SDK builder generator (v0.1.0); DO NOT EDIT.

package sdk

import "github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk/datatypes"

func NewCreateForJavaFunctionRequest(
	name SchemaObjectIdentifier,
	returns FunctionReturnsRequest,
	handler string,
) *CreateForJavaFunctionRequest {
	s := CreateForJavaFunctionRequest{}
	s.name = name
	s.Returns = returns
	s.Handler = handler
	return &s
}

func (s *CreateForJavaFunctionRequest) WithOrReplace(orReplace bool) *CreateForJavaFunctionRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateForJavaFunctionRequest) WithTemporary(temporary bool) *CreateForJavaFunctionRequest {
	s.Temporary = &temporary
	return s
}

func (s *CreateForJavaFunctionRequest) WithSecure(secure bool) *CreateForJavaFunctionRequest {
	s.Secure = &secure
	return s
}

func (s *CreateForJavaFunctionRequest) WithIfNotExists(ifNotExists bool) *CreateForJavaFunctionRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateForJavaFunctionRequest) WithArguments(arguments []FunctionArgumentRequest) *CreateForJavaFunctionRequest {
	s.Arguments = arguments
	return s
}

func (s *CreateForJavaFunctionRequest) WithCopyGrants(copyGrants bool) *CreateForJavaFunctionRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateForJavaFunctionRequest) WithReturnNullValues(returnNullValues ReturnNullValues) *CreateForJavaFunctionRequest {
	s.ReturnNullValues = &returnNullValues
	return s
}

func (s *CreateForJavaFunctionRequest) WithNullInputBehavior(nullInputBehavior NullInputBehavior) *CreateForJavaFunctionRequest {
	s.NullInputBehavior = &nullInputBehavior
	return s
}

func (s *CreateForJavaFunctionRequest) WithReturnResultsBehavior(returnResultsBehavior ReturnResultsBehavior) *CreateForJavaFunctionRequest {
	s.ReturnResultsBehavior = &returnResultsBehavior
	return s
}

func (s *CreateForJavaFunctionRequest) WithRuntimeVersion(runtimeVersion string) *CreateForJavaFunctionRequest {
	s.RuntimeVersion = &runtimeVersion
	return s
}

func (s *CreateForJavaFunctionRequest) WithComment(comment string) *CreateForJavaFunctionRequest {
	s.Comment = &comment
	return s
}

func (s *CreateForJavaFunctionRequest) WithImports(imports []FunctionImportRequest) *CreateForJavaFunctionRequest {
	s.Imports = imports
	return s
}

func (s *CreateForJavaFunctionRequest) WithPackages(packages []FunctionPackageRequest) *CreateForJavaFunctionRequest {
	s.Packages = packages
	return s
}

func (s *CreateForJavaFunctionRequest) WithExternalAccessIntegrations(externalAccessIntegrations []AccountObjectIdentifier) *CreateForJavaFunctionRequest {
	s.ExternalAccessIntegrations = externalAccessIntegrations
	return s
}

func (s *CreateForJavaFunctionRequest) WithSecrets(secrets []SecretReference) *CreateForJavaFunctionRequest {
	s.Secrets = secrets
	return s
}

func (s *CreateForJavaFunctionRequest) WithTargetPath(targetPath string) *CreateForJavaFunctionRequest {
	s.TargetPath = &targetPath
	return s
}

func (s *CreateForJavaFunctionRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *CreateForJavaFunctionRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *CreateForJavaFunctionRequest) WithLogLevel(logLevel LogLevel) *CreateForJavaFunctionRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *CreateForJavaFunctionRequest) WithMetricLevel(metricLevel MetricLevel) *CreateForJavaFunctionRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *CreateForJavaFunctionRequest) WithTraceLevel(traceLevel TraceLevel) *CreateForJavaFunctionRequest {
	s.TraceLevel = &traceLevel
	return s
}

func (s *CreateForJavaFunctionRequest) WithFunctionDefinition(functionDefinition string) *CreateForJavaFunctionRequest {
	s.FunctionDefinition = &functionDefinition
	return s
}

func NewFunctionArgumentRequest(
	argName string,
	argDataType datatypes.DataType,
) *FunctionArgumentRequest {
	s := FunctionArgumentRequest{}
	s.ArgName = argName
	s.ArgDataType = argDataType
	return &s
}

func (s *FunctionArgumentRequest) WithArgDataTypeOld(argDataTypeOld DataType) *FunctionArgumentRequest {
	s.ArgDataTypeOld = argDataTypeOld
	return s
}

func (s *FunctionArgumentRequest) WithDefaultValue(defaultValue string) *FunctionArgumentRequest {
	s.DefaultValue = &defaultValue
	return s
}

func NewFunctionReturnsRequest() *FunctionReturnsRequest {
	s := FunctionReturnsRequest{}
	return &s
}

func (s *FunctionReturnsRequest) WithResultDataType(resultDataType FunctionReturnsResultDataTypeRequest) *FunctionReturnsRequest {
	s.ResultDataType = &resultDataType
	return s
}

func (s *FunctionReturnsRequest) WithTable(table FunctionReturnsTableRequest) *FunctionReturnsRequest {
	s.Table = &table
	return s
}

func NewFunctionReturnsResultDataTypeRequest(
	resultDataType datatypes.DataType,
) *FunctionReturnsResultDataTypeRequest {
	s := FunctionReturnsResultDataTypeRequest{}
	s.ResultDataType = resultDataType
	return &s
}

func (s *FunctionReturnsResultDataTypeRequest) WithResultDataTypeOld(resultDataTypeOld DataType) *FunctionReturnsResultDataTypeRequest {
	s.ResultDataTypeOld = resultDataTypeOld
	return s
}

func NewFunctionReturnsTableRequest() *FunctionReturnsTableRequest {
	s := FunctionReturnsTableRequest{}
	return &s
}

func (s *FunctionReturnsTableRequest) WithColumns(columns []FunctionColumnRequest) *FunctionReturnsTableRequest {
	s.Columns = columns
	return s
}

func NewFunctionColumnRequest(
	columnName string,
	columnDataType datatypes.DataType,
) *FunctionColumnRequest {
	s := FunctionColumnRequest{}
	s.ColumnName = columnName
	s.ColumnDataType = columnDataType
	return &s
}

func (s *FunctionColumnRequest) WithColumnDataTypeOld(columnDataTypeOld DataType) *FunctionColumnRequest {
	s.ColumnDataTypeOld = columnDataTypeOld
	return s
}

func NewFunctionImportRequest() *FunctionImportRequest {
	s := FunctionImportRequest{}
	return &s
}

func (s *FunctionImportRequest) WithFunctionImport(functionImport string) *FunctionImportRequest {
	s.FunctionImport = functionImport
	return s
}

func NewFunctionPackageRequest() *FunctionPackageRequest {
	s := FunctionPackageRequest{}
	return &s
}

func (s *FunctionPackageRequest) WithFunctionPackage(functionPackage string) *FunctionPackageRequest {
	s.FunctionPackage = functionPackage
	return s
}

func NewCreateForJavascriptFunctionRequest(
	name SchemaObjectIdentifier,
	returns FunctionReturnsRequest,
	functionDefinition string,
) *CreateForJavascriptFunctionRequest {
	s := CreateForJavascriptFunctionRequest{}
	s.name = name
	s.Returns = returns
	s.FunctionDefinition = functionDefinition
	return &s
}

func (s *CreateForJavascriptFunctionRequest) WithOrReplace(orReplace bool) *CreateForJavascriptFunctionRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithTemporary(temporary bool) *CreateForJavascriptFunctionRequest {
	s.Temporary = &temporary
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithSecure(secure bool) *CreateForJavascriptFunctionRequest {
	s.Secure = &secure
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithArguments(arguments []FunctionArgumentRequest) *CreateForJavascriptFunctionRequest {
	s.Arguments = arguments
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithCopyGrants(copyGrants bool) *CreateForJavascriptFunctionRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithReturnNullValues(returnNullValues ReturnNullValues) *CreateForJavascriptFunctionRequest {
	s.ReturnNullValues = &returnNullValues
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithNullInputBehavior(nullInputBehavior NullInputBehavior) *CreateForJavascriptFunctionRequest {
	s.NullInputBehavior = &nullInputBehavior
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithReturnResultsBehavior(returnResultsBehavior ReturnResultsBehavior) *CreateForJavascriptFunctionRequest {
	s.ReturnResultsBehavior = &returnResultsBehavior
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithComment(comment string) *CreateForJavascriptFunctionRequest {
	s.Comment = &comment
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *CreateForJavascriptFunctionRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithLogLevel(logLevel LogLevel) *CreateForJavascriptFunctionRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithMetricLevel(metricLevel MetricLevel) *CreateForJavascriptFunctionRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *CreateForJavascriptFunctionRequest) WithTraceLevel(traceLevel TraceLevel) *CreateForJavascriptFunctionRequest {
	s.TraceLevel = &traceLevel
	return s
}

func NewCreateForPythonFunctionRequest(
	name SchemaObjectIdentifier,
	returns FunctionReturnsRequest,
	runtimeVersion string,
	handler string,
) *CreateForPythonFunctionRequest {
	s := CreateForPythonFunctionRequest{}
	s.name = name
	s.Returns = returns
	s.RuntimeVersion = runtimeVersion
	s.Handler = handler
	return &s
}

func (s *CreateForPythonFunctionRequest) WithOrReplace(orReplace bool) *CreateForPythonFunctionRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateForPythonFunctionRequest) WithTemporary(temporary bool) *CreateForPythonFunctionRequest {
	s.Temporary = &temporary
	return s
}

func (s *CreateForPythonFunctionRequest) WithSecure(secure bool) *CreateForPythonFunctionRequest {
	s.Secure = &secure
	return s
}

func (s *CreateForPythonFunctionRequest) WithAggregate(aggregate bool) *CreateForPythonFunctionRequest {
	s.Aggregate = &aggregate
	return s
}

func (s *CreateForPythonFunctionRequest) WithIfNotExists(ifNotExists bool) *CreateForPythonFunctionRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateForPythonFunctionRequest) WithArguments(arguments []FunctionArgumentRequest) *CreateForPythonFunctionRequest {
	s.Arguments = arguments
	return s
}

func (s *CreateForPythonFunctionRequest) WithCopyGrants(copyGrants bool) *CreateForPythonFunctionRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateForPythonFunctionRequest) WithReturnNullValues(returnNullValues ReturnNullValues) *CreateForPythonFunctionRequest {
	s.ReturnNullValues = &returnNullValues
	return s
}

func (s *CreateForPythonFunctionRequest) WithNullInputBehavior(nullInputBehavior NullInputBehavior) *CreateForPythonFunctionRequest {
	s.NullInputBehavior = &nullInputBehavior
	return s
}

func (s *CreateForPythonFunctionRequest) WithReturnResultsBehavior(returnResultsBehavior ReturnResultsBehavior) *CreateForPythonFunctionRequest {
	s.ReturnResultsBehavior = &returnResultsBehavior
	return s
}

func (s *CreateForPythonFunctionRequest) WithComment(comment string) *CreateForPythonFunctionRequest {
	s.Comment = &comment
	return s
}

func (s *CreateForPythonFunctionRequest) WithImports(imports []FunctionImportRequest) *CreateForPythonFunctionRequest {
	s.Imports = imports
	return s
}

func (s *CreateForPythonFunctionRequest) WithPackages(packages []FunctionPackageRequest) *CreateForPythonFunctionRequest {
	s.Packages = packages
	return s
}

func (s *CreateForPythonFunctionRequest) WithExternalAccessIntegrations(externalAccessIntegrations []AccountObjectIdentifier) *CreateForPythonFunctionRequest {
	s.ExternalAccessIntegrations = externalAccessIntegrations
	return s
}

func (s *CreateForPythonFunctionRequest) WithSecrets(secrets []SecretReference) *CreateForPythonFunctionRequest {
	s.Secrets = secrets
	return s
}

func (s *CreateForPythonFunctionRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *CreateForPythonFunctionRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *CreateForPythonFunctionRequest) WithLogLevel(logLevel LogLevel) *CreateForPythonFunctionRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *CreateForPythonFunctionRequest) WithMetricLevel(metricLevel MetricLevel) *CreateForPythonFunctionRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *CreateForPythonFunctionRequest) WithTraceLevel(traceLevel TraceLevel) *CreateForPythonFunctionRequest {
	s.TraceLevel = &traceLevel
	return s
}

func (s *CreateForPythonFunctionRequest) WithFunctionDefinition(functionDefinition string) *CreateForPythonFunctionRequest {
	s.FunctionDefinition = &functionDefinition
	return s
}

func NewCreateForScalaFunctionRequest(
	name SchemaObjectIdentifier,
	resultDataType datatypes.DataType,
	runtimeVersion string,
	handler string,
) *CreateForScalaFunctionRequest {
	s := CreateForScalaFunctionRequest{}
	s.name = name
	s.ResultDataType = resultDataType
	s.RuntimeVersion = runtimeVersion
	s.Handler = handler
	return &s
}

func (s *CreateForScalaFunctionRequest) WithOrReplace(orReplace bool) *CreateForScalaFunctionRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateForScalaFunctionRequest) WithTemporary(temporary bool) *CreateForScalaFunctionRequest {
	s.Temporary = &temporary
	return s
}

func (s *CreateForScalaFunctionRequest) WithSecure(secure bool) *CreateForScalaFunctionRequest {
	s.Secure = &secure
	return s
}

func (s *CreateForScalaFunctionRequest) WithIfNotExists(ifNotExists bool) *CreateForScalaFunctionRequest {
	s.IfNotExists = &ifNotExists
	return s
}

func (s *CreateForScalaFunctionRequest) WithArguments(arguments []FunctionArgumentRequest) *CreateForScalaFunctionRequest {
	s.Arguments = arguments
	return s
}

func (s *CreateForScalaFunctionRequest) WithCopyGrants(copyGrants bool) *CreateForScalaFunctionRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateForScalaFunctionRequest) WithResultDataTypeOld(resultDataTypeOld DataType) *CreateForScalaFunctionRequest {
	s.ResultDataTypeOld = resultDataTypeOld
	return s
}

func (s *CreateForScalaFunctionRequest) WithReturnNullValues(returnNullValues ReturnNullValues) *CreateForScalaFunctionRequest {
	s.ReturnNullValues = &returnNullValues
	return s
}

func (s *CreateForScalaFunctionRequest) WithNullInputBehavior(nullInputBehavior NullInputBehavior) *CreateForScalaFunctionRequest {
	s.NullInputBehavior = &nullInputBehavior
	return s
}

func (s *CreateForScalaFunctionRequest) WithReturnResultsBehavior(returnResultsBehavior ReturnResultsBehavior) *CreateForScalaFunctionRequest {
	s.ReturnResultsBehavior = &returnResultsBehavior
	return s
}

func (s *CreateForScalaFunctionRequest) WithComment(comment string) *CreateForScalaFunctionRequest {
	s.Comment = &comment
	return s
}

func (s *CreateForScalaFunctionRequest) WithImports(imports []FunctionImportRequest) *CreateForScalaFunctionRequest {
	s.Imports = imports
	return s
}

func (s *CreateForScalaFunctionRequest) WithPackages(packages []FunctionPackageRequest) *CreateForScalaFunctionRequest {
	s.Packages = packages
	return s
}

func (s *CreateForScalaFunctionRequest) WithExternalAccessIntegrations(externalAccessIntegrations []AccountObjectIdentifier) *CreateForScalaFunctionRequest {
	s.ExternalAccessIntegrations = externalAccessIntegrations
	return s
}

func (s *CreateForScalaFunctionRequest) WithSecrets(secrets []SecretReference) *CreateForScalaFunctionRequest {
	s.Secrets = secrets
	return s
}

func (s *CreateForScalaFunctionRequest) WithTargetPath(targetPath string) *CreateForScalaFunctionRequest {
	s.TargetPath = &targetPath
	return s
}

func (s *CreateForScalaFunctionRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *CreateForScalaFunctionRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *CreateForScalaFunctionRequest) WithLogLevel(logLevel LogLevel) *CreateForScalaFunctionRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *CreateForScalaFunctionRequest) WithMetricLevel(metricLevel MetricLevel) *CreateForScalaFunctionRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *CreateForScalaFunctionRequest) WithTraceLevel(traceLevel TraceLevel) *CreateForScalaFunctionRequest {
	s.TraceLevel = &traceLevel
	return s
}

func (s *CreateForScalaFunctionRequest) WithFunctionDefinition(functionDefinition string) *CreateForScalaFunctionRequest {
	s.FunctionDefinition = &functionDefinition
	return s
}

func NewCreateForSQLFunctionRequest(
	name SchemaObjectIdentifier,
	returns FunctionReturnsRequest,
	functionDefinition string,
) *CreateForSQLFunctionRequest {
	s := CreateForSQLFunctionRequest{}
	s.name = name
	s.Returns = returns
	s.FunctionDefinition = functionDefinition
	return &s
}

func (s *CreateForSQLFunctionRequest) WithOrReplace(orReplace bool) *CreateForSQLFunctionRequest {
	s.OrReplace = &orReplace
	return s
}

func (s *CreateForSQLFunctionRequest) WithTemporary(temporary bool) *CreateForSQLFunctionRequest {
	s.Temporary = &temporary
	return s
}

func (s *CreateForSQLFunctionRequest) WithSecure(secure bool) *CreateForSQLFunctionRequest {
	s.Secure = &secure
	return s
}

func (s *CreateForSQLFunctionRequest) WithArguments(arguments []FunctionArgumentRequest) *CreateForSQLFunctionRequest {
	s.Arguments = arguments
	return s
}

func (s *CreateForSQLFunctionRequest) WithCopyGrants(copyGrants bool) *CreateForSQLFunctionRequest {
	s.CopyGrants = &copyGrants
	return s
}

func (s *CreateForSQLFunctionRequest) WithReturnNullValues(returnNullValues ReturnNullValues) *CreateForSQLFunctionRequest {
	s.ReturnNullValues = &returnNullValues
	return s
}

func (s *CreateForSQLFunctionRequest) WithReturnResultsBehavior(returnResultsBehavior ReturnResultsBehavior) *CreateForSQLFunctionRequest {
	s.ReturnResultsBehavior = &returnResultsBehavior
	return s
}

func (s *CreateForSQLFunctionRequest) WithMemoizable(memoizable bool) *CreateForSQLFunctionRequest {
	s.Memoizable = &memoizable
	return s
}

func (s *CreateForSQLFunctionRequest) WithComment(comment string) *CreateForSQLFunctionRequest {
	s.Comment = &comment
	return s
}

func (s *CreateForSQLFunctionRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *CreateForSQLFunctionRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *CreateForSQLFunctionRequest) WithLogLevel(logLevel LogLevel) *CreateForSQLFunctionRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *CreateForSQLFunctionRequest) WithMetricLevel(metricLevel MetricLevel) *CreateForSQLFunctionRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *CreateForSQLFunctionRequest) WithTraceLevel(traceLevel TraceLevel) *CreateForSQLFunctionRequest {
	s.TraceLevel = &traceLevel
	return s
}

func NewAlterFunctionRequest(
	name SchemaObjectIdentifierWithArguments,
) *AlterFunctionRequest {
	s := AlterFunctionRequest{}
	s.name = name
	return &s
}

func (s *AlterFunctionRequest) WithIfExists(ifExists bool) *AlterFunctionRequest {
	s.IfExists = &ifExists
	return s
}

func (s *AlterFunctionRequest) WithRenameTo(renameTo SchemaObjectIdentifier) *AlterFunctionRequest {
	s.RenameTo = &renameTo
	return s
}

func (s *AlterFunctionRequest) WithSet(set FunctionSetRequest) *AlterFunctionRequest {
	s.Set = &set
	return s
}

func (s *AlterFunctionRequest) WithUnset(unset FunctionUnsetRequest) *AlterFunctionRequest {
	s.Unset = &unset
	return s
}

func (s *AlterFunctionRequest) WithSetSecure(setSecure bool) *AlterFunctionRequest {
	s.SetSecure = &setSecure
	return s
}

func (s *AlterFunctionRequest) WithUnsetSecure(unsetSecure bool) *AlterFunctionRequest {
	s.UnsetSecure = &unsetSecure
	return s
}

func (s *AlterFunctionRequest) WithSetTags(setTags []TagAssociation) *AlterFunctionRequest {
	s.SetTags = setTags
	return s
}

func (s *AlterFunctionRequest) WithUnsetTags(unsetTags []ObjectIdentifier) *AlterFunctionRequest {
	s.UnsetTags = unsetTags
	return s
}

func NewFunctionSetRequest() *FunctionSetRequest {
	s := FunctionSetRequest{}
	return &s
}

func (s *FunctionSetRequest) WithComment(comment string) *FunctionSetRequest {
	s.Comment = &comment
	return s
}

func (s *FunctionSetRequest) WithExternalAccessIntegrations(externalAccessIntegrations []AccountObjectIdentifier) *FunctionSetRequest {
	s.ExternalAccessIntegrations = externalAccessIntegrations
	return s
}

func (s *FunctionSetRequest) WithSecretsList(secretsList SecretsListRequest) *FunctionSetRequest {
	s.SecretsList = &secretsList
	return s
}

func (s *FunctionSetRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *FunctionSetRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *FunctionSetRequest) WithLogLevel(logLevel LogLevel) *FunctionSetRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *FunctionSetRequest) WithMetricLevel(metricLevel MetricLevel) *FunctionSetRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *FunctionSetRequest) WithTraceLevel(traceLevel TraceLevel) *FunctionSetRequest {
	s.TraceLevel = &traceLevel
	return s
}

func NewSecretsListRequest(
	secretsList []SecretReference,
) *SecretsListRequest {
	s := SecretsListRequest{}
	s.SecretsList = secretsList
	return &s
}

func NewFunctionUnsetRequest() *FunctionUnsetRequest {
	s := FunctionUnsetRequest{}
	return &s
}

func (s *FunctionUnsetRequest) WithComment(comment bool) *FunctionUnsetRequest {
	s.Comment = &comment
	return s
}

func (s *FunctionUnsetRequest) WithExternalAccessIntegrations(externalAccessIntegrations bool) *FunctionUnsetRequest {
	s.ExternalAccessIntegrations = &externalAccessIntegrations
	return s
}

func (s *FunctionUnsetRequest) WithEnableConsoleOutput(enableConsoleOutput bool) *FunctionUnsetRequest {
	s.EnableConsoleOutput = &enableConsoleOutput
	return s
}

func (s *FunctionUnsetRequest) WithLogLevel(logLevel bool) *FunctionUnsetRequest {
	s.LogLevel = &logLevel
	return s
}

func (s *FunctionUnsetRequest) WithMetricLevel(metricLevel bool) *FunctionUnsetRequest {
	s.MetricLevel = &metricLevel
	return s
}

func (s *FunctionUnsetRequest) WithTraceLevel(traceLevel bool) *FunctionUnsetRequest {
	s.TraceLevel = &traceLevel
	return s
}

func NewDropFunctionRequest(
	name SchemaObjectIdentifierWithArguments,
) *DropFunctionRequest {
	s := DropFunctionRequest{}
	s.name = name
	return &s
}

func (s *DropFunctionRequest) WithIfExists(ifExists bool) *DropFunctionRequest {
	s.IfExists = &ifExists
	return s
}

func NewShowFunctionRequest() *ShowFunctionRequest {
	s := ShowFunctionRequest{}
	return &s
}

func (s *ShowFunctionRequest) WithLike(like Like) *ShowFunctionRequest {
	s.Like = &like
	return s
}

func (s *ShowFunctionRequest) WithIn(in ExtendedIn) *ShowFunctionRequest {
	s.In = &in
	return s
}

func NewDescribeFunctionRequest(
	name SchemaObjectIdentifierWithArguments,
) *DescribeFunctionRequest {
	s := DescribeFunctionRequest{}
	s.name = name
	return &s
}
