package resources

import (
	"context"
	"fmt"
	"strings"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/internal/provider"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
)

var (
	accountParametersSchema     = make(map[string]*schema.Schema)
	accountParametersCustomDiff = ParametersCustomDiff(
		accountParametersProvider,
		// Bool parameters
		parameter[sdk.AccountParameter]{sdk.AccountParameterAbortDetachedQuery, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterAllowClientMFACaching, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterAllowIDToken, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterAutocommit, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientEnableLogInfoStatementParameters, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientMetadataRequestUseConnectionCtx, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientMetadataUseSessionDatabase, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientResultColumnCaseInsensitive, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientSessionKeepAlive, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDisableUiDownloadButton, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDisableUserPrivilegeGrants, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableAutomaticSensitiveDataClassificationLog, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableEgressCostOptimizer, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableIdentifierFirstLogin, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableInternalStagesPrivatelink, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableTriSecretAndRekeyOptOutForImageRepository, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableTriSecretAndRekeyOptOutForSpcsBlockStorage, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableUnhandledExceptionsReporting, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableUnloadPhysicalTypeOptimization, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableUnredactedQuerySyntaxError, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnableUnredactedSecureObjectError, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEnforceNetworkRulesForInternalStages, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterErrorOnNondeterministicMerge, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterErrorOnNondeterministicUpdate, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterExternalOAuthAddPrivilegedRolesToBlockedList, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterJdbcTreatDecimalAsInt, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterJdbcTreatTimestampNtzAsUtc, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterJdbcUseSessionTimezone, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterJsTreatIntegerAsBigInt, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterNoorderSequenceAsDefault, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterOAuthAddPrivilegedRolesToBlockedList, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterOdbcTreatDecimalAsInt, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPeriodicDataRekeying, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPipeExecutionPaused, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPreventUnloadToInlineURL, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPreventUnloadToInternalStages, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterQuotedIdentifiersIgnoreCase, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterReplaceInvalidCharacters, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterRequireStorageIntegrationForStageCreation, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterRequireStorageIntegrationForStageOperation, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterSsoLoginPage, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterStrictJsonOutput, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampDayIsAlways24h, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTransactionAbortOnError, valueTypeBool, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterUseCachedResult, valueTypeBool, sdk.ParameterTypeAccount},

		// Int parameters
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientEncryptionKeySize, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientMemoryLimit, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientPrefetchThreads, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientResultChunkSize, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientSessionKeepAliveHeartbeatFrequency, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDataRetentionTimeInDays, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterHybridTableLockTimeout, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterInitialReplicationSizeLimitInTB, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterJsonIndent, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterLockTimeout, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterMaxConcurrencyLevel, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterMaxDataExtensionTimeInDays, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterMinDataRetentionTimeInDays, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterMultiStatementCount, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterRowsPerResultset, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterStatementQueuedTimeoutInSeconds, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterStatementTimeoutInSeconds, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterSuspendTaskAfterNumFailures, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTaskAutoRetryAttempts, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTwoDigitCenturyStart, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterUserTaskMinimumTriggerIntervalInSeconds, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterUserTaskTimeoutMs, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterWeekOfYearPolicy, valueTypeInt, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterWeekStart, valueTypeInt, sdk.ParameterTypeAccount},

		// String parameters
		parameter[sdk.AccountParameter]{sdk.AccountParameterActivePythonProfiler, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterBaseLocationPrefix, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterBinaryInputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterBinaryOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterCatalog, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterCatalogSync, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterClientTimestampTypeMapping, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterCortexEnabledCrossRegion, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterCortexModelsAllowlist, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterCsvTimestampFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDateInputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDateOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDefaultDDLCollation, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDefaultNotebookComputePoolCpu, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDefaultNotebookComputePoolGpu, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDefaultNullOrdering, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterDefaultStreamlitNotebookWarehouse, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterEventTable, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterExternalVolume, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterGeographyOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterGeometryOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterListingAutoFulfillmentReplicationRefreshSchedule, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterLogLevel, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterMetricLevel, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterNetworkPolicy, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPythonProfilerModules, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterPythonProfilerTargetStage, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterQueryTag, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterS3StageVpceDnsName, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterSamlIdentityProvider, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterSearchPath, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterServerlessTaskMaxStatementSize, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterServerlessTaskMinStatementSize, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterSimulatedDataSharingConsumer, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterStorageSerializationPolicy, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampInputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampLtzOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampNtzOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampTypeMapping, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimestampTzOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimezone, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimeInputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTimeOutputFormat, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTraceLevel, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterTransactionDefaultIsolationLevel, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterUnsupportedDdlAction, valueTypeString, sdk.ParameterTypeAccount},
		parameter[sdk.AccountParameter]{sdk.AccountParameterUserTaskManagedInitialWarehouseSize, valueTypeString, sdk.ParameterTypeAccount},
	)
)

func init() {
	// TODO [SNOW-1645342]: move to the SDK
	AccountParameterFields := []parameterDef[sdk.AccountParameter]{
		// Bool parameters
		{Name: sdk.AccountParameterAbortDetachedQuery, Type: schema.TypeBool, Description: "Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption)."},
		{Name: sdk.AccountParameterAllowClientMFACaching, Type: schema.TypeBool, Description: "Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching)"},
		{Name: sdk.AccountParameterAllowIDToken, Type: schema.TypeBool, Description: "Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching)"},
		{Name: sdk.AccountParameterAutocommit, Type: schema.TypeBool, Description: "Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions)."},
		{Name: sdk.AccountParameterClientEnableLogInfoStatementParameters, Type: schema.TypeBool, Description: "Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters))."},
		{Name: sdk.AccountParameterClientMetadataRequestUseConnectionCtx, Type: schema.TypeBool, Description: "For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly."},
		{Name: sdk.AccountParameterClientMetadataUseSessionDatabase, Type: schema.TypeBool, Description: "For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database))."},
		{Name: sdk.AccountParameterClientResultColumnCaseInsensitive, Type: schema.TypeBool, Description: "Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC."},
		{Name: sdk.AccountParameterClientSessionKeepAlive, Type: schema.TypeBool, Description: "Parameter that indicates whether to force a user to log in again after a period of inactivity in the session."},
		{Name: sdk.AccountParameterDisableUiDownloadButton, Type: schema.TypeBool, Description: "Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem)."},
		{Name: sdk.AccountParameterDisableUserPrivilegeGrants, Type: schema.TypeBool, Description: "Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE_USER_PRIVILEGE_GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT <privileges> … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user)."},
		{Name: sdk.AccountParameterEnableAutomaticSensitiveDataClassificationLog, Type: schema.TypeBool, Description: "Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table."},
		{Name: sdk.AccountParameterEnableEgressCostOptimizer, Type: schema.TypeBool, Description: "Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer."},
		{Name: sdk.AccountParameterEnableIdentifierFirstLogin, Type: schema.TypeBool, Description: "Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login)."},
		{Name: sdk.AccountParameterEnableInternalStagesPrivatelink, Type: schema.TypeBool, Description: "Specifies whether the [SYSTEM$GET_PRIVATELINK_CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages."},
		{Name: sdk.AccountParameterEnableTriSecretAndRekeyOptOutForImageRepository, Type: schema.TypeBool, Description: "Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying)."},
		{Name: sdk.AccountParameterEnableTriSecretAndRekeyOptOutForSpcsBlockStorage, Type: schema.TypeBool, Description: "Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying)."},
		{Name: sdk.AccountParameterEnableUnhandledExceptionsReporting, Type: schema.TypeBool, Description: "Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages)."},
		{Name: sdk.AccountParameterEnableUnloadPhysicalTypeOptimization, Type: schema.TypeBool, Description: "Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table)."},
		{Name: sdk.AccountParameterEnableUnredactedQuerySyntaxError, Type: schema.TypeBool, Description: "Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users)."},
		{Name: sdk.AccountParameterEnableUnredactedSecureObjectError, Type: schema.TypeBool, Description: "Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_SECURE_OBJECT_ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error."},
		{Name: sdk.AccountParameterEnforceNetworkRulesForInternalStages, Type: schema.TypeBool, Description: "Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages)."},
		{Name: sdk.AccountParameterErrorOnNondeterministicMerge, Type: schema.TypeBool, Description: "Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row."},
		{Name: sdk.AccountParameterErrorOnNondeterministicUpdate, Type: schema.TypeBool, Description: "Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row."},
		{Name: sdk.AccountParameterExternalOAuthAddPrivilegedRolesToBlockedList, Type: schema.TypeBool, Description: "Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server."},
		{Name: sdk.AccountParameterJdbcTreatDecimalAsInt, Type: schema.TypeBool, Description: "Specifies how JDBC processes columns that have a scale of zero (0)."},
		{Name: sdk.AccountParameterJdbcTreatTimestampNtzAsUtc, Type: schema.TypeBool, Description: "Specifies how JDBC processes TIMESTAMP_NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc))."},
		{Name: sdk.AccountParameterJdbcUseSessionTimezone, Type: schema.TypeBool, Description: "Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class."},
		{Name: sdk.AccountParameterJsTreatIntegerAsBigInt, Type: schema.TypeBool, Description: "Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0)."},
		{Name: sdk.AccountParameterNoorderSequenceAsDefault, Type: schema.TypeBool, Description: "Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values)."},
		{Name: sdk.AccountParameterOAuthAddPrivilegedRolesToBlockedList, Type: schema.TypeBool, Description: "Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server."},
		{Name: sdk.AccountParameterOdbcTreatDecimalAsInt, Type: schema.TypeBool, Description: "Specifies how ODBC processes columns that have a scale of zero (0)."},
		{Name: sdk.AccountParameterPeriodicDataRekeying, Type: schema.TypeBool, Description: "It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying))."},
		{Name: sdk.AccountParameterPipeExecutionPaused, Type: schema.TypeBool, Description: "Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused))."},
		{Name: sdk.AccountParameterPreventUnloadToInlineURL, Type: schema.TypeBool, Description: "Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc)."},
		{Name: sdk.AccountParameterPreventUnloadToInternalStages, Type: schema.TypeBool, Description: "Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements."},
		{Name: sdk.AccountParameterQuotedIdentifiersIgnoreCase, Type: schema.TypeBool, Description: "Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter)."},
		{Name: sdk.AccountParameterReplaceInvalidCharacters, Type: schema.TypeBool, Description: "Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog."},
		{Name: sdk.AccountParameterRequireStorageIntegrationForStageCreation, Type: schema.TypeBool, Description: "Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location."},
		{Name: sdk.AccountParameterRequireStorageIntegrationForStageOperation, Type: schema.TypeBool, Description: "Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location."},
		{Name: sdk.AccountParameterSsoLoginPage, Type: schema.TypeBool, Description: "This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users."},
		{Name: sdk.AccountParameterStrictJsonOutput, Type: schema.TypeBool, Description: "This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON."},
		{Name: sdk.AccountParameterTimestampDayIsAlways24h, Type: schema.TypeBool, Description: "Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days."},
		{Name: sdk.AccountParameterTransactionAbortOnError, Type: schema.TypeBool, Description: "Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error."},
		{Name: sdk.AccountParameterUseCachedResult, Type: schema.TypeBool, Description: "Specifies whether to reuse persisted query results, if available, when a matching query is submitted."},

		// Int parameters
		{Name: sdk.AccountParameterClientEncryptionKeySize, Type: schema.TypeInt, Description: "Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE_FULL encryption type."},
		{Name: sdk.AccountParameterClientMemoryLimit, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(1)), Description: "Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB)."},
		{Name: sdk.AccountParameterClientPrefetchThreads, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(1)), Description: "Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance."},
		{Name: sdk.AccountParameterClientResultChunkSize, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(16)), Description: "Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks."},
		{Name: sdk.AccountParameterClientSessionKeepAliveHeartbeatFrequency, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(900)), Description: "Number of seconds in-between client attempts to update the token for the session."},
		{Name: sdk.AccountParameterDataRetentionTimeInDays, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel)."},
		{Name: sdk.AccountParameterHybridTableLockTimeout, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement."},
		{Name: sdk.AccountParameterJsonIndent, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element."},
		{Name: sdk.AccountParameterLockTimeout, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement."},
		{Name: sdk.AccountParameterMaxConcurrencyLevel, Type: schema.TypeInt, Description: "Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level))."},
		{Name: sdk.AccountParameterMaxDataExtensionTimeInDays, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA_RETENTION_TIME_IN_DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX_DATA_EXTENSION_TIME_IN_DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons."},
		{Name: sdk.AccountParameterMinDataRetentionTimeInDays, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA_RETENTION_TIME_IN_DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN_DATA_RETENTION_TIME_IN_DAYS)."},
		{Name: sdk.AccountParameterMultiStatementCount, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Number of statements to execute when using the multi-statement capability."},
		{Name: sdk.AccountParameterRowsPerResultset, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum."},
		{Name: sdk.AccountParameterStatementTimeoutInSeconds, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system."},
		{Name: sdk.AccountParameterStatementQueuedTimeoutInSeconds, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX_CONCURRENCY_LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged."},
		{Name: sdk.AccountParameterSuspendTaskAfterNumFailures, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension)."},
		{Name: sdk.AccountParameterTaskAutoRetryAttempts, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed."},
		{Name: sdk.AccountParameterTwoDigitCenturyStart, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(1900)), Description: "Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits)."},
		{Name: sdk.AccountParameterUserTaskMinimumTriggerIntervalInSeconds, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Minimum amount of time between Triggered Task executions in seconds"},
		{Name: sdk.AccountParameterUserTaskTimeoutMs, Type: schema.TypeInt, ValidateDiag: validation.ToDiagFunc(validation.IntAtLeast(0)), Description: "Specifies the time limit on a single run of the task before it times out (in milliseconds)."},
		{Name: sdk.AccountParameterWeekOfYearPolicy, Type: schema.TypeInt, Description: "Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year."},
		{Name: sdk.AccountParameterWeekStart, Type: schema.TypeInt, Description: "Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week."},

		// String parameters
		{Name: sdk.AccountParameterActivePythonProfiler, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToActivePythonProfiler), DiffSuppress: NormalizeAndCompare(sdk.ToActivePythonProfiler), Description: fmt.Sprintf("Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllActivePythonProfilers))},
		{Name: sdk.AccountParameterBaseLocationPrefix, Type: schema.TypeString, Description: "Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location)."},
		{Name: sdk.AccountParameterBinaryInputFormat, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToBinaryInputFormat), DiffSuppress: NormalizeAndCompare(sdk.ToBinaryInputFormat), Description: fmt.Sprintf("The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllBinaryInputFormats))},
		{Name: sdk.AccountParameterBinaryOutputFormat, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToBinaryOutputFormat), DiffSuppress: NormalizeAndCompare(sdk.ToBinaryOutputFormat), Description: fmt.Sprintf("The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllBinaryOutputFormats))},
		{Name: sdk.AccountParameterCatalog, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def).")},
		{Name: sdk.AccountParameterCatalogSync, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync).")},
		{Name: sdk.AccountParameterClientTimestampTypeMapping, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToClientTimestampTypeMapping), DiffSuppress: NormalizeAndCompare(sdk.ToClientTimestampTypeMapping), Description: fmt.Sprintf("Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllClientTimestampTypeMappings))},
		{Name: sdk.AccountParameterCortexEnabledCrossRegion, Type: schema.TypeString, Description: "Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference)."},
		{Name: sdk.AccountParameterCortexModelsAllowlist, Type: schema.TypeString, Description: "Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist)."},
		{Name: sdk.AccountParameterCsvTimestampFormat, Type: schema.TypeString, Description: "Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP_LTZ_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP_LTZ values, [TIMESTAMP_TZ_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP_TZ and [TIMESTAMP_NTZ_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP_NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results)."},
		{Name: sdk.AccountParameterDateInputFormat, Type: schema.TypeString, Description: "Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterDateOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterDefaultDDLCollation, Type: schema.TypeString, Description: "Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL."},
		{Name: sdk.AccountParameterDefaultNotebookComputePoolCpu, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs).")},
		{Name: sdk.AccountParameterDefaultNotebookComputePoolGpu, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs).")},
		{Name: sdk.AccountParameterDefaultNullOrdering, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToDefaultNullOrdering), DiffSuppress: NormalizeAndCompare(sdk.ToDefaultNullOrdering), Description: fmt.Sprintf("Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllDefaultNullOrderings))},
		{Name: sdk.AccountParameterDefaultStreamlitNotebookWarehouse, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the name of the default warehouse to use when creating a notebook.")},
		{Name: sdk.AccountParameterEventTable, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.SchemaObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions).")},
		{Name: sdk.AccountParameterExternalVolume, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def).")},
		{Name: sdk.AccountParameterGeographyOutputFormat, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToGeographyOutputFormat), DiffSuppress: NormalizeAndCompare(sdk.ToGeographyOutputFormat), Description: fmt.Sprintf("Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllGeographyOutputFormats))},
		{Name: sdk.AccountParameterGeometryOutputFormat, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToGeometryOutputFormat), DiffSuppress: NormalizeAndCompare(sdk.ToGeometryOutputFormat), Description: fmt.Sprintf("Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllGeometryOutputFormats))},
		{Name: sdk.AccountParameterInitialReplicationSizeLimitInTB, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToFloat64), DiffSuppress: NormalizeAndCompare(sdk.ToFloat64), Description: "Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.)."},
		{Name: sdk.AccountParameterListingAutoFulfillmentReplicationRefreshSchedule, Type: schema.TypeString, Description: "Sets the time interval used to refresh the application package based data products to other regions."},
		{Name: sdk.AccountParameterLogLevel, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToLogLevel), DiffSuppress: NormalizeAndCompare(sdk.ToLogLevel), Description: fmt.Sprintf("Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllLogLevels))},
		{Name: sdk.AccountParameterMetricLevel, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToMetricLevel), DiffSuppress: NormalizeAndCompare(sdk.ToMetricLevel), Description: fmt.Sprintf("Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllMetricLevels))},
		{Name: sdk.AccountParameterNetworkPolicy, Type: schema.TypeString, ValidateDiag: IsValidIdentifier[sdk.AccountObjectIdentifier](), DiffSuppress: suppressIdentifierQuoting, Description: blocklistedCharactersFieldDescription("Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies).")},
		{Name: sdk.AccountParameterPythonProfilerModules, Type: schema.TypeString, Description: "Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler)."},
		{Name: sdk.AccountParameterPythonProfilerTargetStage, Type: schema.TypeString, Description: "Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler)."},
		{Name: sdk.AccountParameterQueryTag, Type: schema.TypeString, Description: "Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY_HISTORY, QUERY_HISTORY_BY_*](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions."},
		{Name: sdk.AccountParameterS3StageVpceDnsName, Type: schema.TypeString, Description: "Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation)."},
		{Name: sdk.AccountParameterSamlIdentityProvider, Type: schema.TypeString, Description: "Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider))."},
		{Name: sdk.AccountParameterSearchPath, Type: schema.TypeString, Description: "Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name."},
		{Name: sdk.AccountParameterServerlessTaskMaxStatementSize, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToWarehouseSize), DiffSuppress: NormalizeAndCompare(sdk.ToWarehouseSize), Description: fmt.Sprintf("Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.ValidWarehouseSizesString))},
		{Name: sdk.AccountParameterServerlessTaskMinStatementSize, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToWarehouseSize), DiffSuppress: NormalizeAndCompare(sdk.ToWarehouseSize), Description: fmt.Sprintf("Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.ValidWarehouseSizesString))},
		{Name: sdk.AccountParameterSimulatedDataSharingConsumer, Type: schema.TypeString, Description: "Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account."},
		{Name: sdk.AccountParameterStorageSerializationPolicy, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToStorageSerializationPolicy), DiffSuppress: NormalizeAndCompare(sdk.ToStorageSerializationPolicy), Description: fmt.Sprintf("Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllStorageSerializationPolicies))},
		{Name: sdk.AccountParameterTimestampInputFormat, Type: schema.TypeString, Description: "Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session)."},
		{Name: sdk.AccountParameterTimestampLtzOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterTimestampNtzOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the TIMESTAMP_NTZ data type."},
		{Name: sdk.AccountParameterTimestampOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterTimestampTypeMapping, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToTimestampTypeMapping), DiffSuppress: NormalizeAndCompare(sdk.ToTimestampTypeMapping), Description: fmt.Sprintf("Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllTimestampTypeMappings))},
		{Name: sdk.AccountParameterTimestampTzOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterTimezone, Type: schema.TypeString, Description: "Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.)."},
		{Name: sdk.AccountParameterTimeInputFormat, Type: schema.TypeString, Description: "Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session)."},
		{Name: sdk.AccountParameterTimeOutputFormat, Type: schema.TypeString, Description: "Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output)."},
		{Name: sdk.AccountParameterTraceLevel, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToTraceLevel), DiffSuppress: NormalizeAndCompare(sdk.ToTraceLevel), Description: fmt.Sprintf("Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllTraceLevels))},
		{Name: sdk.AccountParameterTransactionDefaultIsolationLevel, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToTransactionDefaultIsolationLevel), DiffSuppress: NormalizeAndCompare(sdk.ToTransactionDefaultIsolationLevel), Description: fmt.Sprintf("Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.AllTransactionDefaultIsolationLevels))},
		{Name: sdk.AccountParameterUnsupportedDdlAction, Type: schema.TypeString, Description: "Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error."},
		{Name: sdk.AccountParameterUserTaskManagedInitialWarehouseSize, Type: schema.TypeString, ValidateDiag: sdkValidation(sdk.ToWarehouseSize), DiffSuppress: NormalizeAndCompare(sdk.ToWarehouseSize), Description: fmt.Sprintf("Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): %s.", possibleValuesListed(sdk.ValidWarehouseSizesString))},
	}

	// TODO [SNOW-1645342]: extract this method after moving to SDK
	for _, field := range AccountParameterFields {
		fieldName := strings.ToLower(string(field.Name))

		accountParametersSchema[fieldName] = &schema.Schema{
			Type:             field.Type,
			Description:      enrichWithReferenceToParameterDocs(field.Name, field.Description),
			Computed:         true,
			Optional:         true,
			ValidateDiagFunc: field.ValidateDiag,
			DiffSuppressFunc: field.DiffSuppress,
			ConflictsWith:    field.ConflictsWith,
		}
	}
}

func accountParametersProvider(ctx context.Context, d ResourceIdProvider, meta any) ([]*sdk.Parameter, error) {
	return parametersProvider(ctx, d, meta.(*provider.Context), accountParametersProviderFunc, sdk.ParseAccountObjectIdentifier)
}

func accountParametersProviderFunc(c *sdk.Client) showParametersFunc[sdk.AccountObjectIdentifier] {
	return func(ctx context.Context, id sdk.AccountObjectIdentifier) ([]*sdk.Parameter, error) {
		return c.Accounts.ShowParameters(ctx)
	}
}
