// Code generated by PoC plugin framework model and schema generator; DO NOT EDIT.

package testacc

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider"
	"github.com/hashicorp/terraform-plugin-framework/provider/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

type pluginFrameworkPocProviderModelV0 struct {
	AccountName                        types.String `tfsdk:"account_name"`
	Authenticator                      types.String `tfsdk:"authenticator"`
	ClientIp                           types.String `tfsdk:"client_ip"`
	ClientRequestMfaToken              types.String `tfsdk:"client_request_mfa_token"`
	ClientStoreTemporaryCredential     types.String `tfsdk:"client_store_temporary_credential"`
	ClientTimeout                      types.Int64  `tfsdk:"client_timeout"`
	DisableConsoleLogin                types.String `tfsdk:"disable_console_login"`
	DisableQueryContextCache           types.Bool   `tfsdk:"disable_query_context_cache"`
	DisableTelemetry                   types.Bool   `tfsdk:"disable_telemetry"`
	DriverTracing                      types.String `tfsdk:"driver_tracing"`
	ExternalBrowserTimeout             types.Int64  `tfsdk:"external_browser_timeout"`
	Host                               types.String `tfsdk:"host"`
	IncludeRetryReason                 types.String `tfsdk:"include_retry_reason"`
	InsecureMode                       types.Bool   `tfsdk:"insecure_mode"`
	JwtClientTimeout                   types.Int64  `tfsdk:"jwt_client_timeout"`
	JwtExpireTimeout                   types.Int64  `tfsdk:"jwt_expire_timeout"`
	KeepSessionAlive                   types.Bool   `tfsdk:"keep_session_alive"`
	LoginTimeout                       types.Int64  `tfsdk:"login_timeout"`
	MaxRetryCount                      types.Int64  `tfsdk:"max_retry_count"`
	OcspFailOpen                       types.String `tfsdk:"ocsp_fail_open"`
	OktaUrl                            types.String `tfsdk:"okta_url"`
	OrganizationName                   types.String `tfsdk:"organization_name"`
	Params                             types.Map    `tfsdk:"params"`
	Passcode                           types.String `tfsdk:"passcode"`
	PasscodeInPassword                 types.Bool   `tfsdk:"passcode_in_password"`
	Password                           types.String `tfsdk:"password"`
	Port                               types.Int64  `tfsdk:"port"`
	PreviewFeaturesEnabled             types.Set    `tfsdk:"preview_features_enabled"`
	PrivateKey                         types.String `tfsdk:"private_key"`
	PrivateKeyPassphrase               types.String `tfsdk:"private_key_passphrase"`
	Profile                            types.String `tfsdk:"profile"`
	Protocol                           types.String `tfsdk:"protocol"`
	RequestTimeout                     types.Int64  `tfsdk:"request_timeout"`
	Role                               types.String `tfsdk:"role"`
	SkipTomlFilePermissionVerification types.Bool   `tfsdk:"skip_toml_file_permission_verification"`
	TmpDirectoryPath                   types.String `tfsdk:"tmp_directory_path"`
	Token                              types.String `tfsdk:"token"`
	TokenAccessor                      types.List   `tfsdk:"token_accessor"`
	UseLegacyTomlFile                  types.Bool   `tfsdk:"use_legacy_toml_file"`
	User                               types.String `tfsdk:"user"`
	ValidateDefaultParameters          types.String `tfsdk:"validate_default_parameters"`
	Warehouse                          types.String `tfsdk:"warehouse"`
}

var existingSchema = provider.GetProviderSchema()

var pluginFrameworkPocProviderSchemaV0 = map[string]schema.Attribute{
	"account_name": schema.StringAttribute{
		Description: existingSchema["account_name"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"authenticator": schema.StringAttribute{
		Description: existingSchema["authenticator"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"client_ip": schema.StringAttribute{
		Description: existingSchema["client_ip"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"client_request_mfa_token": schema.StringAttribute{
		Description: existingSchema["client_request_mfa_token"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"client_store_temporary_credential": schema.StringAttribute{
		Description: existingSchema["client_store_temporary_credential"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"client_timeout": schema.Int64Attribute{
		Description: existingSchema["client_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"disable_console_login": schema.StringAttribute{
		Description: existingSchema["disable_console_login"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"disable_query_context_cache": schema.BoolAttribute{
		Description: existingSchema["disable_query_context_cache"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"disable_telemetry": schema.BoolAttribute{
		Description: existingSchema["disable_telemetry"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"driver_tracing": schema.StringAttribute{
		Description: existingSchema["driver_tracing"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"external_browser_timeout": schema.Int64Attribute{
		Description: existingSchema["external_browser_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"host": schema.StringAttribute{
		Description: existingSchema["host"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"include_retry_reason": schema.StringAttribute{
		Description: existingSchema["include_retry_reason"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"insecure_mode": schema.BoolAttribute{
		Description: existingSchema["insecure_mode"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"jwt_client_timeout": schema.Int64Attribute{
		Description: existingSchema["jwt_client_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"jwt_expire_timeout": schema.Int64Attribute{
		Description: existingSchema["jwt_expire_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"keep_session_alive": schema.BoolAttribute{
		Description: existingSchema["keep_session_alive"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"login_timeout": schema.Int64Attribute{
		Description: existingSchema["login_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"max_retry_count": schema.Int64Attribute{
		Description: existingSchema["max_retry_count"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"ocsp_fail_open": schema.StringAttribute{
		Description: existingSchema["ocsp_fail_open"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"okta_url": schema.StringAttribute{
		Description: existingSchema["okta_url"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"organization_name": schema.StringAttribute{
		Description: existingSchema["organization_name"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"params": schema.MapAttribute{
		Description: existingSchema["params"].Description,
		Optional:    true,
		Sensitive:   false,
		ElementType: types.StringType, // edited manually
	},
	"passcode": schema.StringAttribute{
		Description: existingSchema["passcode"].Description,
		Optional:    true,
		Sensitive:   true,
	},
	"passcode_in_password": schema.BoolAttribute{
		Description: existingSchema["passcode_in_password"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"password": schema.StringAttribute{
		Description: existingSchema["password"].Description,
		Optional:    true,
		Sensitive:   true,
	},
	"port": schema.Int64Attribute{
		Description: existingSchema["port"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"preview_features_enabled": schema.SetAttribute{
		Description: existingSchema["preview_features_enabled"].Description,
		Optional:    true,
		Sensitive:   false,
		ElementType: types.StringType, // edited manually
	},
	"private_key": schema.StringAttribute{
		Description: existingSchema["private_key"].Description,
		Optional:    true,
		Sensitive:   true,
	},
	"private_key_passphrase": schema.StringAttribute{
		Description: existingSchema["private_key_passphrase"].Description,
		Optional:    true,
		Sensitive:   true,
	},
	"profile": schema.StringAttribute{
		Description: existingSchema["profile"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"protocol": schema.StringAttribute{
		Description: existingSchema["protocol"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"request_timeout": schema.Int64Attribute{
		Description: existingSchema["request_timeout"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"role": schema.StringAttribute{
		Description: existingSchema["role"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"skip_toml_file_permission_verification": schema.BoolAttribute{
		Description: existingSchema["skip_toml_file_permission_verification"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"tmp_directory_path": schema.StringAttribute{
		Description: existingSchema["tmp_directory_path"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"token": schema.StringAttribute{
		Description: existingSchema["token"].Description,
		Optional:    true,
		Sensitive:   true,
	},
	// commented out manually
	//"token_accessor": schema.ListAttribute{
	//	Description: existingSchema["token_accessor"].Description,
	//	Optional:    true,
	//	Sensitive:   false,
	//},
	"use_legacy_toml_file": schema.BoolAttribute{
		Description: existingSchema["use_legacy_toml_file"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"user": schema.StringAttribute{
		Description: existingSchema["user"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"validate_default_parameters": schema.StringAttribute{
		Description: existingSchema["validate_default_parameters"].Description,
		Optional:    true,
		Sensitive:   false,
	},
	"warehouse": schema.StringAttribute{
		Description: existingSchema["warehouse"].Description,
		Optional:    true,
		Sensitive:   false,
	},
}
