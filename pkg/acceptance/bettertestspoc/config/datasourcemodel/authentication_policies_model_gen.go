// Code generated by data source model builder generator (v0.1.0); DO NOT EDIT.

package datasourcemodel

import (
	"encoding/json"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/datasources"
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"
)

type AuthenticationPoliciesModel struct {
	AuthenticationPolicies tfconfig.Variable `json:"authentication_policies,omitempty"`
	In                     tfconfig.Variable `json:"in,omitempty"`
	Like                   tfconfig.Variable `json:"like,omitempty"`
	Limit                  tfconfig.Variable `json:"limit,omitempty"`
	On                     tfconfig.Variable `json:"on,omitempty"`
	StartsWith             tfconfig.Variable `json:"starts_with,omitempty"`
	WithDescribe           tfconfig.Variable `json:"with_describe,omitempty"`

	*config.DatasourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func AuthenticationPolicies(
	datasourceName string,
) *AuthenticationPoliciesModel {
	a := &AuthenticationPoliciesModel{DatasourceModelMeta: config.DatasourceMeta(datasourceName, datasources.AuthenticationPolicies)}
	return a
}

func AuthenticationPoliciesWithDefaultMeta() *AuthenticationPoliciesModel {
	a := &AuthenticationPoliciesModel{DatasourceModelMeta: config.DatasourceDefaultMeta(datasources.AuthenticationPolicies)}
	return a
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (a *AuthenticationPoliciesModel) MarshalJSON() ([]byte, error) {
	type Alias AuthenticationPoliciesModel
	return json.Marshal(&struct {
		*Alias
		DependsOn                 []string                      `json:"depends_on,omitempty"`
		SingleAttributeWorkaround config.ReplacementPlaceholder `json:"single_attribute_workaround,omitempty"`
	}{
		Alias:                     (*Alias)(a),
		DependsOn:                 a.DependsOn(),
		SingleAttributeWorkaround: config.SnowflakeProviderConfigSingleAttributeWorkaround,
	})
}

func (a *AuthenticationPoliciesModel) WithDependsOn(values ...string) *AuthenticationPoliciesModel {
	a.SetDependsOn(values...)
	return a
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

// authentication_policies attribute type is not yet supported, so WithAuthenticationPolicies can't be generated

// in attribute type is not yet supported, so WithIn can't be generated

func (a *AuthenticationPoliciesModel) WithLike(like string) *AuthenticationPoliciesModel {
	a.Like = tfconfig.StringVariable(like)
	return a
}

// limit attribute type is not yet supported, so WithLimit can't be generated

// on attribute type is not yet supported, so WithOn can't be generated

func (a *AuthenticationPoliciesModel) WithStartsWith(startsWith string) *AuthenticationPoliciesModel {
	a.StartsWith = tfconfig.StringVariable(startsWith)
	return a
}

func (a *AuthenticationPoliciesModel) WithWithDescribe(withDescribe bool) *AuthenticationPoliciesModel {
	a.WithDescribe = tfconfig.BoolVariable(withDescribe)
	return a
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (a *AuthenticationPoliciesModel) WithAuthenticationPoliciesValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.AuthenticationPolicies = value
	return a
}

func (a *AuthenticationPoliciesModel) WithInValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.In = value
	return a
}

func (a *AuthenticationPoliciesModel) WithLikeValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.Like = value
	return a
}

func (a *AuthenticationPoliciesModel) WithLimitValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.Limit = value
	return a
}

func (a *AuthenticationPoliciesModel) WithOnValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.On = value
	return a
}

func (a *AuthenticationPoliciesModel) WithStartsWithValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.StartsWith = value
	return a
}

func (a *AuthenticationPoliciesModel) WithWithDescribeValue(value tfconfig.Variable) *AuthenticationPoliciesModel {
	a.WithDescribe = value
	return a
}
