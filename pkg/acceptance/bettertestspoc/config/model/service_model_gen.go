// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ServiceModel struct {
	Database                   tfconfig.Variable `json:"database,omitempty"`
	Schema                     tfconfig.Variable `json:"schema,omitempty"`
	Name                       tfconfig.Variable `json:"name,omitempty"`
	AutoResume                 tfconfig.Variable `json:"auto_resume,omitempty"`
	AutoSuspendSecs            tfconfig.Variable `json:"auto_suspend_secs,omitempty"`
	Comment                    tfconfig.Variable `json:"comment,omitempty"`
	ComputePool                tfconfig.Variable `json:"compute_pool,omitempty"`
	ExternalAccessIntegrations tfconfig.Variable `json:"external_access_integrations,omitempty"`
	FromSpecification          tfconfig.Variable `json:"from_specification,omitempty"`
	FullyQualifiedName         tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	MaxInstances               tfconfig.Variable `json:"max_instances,omitempty"`
	MinInstances               tfconfig.Variable `json:"min_instances,omitempty"`
	MinReadyInstances          tfconfig.Variable `json:"min_ready_instances,omitempty"`
	QueryWarehouse             tfconfig.Variable `json:"query_warehouse,omitempty"`
	ServiceType                tfconfig.Variable `json:"service_type,omitempty"`

	DynamicBlock *config.DynamicBlock `json:"dynamic,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func Service(
	resourceName string,
	database string,
	schema string,
	name string,
	computePool string,
) *ServiceModel {
	s := &ServiceModel{ResourceModelMeta: config.Meta(resourceName, resources.Service)}
	s.WithDatabase(database)
	s.WithSchema(schema)
	s.WithName(name)
	s.WithComputePool(computePool)
	return s
}

func ServiceWithDefaultMeta(
	database string,
	schema string,
	name string,
	computePool string,
) *ServiceModel {
	s := &ServiceModel{ResourceModelMeta: config.DefaultMeta(resources.Service)}
	s.WithDatabase(database)
	s.WithSchema(schema)
	s.WithName(name)
	s.WithComputePool(computePool)
	return s
}

///////////////////////////////////////////////////////////////////////
// set proper json marshalling, handle depends on and dynamic blocks //
///////////////////////////////////////////////////////////////////////

func (s *ServiceModel) MarshalJSON() ([]byte, error) {
	type Alias ServiceModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(s),
		DependsOn: s.DependsOn(),
	})
}

func (s *ServiceModel) WithDependsOn(values ...string) *ServiceModel {
	s.SetDependsOn(values...)
	return s
}

func (s *ServiceModel) WithDynamicBlock(dynamicBlock *config.DynamicBlock) *ServiceModel {
	s.DynamicBlock = dynamicBlock
	return s
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (s *ServiceModel) WithDatabase(database string) *ServiceModel {
	s.Database = tfconfig.StringVariable(database)
	return s
}

func (s *ServiceModel) WithSchema(schema string) *ServiceModel {
	s.Schema = tfconfig.StringVariable(schema)
	return s
}

func (s *ServiceModel) WithName(name string) *ServiceModel {
	s.Name = tfconfig.StringVariable(name)
	return s
}

func (s *ServiceModel) WithAutoResume(autoResume string) *ServiceModel {
	s.AutoResume = tfconfig.StringVariable(autoResume)
	return s
}

func (s *ServiceModel) WithAutoSuspendSecs(autoSuspendSecs int) *ServiceModel {
	s.AutoSuspendSecs = tfconfig.IntegerVariable(autoSuspendSecs)
	return s
}

func (s *ServiceModel) WithComment(comment string) *ServiceModel {
	s.Comment = tfconfig.StringVariable(comment)
	return s
}

func (s *ServiceModel) WithComputePool(computePool string) *ServiceModel {
	s.ComputePool = tfconfig.StringVariable(computePool)
	return s
}

// external_access_integrations attribute type is not yet supported, so WithExternalAccessIntegrations can't be generated

// from_specification attribute type is not yet supported, so WithFromSpecification can't be generated

func (s *ServiceModel) WithFullyQualifiedName(fullyQualifiedName string) *ServiceModel {
	s.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return s
}

func (s *ServiceModel) WithMaxInstances(maxInstances int) *ServiceModel {
	s.MaxInstances = tfconfig.IntegerVariable(maxInstances)
	return s
}

func (s *ServiceModel) WithMinInstances(minInstances int) *ServiceModel {
	s.MinInstances = tfconfig.IntegerVariable(minInstances)
	return s
}

func (s *ServiceModel) WithMinReadyInstances(minReadyInstances int) *ServiceModel {
	s.MinReadyInstances = tfconfig.IntegerVariable(minReadyInstances)
	return s
}

func (s *ServiceModel) WithQueryWarehouse(queryWarehouse string) *ServiceModel {
	s.QueryWarehouse = tfconfig.StringVariable(queryWarehouse)
	return s
}

func (s *ServiceModel) WithServiceType(serviceType string) *ServiceModel {
	s.ServiceType = tfconfig.StringVariable(serviceType)
	return s
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (s *ServiceModel) WithDatabaseValue(value tfconfig.Variable) *ServiceModel {
	s.Database = value
	return s
}

func (s *ServiceModel) WithSchemaValue(value tfconfig.Variable) *ServiceModel {
	s.Schema = value
	return s
}

func (s *ServiceModel) WithNameValue(value tfconfig.Variable) *ServiceModel {
	s.Name = value
	return s
}

func (s *ServiceModel) WithAutoResumeValue(value tfconfig.Variable) *ServiceModel {
	s.AutoResume = value
	return s
}

func (s *ServiceModel) WithAutoSuspendSecsValue(value tfconfig.Variable) *ServiceModel {
	s.AutoSuspendSecs = value
	return s
}

func (s *ServiceModel) WithCommentValue(value tfconfig.Variable) *ServiceModel {
	s.Comment = value
	return s
}

func (s *ServiceModel) WithComputePoolValue(value tfconfig.Variable) *ServiceModel {
	s.ComputePool = value
	return s
}

func (s *ServiceModel) WithExternalAccessIntegrationsValue(value tfconfig.Variable) *ServiceModel {
	s.ExternalAccessIntegrations = value
	return s
}

func (s *ServiceModel) WithFromSpecificationValue(value tfconfig.Variable) *ServiceModel {
	s.FromSpecification = value
	return s
}

func (s *ServiceModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ServiceModel {
	s.FullyQualifiedName = value
	return s
}

func (s *ServiceModel) WithMaxInstancesValue(value tfconfig.Variable) *ServiceModel {
	s.MaxInstances = value
	return s
}

func (s *ServiceModel) WithMinInstancesValue(value tfconfig.Variable) *ServiceModel {
	s.MinInstances = value
	return s
}

func (s *ServiceModel) WithMinReadyInstancesValue(value tfconfig.Variable) *ServiceModel {
	s.MinReadyInstances = value
	return s
}

func (s *ServiceModel) WithQueryWarehouseValue(value tfconfig.Variable) *ServiceModel {
	s.QueryWarehouse = value
	return s
}

func (s *ServiceModel) WithServiceTypeValue(value tfconfig.Variable) *ServiceModel {
	s.ServiceType = value
	return s
}
