// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type GrantApplicationRoleModel struct {
	ApplicationName       tfconfig.Variable `json:"application_name,omitempty"`
	ApplicationRoleName   tfconfig.Variable `json:"application_role_name,omitempty"`
	ParentAccountRoleName tfconfig.Variable `json:"parent_account_role_name,omitempty"`

	DynamicBlock *config.DynamicBlock `json:"dynamic,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func GrantApplicationRole(
	resourceName string,
	applicationRoleName string,
) *GrantApplicationRoleModel {
	g := &GrantApplicationRoleModel{ResourceModelMeta: config.Meta(resourceName, resources.GrantApplicationRole)}
	g.WithApplicationRoleName(applicationRoleName)
	return g
}

func GrantApplicationRoleWithDefaultMeta(
	applicationRoleName string,
) *GrantApplicationRoleModel {
	g := &GrantApplicationRoleModel{ResourceModelMeta: config.DefaultMeta(resources.GrantApplicationRole)}
	g.WithApplicationRoleName(applicationRoleName)
	return g
}

///////////////////////////////////////////////////////////////////////
// set proper json marshalling, handle depends on and dynamic blocks //
///////////////////////////////////////////////////////////////////////

func (g *GrantApplicationRoleModel) MarshalJSON() ([]byte, error) {
	type Alias GrantApplicationRoleModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(g),
		DependsOn: g.DependsOn(),
	})
}

func (g *GrantApplicationRoleModel) WithDependsOn(values ...string) *GrantApplicationRoleModel {
	g.SetDependsOn(values...)
	return g
}

func (g *GrantApplicationRoleModel) WithDynamicBlock(dynamicBlock *config.DynamicBlock) *GrantApplicationRoleModel {
	g.DynamicBlock = dynamicBlock
	return g
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (g *GrantApplicationRoleModel) WithApplicationName(applicationName string) *GrantApplicationRoleModel {
	g.ApplicationName = tfconfig.StringVariable(applicationName)
	return g
}

func (g *GrantApplicationRoleModel) WithApplicationRoleName(applicationRoleName string) *GrantApplicationRoleModel {
	g.ApplicationRoleName = tfconfig.StringVariable(applicationRoleName)
	return g
}

func (g *GrantApplicationRoleModel) WithParentAccountRoleName(parentAccountRoleName string) *GrantApplicationRoleModel {
	g.ParentAccountRoleName = tfconfig.StringVariable(parentAccountRoleName)
	return g
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (g *GrantApplicationRoleModel) WithApplicationNameValue(value tfconfig.Variable) *GrantApplicationRoleModel {
	g.ApplicationName = value
	return g
}

func (g *GrantApplicationRoleModel) WithApplicationRoleNameValue(value tfconfig.Variable) *GrantApplicationRoleModel {
	g.ApplicationRoleName = value
	return g
}

func (g *GrantApplicationRoleModel) WithParentAccountRoleNameValue(value tfconfig.Variable) *GrantApplicationRoleModel {
	g.ParentAccountRoleName = value
	return g
}
