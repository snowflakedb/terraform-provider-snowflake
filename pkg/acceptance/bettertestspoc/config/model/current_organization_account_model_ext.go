package model

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/helpers"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

func (c *CurrentOrganizationAccountModel) WithAllParametersSetToPredefinedValues(warehouseId sdk.AccountObjectIdentifier, eventTableId sdk.SchemaObjectIdentifier, externalVolumeId sdk.AccountObjectIdentifier, networkPolicyId sdk.AccountObjectIdentifier, stageId sdk.SchemaObjectIdentifier) *CurrentOrganizationAccountModel {
	return c.WithAbortDetachedQuery(true).
		WithAllowClientMfaCaching(true).
		WithAllowIdToken(true).
		WithAutocommit(false).
		WithBaseLocationPrefix("STORAGE_BASE_URL/").
		WithBinaryInputFormat(string(sdk.BinaryInputFormatBase64)).
		WithBinaryOutputFormat(string(sdk.BinaryOutputFormatBase64)).
		WithCatalog(helpers.TestDatabaseCatalog.Name()).
		WithClientEnableLogInfoStatementParameters(true).
		WithClientEncryptionKeySize(256).
		WithClientMemoryLimit(1540).
		WithClientMetadataRequestUseConnectionCtx(true).
		WithClientMetadataUseSessionDatabase(true).
		WithClientPrefetchThreads(5).
		WithClientResultChunkSize(159).
		WithClientResultColumnCaseInsensitive(true).
		WithClientSessionKeepAlive(true).
		WithClientSessionKeepAliveHeartbeatFrequency(3599).
		WithClientTimestampTypeMapping(string(sdk.ClientTimestampTypeMappingNtz)).
		WithCortexEnabledCrossRegion("ANY_REGION").
		WithCortexModelsAllowlist("All").
		WithCsvTimestampFormat("YYYY-MM-DD").
		WithDataRetentionTimeInDays(2).
		WithDateInputFormat("YYYY-MM-DD").
		WithDateOutputFormat("YYYY-MM-DD").
		WithDefaultDdlCollation("en-cs").
		WithDefaultNotebookComputePoolCpu("CPU_X64_S").
		WithDefaultNotebookComputePoolGpu("GPU_NV_S").
		WithDefaultNullOrdering(string(sdk.DefaultNullOrderingFirst)).
		WithDefaultStreamlitNotebookWarehouse(warehouseId.Name()).
		WithDisableUiDownloadButton(true).
		WithDisableUserPrivilegeGrants(true).
		WithEnableAutomaticSensitiveDataClassificationLog(false).
		WithEnableEgressCostOptimizer(false).
		WithEnableIdentifierFirstLogin(false).
		WithEnableTriSecretAndRekeyOptOutForImageRepository(true).
		WithEnableTriSecretAndRekeyOptOutForSpcsBlockStorage(true).
		WithEnableUnhandledExceptionsReporting(false).
		WithEnableUnloadPhysicalTypeOptimization(false).
		WithEnableUnredactedQuerySyntaxError(true).
		WithEnableUnredactedSecureObjectError(true).
		WithEnforceNetworkRulesForInternalStages(true).
		WithErrorOnNondeterministicMerge(false).
		WithErrorOnNondeterministicUpdate(true).
		WithEventTable(eventTableId.FullyQualifiedName()).
		WithExternalOauthAddPrivilegedRolesToBlockedList(false).
		WithExternalVolume(externalVolumeId.Name()).
		WithGeographyOutputFormat(string(sdk.GeographyOutputFormatWKT)).
		WithGeometryOutputFormat(string(sdk.GeometryOutputFormatWKT)).
		WithHybridTableLockTimeout(3599).
		WithInitialReplicationSizeLimitInTb("9.9").
		WithJdbcTreatDecimalAsInt(false).
		WithJdbcTreatTimestampNtzAsUtc(true).
		WithJdbcUseSessionTimezone(false).
		WithJsonIndent(4).
		WithJsTreatIntegerAsBigint(true).
		WithListingAutoFulfillmentReplicationRefreshSchedule("2 minutes").
		WithLockTimeout(43201).
		WithLogLevel(string(sdk.LogLevelInfo)).
		WithMaxConcurrencyLevel(7).
		WithMaxDataExtensionTimeInDays(13).
		WithMetricLevel(string(sdk.MetricLevelAll)).
		WithMinDataRetentionTimeInDays(1).
		WithMultiStatementCount(0).
		WithNetworkPolicy(networkPolicyId.Name()).
		WithNoorderSequenceAsDefault(false).
		WithOauthAddPrivilegedRolesToBlockedList(false).
		WithOdbcTreatDecimalAsInt(true).
		WithPeriodicDataRekeying(false).
		WithPipeExecutionPaused(true).
		WithPreventUnloadToInlineUrl(true).
		WithPreventUnloadToInternalStages(true).
		WithPythonProfilerTargetStage(stageId.FullyQualifiedName()).
		WithQueryTag("test-query-tag").
		WithQuotedIdentifiersIgnoreCase(true).
		WithReplaceInvalidCharacters(true).
		WithRequireStorageIntegrationForStageCreation(true).
		WithRequireStorageIntegrationForStageOperation(true).
		WithRowsPerResultset(1000).
		WithSearchPath("$current, $public").
		WithServerlessTaskMaxStatementSize(string(sdk.WarehouseSizeXLarge)).
		WithServerlessTaskMinStatementSize(string(sdk.WarehouseSizeSmall)).
		WithSsoLoginPage(true).
		WithStatementQueuedTimeoutInSeconds(1).
		WithStatementTimeoutInSeconds(10).
		WithStorageSerializationPolicy(string(sdk.StorageSerializationPolicyOptimized)).
		WithStrictJsonOutput(true).
		WithSuspendTaskAfterNumFailures(3).
		WithTaskAutoRetryAttempts(3).
		WithTimestampDayIsAlways24h(true).
		WithTimestampInputFormat("YYYY-MM-DD").
		WithTimestampLtzOutputFormat("YYYY-MM-DD").
		WithTimestampNtzOutputFormat("YYYY-MM-DD").
		WithTimestampOutputFormat("YYYY-MM-DD").
		WithTimestampTypeMapping(string(sdk.TimestampTypeMappingLtz)).
		WithTimestampTzOutputFormat("YYYY-MM-DD").
		WithTimezone("Europe/London").
		WithTimeInputFormat("YYYY-MM-DD").
		WithTimeOutputFormat("YYYY-MM-DD").
		WithTraceLevel(string(sdk.TraceLevelPropagate)).
		WithTransactionAbortOnError(true).
		WithTransactionDefaultIsolationLevel(string(sdk.TransactionDefaultIsolationLevelReadCommitted)).
		WithTwoDigitCenturyStart(1971).
		WithUnsupportedDdlAction(string(sdk.UnsupportedDDLActionFail)).
		WithUserTaskManagedInitialWarehouseSize(string(sdk.WarehouseSizeSmall)).
		WithUserTaskMinimumTriggerIntervalInSeconds(10).
		WithUserTaskTimeoutMs(10).
		WithUseCachedResult(false).
		WithWeekOfYearPolicy(1).
		WithWeekStart(1)
}
