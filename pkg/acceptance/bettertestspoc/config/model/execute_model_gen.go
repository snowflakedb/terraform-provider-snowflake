// Code generated by resource model builder generator (v0.1.0); DO NOT EDIT.

package model

import (
	"encoding/json"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"
)

type ExecuteModel struct {
	Execute      tfconfig.Variable `json:"execute,omitempty"`
	Query        tfconfig.Variable `json:"query,omitempty"`
	QueryResults tfconfig.Variable `json:"query_results,omitempty"`
	Revert       tfconfig.Variable `json:"revert,omitempty"`

	DynamicBlock *config.DynamicBlock `json:"dynamic,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func Execute(
	resourceName string,
	execute string,
	revert string,
) *ExecuteModel {
	e := &ExecuteModel{ResourceModelMeta: config.Meta(resourceName, resources.Execute)}
	e.WithExecute(execute)
	e.WithRevert(revert)
	return e
}

func ExecuteWithDefaultMeta(
	execute string,
	revert string,
) *ExecuteModel {
	e := &ExecuteModel{ResourceModelMeta: config.DefaultMeta(resources.Execute)}
	e.WithExecute(execute)
	e.WithRevert(revert)
	return e
}

///////////////////////////////////////////////////////////////////////
// set proper json marshalling, handle depends on and dynamic blocks //
///////////////////////////////////////////////////////////////////////

func (e *ExecuteModel) MarshalJSON() ([]byte, error) {
	type Alias ExecuteModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(e),
		DependsOn: e.DependsOn(),
	})
}

func (e *ExecuteModel) WithDependsOn(values ...string) *ExecuteModel {
	e.SetDependsOn(values...)
	return e
}

func (e *ExecuteModel) WithDynamicBlock(dynamicBlock *config.DynamicBlock) *ExecuteModel {
	e.DynamicBlock = dynamicBlock
	return e
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (e *ExecuteModel) WithExecute(execute string) *ExecuteModel {
	e.Execute = tfconfig.StringVariable(execute)
	return e
}

func (e *ExecuteModel) WithQuery(query string) *ExecuteModel {
	e.Query = tfconfig.StringVariable(query)
	return e
}

// query_results attribute type is not yet supported, so WithQueryResults can't be generated

func (e *ExecuteModel) WithRevert(revert string) *ExecuteModel {
	e.Revert = tfconfig.StringVariable(revert)
	return e
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (e *ExecuteModel) WithExecuteValue(value tfconfig.Variable) *ExecuteModel {
	e.Execute = value
	return e
}

func (e *ExecuteModel) WithQueryValue(value tfconfig.Variable) *ExecuteModel {
	e.Query = value
	return e
}

func (e *ExecuteModel) WithQueryResultsValue(value tfconfig.Variable) *ExecuteModel {
	e.QueryResults = value
	return e
}

func (e *ExecuteModel) WithRevertValue(value tfconfig.Variable) *ExecuteModel {
	e.Revert = value
	return e
}
