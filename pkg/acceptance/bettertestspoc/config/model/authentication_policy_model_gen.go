// Code generated by resource model builder generator (v0.1.0); DO NOT EDIT.

package model

import (
	"encoding/json"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"
)

type AuthenticationPolicyModel struct {
	Database                 tfconfig.Variable `json:"database,omitempty"`
	Schema                   tfconfig.Variable `json:"schema,omitempty"`
	Name                     tfconfig.Variable `json:"name,omitempty"`
	AuthenticationMethods    tfconfig.Variable `json:"authentication_methods,omitempty"`
	ClientTypes              tfconfig.Variable `json:"client_types,omitempty"`
	Comment                  tfconfig.Variable `json:"comment,omitempty"`
	FullyQualifiedName       tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	MfaAuthenticationMethods tfconfig.Variable `json:"mfa_authentication_methods,omitempty"`
	MfaEnrollment            tfconfig.Variable `json:"mfa_enrollment,omitempty"`
	SecurityIntegrations     tfconfig.Variable `json:"security_integrations,omitempty"`

	DynamicBlock *config.DynamicBlock `json:"dynamic,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func AuthenticationPolicy(
	resourceName string,
	database string,
	schema string,
	name string,
) *AuthenticationPolicyModel {
	a := &AuthenticationPolicyModel{ResourceModelMeta: config.Meta(resourceName, resources.AuthenticationPolicy)}
	a.WithDatabase(database)
	a.WithSchema(schema)
	a.WithName(name)
	return a
}

func AuthenticationPolicyWithDefaultMeta(
	database string,
	schema string,
	name string,
) *AuthenticationPolicyModel {
	a := &AuthenticationPolicyModel{ResourceModelMeta: config.DefaultMeta(resources.AuthenticationPolicy)}
	a.WithDatabase(database)
	a.WithSchema(schema)
	a.WithName(name)
	return a
}

///////////////////////////////////////////////////////////////////////
// set proper json marshalling, handle depends on and dynamic blocks //
///////////////////////////////////////////////////////////////////////

func (a *AuthenticationPolicyModel) MarshalJSON() ([]byte, error) {
	type Alias AuthenticationPolicyModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(a),
		DependsOn: a.DependsOn(),
	})
}

func (a *AuthenticationPolicyModel) WithDependsOn(values ...string) *AuthenticationPolicyModel {
	a.SetDependsOn(values...)
	return a
}

func (a *AuthenticationPolicyModel) WithDynamicBlock(dynamicBlock *config.DynamicBlock) *AuthenticationPolicyModel {
	a.DynamicBlock = dynamicBlock
	return a
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (a *AuthenticationPolicyModel) WithDatabase(database string) *AuthenticationPolicyModel {
	a.Database = tfconfig.StringVariable(database)
	return a
}

func (a *AuthenticationPolicyModel) WithSchema(schema string) *AuthenticationPolicyModel {
	a.Schema = tfconfig.StringVariable(schema)
	return a
}

func (a *AuthenticationPolicyModel) WithName(name string) *AuthenticationPolicyModel {
	a.Name = tfconfig.StringVariable(name)
	return a
}

// authentication_methods attribute type is not yet supported, so WithAuthenticationMethods can't be generated

// client_types attribute type is not yet supported, so WithClientTypes can't be generated

func (a *AuthenticationPolicyModel) WithComment(comment string) *AuthenticationPolicyModel {
	a.Comment = tfconfig.StringVariable(comment)
	return a
}

func (a *AuthenticationPolicyModel) WithFullyQualifiedName(fullyQualifiedName string) *AuthenticationPolicyModel {
	a.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return a
}

// mfa_authentication_methods attribute type is not yet supported, so WithMfaAuthenticationMethods can't be generated

func (a *AuthenticationPolicyModel) WithMfaEnrollment(mfaEnrollment string) *AuthenticationPolicyModel {
	a.MfaEnrollment = tfconfig.StringVariable(mfaEnrollment)
	return a
}

// security_integrations attribute type is not yet supported, so WithSecurityIntegrations can't be generated

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (a *AuthenticationPolicyModel) WithDatabaseValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.Database = value
	return a
}

func (a *AuthenticationPolicyModel) WithSchemaValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.Schema = value
	return a
}

func (a *AuthenticationPolicyModel) WithNameValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.Name = value
	return a
}

func (a *AuthenticationPolicyModel) WithAuthenticationMethodsValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.AuthenticationMethods = value
	return a
}

func (a *AuthenticationPolicyModel) WithClientTypesValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.ClientTypes = value
	return a
}

func (a *AuthenticationPolicyModel) WithCommentValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.Comment = value
	return a
}

func (a *AuthenticationPolicyModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.FullyQualifiedName = value
	return a
}

func (a *AuthenticationPolicyModel) WithMfaAuthenticationMethodsValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.MfaAuthenticationMethods = value
	return a
}

func (a *AuthenticationPolicyModel) WithMfaEnrollmentValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.MfaEnrollment = value
	return a
}

func (a *AuthenticationPolicyModel) WithSecurityIntegrationsValue(value tfconfig.Variable) *AuthenticationPolicyModel {
	a.SecurityIntegrations = value
	return a
}
