// Code generated by resource parameter assertions generator (v0.1.0); DO NOT EDIT.

package resourceparametersassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type SchemaResourceParametersAssert struct {
	*assert.ResourceAssert
}

func SchemaResourceParameters(t *testing.T, name string) *SchemaResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := SchemaResourceParametersAssert{
		ResourceAssert: assert.NewResourceAssert(name, "parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

func ImportedSchemaResourceParameters(t *testing.T, id string) *SchemaResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := SchemaResourceParametersAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (s *SchemaResourceParametersAssert) HasDefaultDdlCollation(expected string) *SchemaResourceParametersAssert {
	s.AddAssertion(assert.ResourceParameterValueSet(sdk.ObjectParameterDefaultDDLCollation, expected)) // modified manually
	return s
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (s *SchemaResourceParametersAssert) HasDefaultDdlCollationLevel(expected sdk.ParameterType) *SchemaResourceParametersAssert {
	s.AddAssertion(assert.ResourceParameterLevelSet(sdk.ObjectParameterDefaultDDLCollation, expected)) // modified manually
	return s
}
