// Code generated by resource parameter assertions generator (v0.1.0); DO NOT EDIT.

package resourceparametersassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type AccountResourceParametersAssert struct {
	*assert.ResourceAssert
}

func AccountResourceParameters(t *testing.T, name string) *AccountResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := AccountResourceParametersAssert{
		ResourceAssert: assert.NewResourceAssert(name, "parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

func ImportedAccountResourceParameters(t *testing.T, id string) *AccountResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := AccountResourceParametersAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (a *AccountResourceParametersAssert) HasAbortDetachedQuery(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterAbortDetachedQuery, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasAllowClientMfaCaching(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterAllowClientMFACaching, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasAllowIdToken(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterAllowIDToken, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasAutocommit(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterAutocommit, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientEnableLogInfoStatementParameters(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterClientEnableLogInfoStatementParameters, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMetadataRequestUseConnectionCtx(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterClientMetadataRequestUseConnectionCtx, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMetadataUseSessionDatabase(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterClientMetadataUseSessionDatabase, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientResultColumnCaseInsensitive(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterClientResultColumnCaseInsensitive, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientSessionKeepAlive(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterClientSessionKeepAlive, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDisableUiDownloadButton(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterDisableUiDownloadButton, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDisableUserPrivilegeGrants(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterDisableUserPrivilegeGrants, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableAutomaticSensitiveDataClassificationLog(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableAutomaticSensitiveDataClassificationLog, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableEgressCostOptimizer(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableEgressCostOptimizer, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableIdentifierFirstLogin(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableIdentifierFirstLogin, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableInternalStagesPrivatelink(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableInternalStagesPrivatelink, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableTriSecretAndRekeyOptOutForImageRepository(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableTriSecretAndRekeyOptOutForImageRepository, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableTriSecretAndRekeyOptOutForSpcsBlockStorage(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableTriSecretAndRekeyOptOutForSpcsBlockStorage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnhandledExceptionsReporting(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableUnhandledExceptionsReporting, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnloadPhysicalTypeOptimization(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableUnloadPhysicalTypeOptimization, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnredactedQuerySyntaxError(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableUnredactedQuerySyntaxError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnredactedSecureObjectError(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnableUnredactedSecureObjectError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnforceNetworkRulesForInternalStages(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterEnforceNetworkRulesForInternalStages, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasErrorOnNondeterministicMerge(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterErrorOnNondeterministicMerge, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasErrorOnNondeterministicUpdate(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterErrorOnNondeterministicUpdate, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasExternalOauthAddPrivilegedRolesToBlockedList(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterExternalOAuthAddPrivilegedRolesToBlockedList, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcTreatDecimalAsInt(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterJdbcTreatDecimalAsInt, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcTreatTimestampNtzAsUtc(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterJdbcTreatTimestampNtzAsUtc, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcUseSessionTimezone(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterJdbcUseSessionTimezone, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJsTreatIntegerAsBigint(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterJsTreatIntegerAsBigInt, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasNoorderSequenceAsDefault(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterNoorderSequenceAsDefault, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasOauthAddPrivilegedRolesToBlockedList(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterOAuthAddPrivilegedRolesToBlockedList, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasOdbcTreatDecimalAsInt(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterOdbcTreatDecimalAsInt, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPeriodicDataRekeying(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterPeriodicDataRekeying, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPipeExecutionPaused(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterPipeExecutionPaused, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPreventUnloadToInlineUrl(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterPreventUnloadToInlineURL, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasPreventUnloadToInternalStages(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterPreventUnloadToInternalStages, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasQuotedIdentifiersIgnoreCase(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterQuotedIdentifiersIgnoreCase, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasReplaceInvalidCharacters(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterReplaceInvalidCharacters, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRequireStorageIntegrationForStageCreation(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterRequireStorageIntegrationForStageCreation, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRequireStorageIntegrationForStageOperation(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterRequireStorageIntegrationForStageOperation, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSsoLoginPage(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterSsoLoginPage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStrictJsonOutput(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterStrictJsonOutput, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampDayIsAlways24h(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterTimestampDayIsAlways24h, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTransactionAbortOnError(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterTransactionAbortOnError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUseCachedResult(expected bool) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.AccountParameterUseCachedResult, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientEncryptionKeySize(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterClientEncryptionKeySize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMemoryLimit(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterClientMemoryLimit, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientPrefetchThreads(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterClientPrefetchThreads, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientResultChunkSize(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterClientResultChunkSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientSessionKeepAliveHeartbeatFrequency(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDataRetentionTimeInDays(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterDataRetentionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasHybridTableLockTimeout(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterHybridTableLockTimeout, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJsonIndent(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterJsonIndent, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasLockTimeout(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterLockTimeout, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMaxConcurrencyLevel(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterMaxConcurrencyLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMaxDataExtensionTimeInDays(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterMaxDataExtensionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMinDataRetentionTimeInDays(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterMinDataRetentionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMultiStatementCount(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterMultiStatementCount, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRowsPerResultset(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterRowsPerResultset, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStatementQueuedTimeoutInSeconds(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterStatementQueuedTimeoutInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStatementTimeoutInSeconds(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterStatementTimeoutInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSuspendTaskAfterNumFailures(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterSuspendTaskAfterNumFailures, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTaskAutoRetryAttempts(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterTaskAutoRetryAttempts, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTwoDigitCenturyStart(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterTwoDigitCenturyStart, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSeconds(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskTimeoutMs(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterUserTaskTimeoutMs, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasWeekOfYearPolicy(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterWeekOfYearPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasWeekStart(expected int) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterIntValueSet(sdk.AccountParameterWeekStart, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasActivePythonProfiler(expected sdk.ActivePythonProfiler) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterActivePythonProfiler, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBaseLocationPrefix(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterBaseLocationPrefix, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBinaryInputFormat(expected sdk.BinaryInputFormat) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterBinaryInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBinaryOutputFormat(expected sdk.BinaryOutputFormat) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterBinaryOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCatalog(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterCatalog, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCatalogSync(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterCatalogSync, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientTimestampTypeMapping(expected sdk.ClientTimestampTypeMapping) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterClientTimestampTypeMapping, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCortexEnabledCrossRegion(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterCortexEnabledCrossRegion, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCortexModelsAllowlist(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterCortexModelsAllowlist, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCsvTimestampFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterCsvTimestampFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDateInputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDateInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDateOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDateOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultDdlCollation(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDefaultDDLCollation, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNotebookComputePoolCpu(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDefaultNotebookComputePoolCpu, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNotebookComputePoolGpu(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDefaultNotebookComputePoolGpu, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNullOrdering(expected sdk.DefaultNullOrdering) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterDefaultNullOrdering, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultStreamlitNotebookWarehouse(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterDefaultStreamlitNotebookWarehouse, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEventTable(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterEventTable, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasExternalVolume(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterExternalVolume, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasGeographyOutputFormat(expected sdk.GeographyOutputFormat) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterGeographyOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasGeometryOutputFormat(expected sdk.GeometryOutputFormat) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterGeometryOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasInitialReplicationSizeLimitInTb(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterInitialReplicationSizeLimitInTB, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasListingAutoFulfillmentReplicationRefreshSchedule(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterListingAutoFulfillmentReplicationRefreshSchedule, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasLogLevel(expected sdk.LogLevel) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterLogLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMetricLevel(expected sdk.MetricLevel) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterMetricLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasNetworkPolicy(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterNetworkPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPythonProfilerModules(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterPythonProfilerModules, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPythonProfilerTargetStage(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterPythonProfilerTargetStage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasQueryTag(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterQueryTag, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasS3StageVpceDnsName(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterS3StageVpceDnsName, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSamlIdentityProvider(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterSamlIdentityProvider, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSearchPath(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterSearchPath, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasServerlessTaskMaxStatementSize(expected sdk.WarehouseSize) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterServerlessTaskMaxStatementSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasServerlessTaskMinStatementSize(expected sdk.WarehouseSize) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterServerlessTaskMinStatementSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSimulatedDataSharingConsumer(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterSimulatedDataSharingConsumer, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStorageSerializationPolicy(expected sdk.StorageSerializationPolicy) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterStorageSerializationPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampInputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimestampInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampLtzOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimestampLtzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampNtzOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimestampNtzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimestampOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampTypeMapping(expected sdk.TimestampTypeMapping) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterTimestampTypeMapping, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampTzOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimestampTzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimezone(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimezone, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimeInputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimeInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimeOutputFormat(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTimeOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterTraceLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTransactionDefaultIsolationLevel(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterTransactionDefaultIsolationLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUnsupportedDdlAction(expected string) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterValueSet(sdk.AccountParameterUnsupportedDdlAction, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskManagedInitialWarehouseSize(expected sdk.WarehouseSize) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.AccountParameterUserTaskManagedInitialWarehouseSize, expected))
	return a
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (a *AccountResourceParametersAssert) HasAbortDetachedQueryLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterAbortDetachedQuery, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasAllowClientMfaCachingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterAllowClientMFACaching, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasAllowIdTokenLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterAllowIDToken, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasAutocommitLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterAutocommit, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientEnableLogInfoStatementParametersLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientEnableLogInfoStatementParameters, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMetadataRequestUseConnectionCtxLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientMetadataRequestUseConnectionCtx, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMetadataUseSessionDatabaseLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientMetadataUseSessionDatabase, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientResultColumnCaseInsensitiveLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientResultColumnCaseInsensitive, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientSessionKeepAliveLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientSessionKeepAlive, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDisableUiDownloadButtonLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDisableUiDownloadButton, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDisableUserPrivilegeGrantsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDisableUserPrivilegeGrants, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableAutomaticSensitiveDataClassificationLogLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableAutomaticSensitiveDataClassificationLog, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableEgressCostOptimizerLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableEgressCostOptimizer, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableIdentifierFirstLoginLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableIdentifierFirstLogin, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableInternalStagesPrivatelinkLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableInternalStagesPrivatelink, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableTriSecretAndRekeyOptOutForImageRepositoryLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableTriSecretAndRekeyOptOutForImageRepository, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableTriSecretAndRekeyOptOutForSpcsBlockStorageLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableTriSecretAndRekeyOptOutForSpcsBlockStorage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnhandledExceptionsReportingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableUnhandledExceptionsReporting, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnloadPhysicalTypeOptimizationLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableUnloadPhysicalTypeOptimization, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnredactedQuerySyntaxErrorLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableUnredactedQuerySyntaxError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnableUnredactedSecureObjectErrorLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnableUnredactedSecureObjectError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEnforceNetworkRulesForInternalStagesLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEnforceNetworkRulesForInternalStages, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasErrorOnNondeterministicMergeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterErrorOnNondeterministicMerge, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasErrorOnNondeterministicUpdateLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterErrorOnNondeterministicUpdate, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasExternalOauthAddPrivilegedRolesToBlockedListLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterExternalOAuthAddPrivilegedRolesToBlockedList, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcTreatDecimalAsIntLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterJdbcTreatDecimalAsInt, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcTreatTimestampNtzAsUtcLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterJdbcTreatTimestampNtzAsUtc, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJdbcUseSessionTimezoneLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterJdbcUseSessionTimezone, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJsTreatIntegerAsBigintLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterJsTreatIntegerAsBigInt, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasNoorderSequenceAsDefaultLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterNoorderSequenceAsDefault, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasOauthAddPrivilegedRolesToBlockedListLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterOAuthAddPrivilegedRolesToBlockedList, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasOdbcTreatDecimalAsIntLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterOdbcTreatDecimalAsInt, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPeriodicDataRekeyingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPeriodicDataRekeying, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPipeExecutionPausedLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPipeExecutionPaused, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPreventUnloadToInlineUrlLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPreventUnloadToInlineURL, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasPreventUnloadToInternalStagesLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPreventUnloadToInternalStages, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasQuotedIdentifiersIgnoreCaseLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterQuotedIdentifiersIgnoreCase, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasReplaceInvalidCharactersLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterReplaceInvalidCharacters, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRequireStorageIntegrationForStageCreationLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterRequireStorageIntegrationForStageCreation, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRequireStorageIntegrationForStageOperationLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterRequireStorageIntegrationForStageOperation, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSsoLoginPageLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterSsoLoginPage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStrictJsonOutputLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterStrictJsonOutput, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampDayIsAlways24hLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampDayIsAlways24h, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTransactionAbortOnErrorLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTransactionAbortOnError, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUseCachedResultLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterUseCachedResult, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientEncryptionKeySizeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientEncryptionKeySize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientMemoryLimitLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientMemoryLimit, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientPrefetchThreadsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientPrefetchThreads, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientResultChunkSizeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientResultChunkSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientSessionKeepAliveHeartbeatFrequencyLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDataRetentionTimeInDaysLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDataRetentionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasHybridTableLockTimeoutLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterHybridTableLockTimeout, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasJsonIndentLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterJsonIndent, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasLockTimeoutLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterLockTimeout, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMaxConcurrencyLevelLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterMaxConcurrencyLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMaxDataExtensionTimeInDaysLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterMaxDataExtensionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMinDataRetentionTimeInDaysLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterMinDataRetentionTimeInDays, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMultiStatementCountLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterMultiStatementCount, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasRowsPerResultsetLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterRowsPerResultset, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStatementQueuedTimeoutInSecondsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterStatementQueuedTimeoutInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStatementTimeoutInSecondsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterStatementTimeoutInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSuspendTaskAfterNumFailuresLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterSuspendTaskAfterNumFailures, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTaskAutoRetryAttemptsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTaskAutoRetryAttempts, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTwoDigitCenturyStartLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTwoDigitCenturyStart, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSecondsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskTimeoutMsLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterUserTaskTimeoutMs, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasWeekOfYearPolicyLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterWeekOfYearPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasWeekStartLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterWeekStart, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasActivePythonProfilerLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterActivePythonProfiler, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBaseLocationPrefixLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterBaseLocationPrefix, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBinaryInputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterBinaryInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasBinaryOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterBinaryOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCatalogLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterCatalog, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCatalogSyncLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterCatalogSync, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasClientTimestampTypeMappingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterClientTimestampTypeMapping, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCortexEnabledCrossRegionLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterCortexEnabledCrossRegion, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCortexModelsAllowlistLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterCortexModelsAllowlist, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasCsvTimestampFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterCsvTimestampFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDateInputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDateInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDateOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDateOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultDdlCollationLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDefaultDDLCollation, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNotebookComputePoolCpuLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDefaultNotebookComputePoolCpu, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNotebookComputePoolGpuLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDefaultNotebookComputePoolGpu, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultNullOrderingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDefaultNullOrdering, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasDefaultStreamlitNotebookWarehouseLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterDefaultStreamlitNotebookWarehouse, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasEventTableLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterEventTable, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasExternalVolumeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterExternalVolume, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasGeographyOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterGeographyOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasGeometryOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterGeometryOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasInitialReplicationSizeLimitInTbLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterInitialReplicationSizeLimitInTB, expected)) // modified manually
	return a
}

func (a *AccountResourceParametersAssert) HasListingAutoFulfillmentReplicationRefreshScheduleLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterListingAutoFulfillmentReplicationRefreshSchedule, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterLogLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasMetricLevelLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterMetricLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasNetworkPolicyLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterNetworkPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPythonProfilerModulesLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPythonProfilerModules, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasPythonProfilerTargetStageLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterPythonProfilerTargetStage, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasQueryTagLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterQueryTag, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasS3StageVpceDnsNameLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterS3StageVpceDnsName, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSamlIdentityProviderLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterSamlIdentityProvider, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSearchPathLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterSearchPath, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasServerlessTaskMaxStatementSizeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterServerlessTaskMaxStatementSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasServerlessTaskMinStatementSizeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterServerlessTaskMinStatementSize, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasSimulatedDataSharingConsumerLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterSimulatedDataSharingConsumer, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasStorageSerializationPolicyLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterStorageSerializationPolicy, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampInputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampLtzOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampLtzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampNtzOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampNtzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampTypeMappingLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampTypeMapping, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimestampTzOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimestampTzOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimezoneLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimezone, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimeInputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimeInputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTimeOutputFormatLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTimeOutputFormat, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTraceLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasTransactionDefaultIsolationLevelLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterTransactionDefaultIsolationLevel, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUnsupportedDdlActionLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterUnsupportedDdlAction, expected))
	return a
}

func (a *AccountResourceParametersAssert) HasUserTaskManagedInitialWarehouseSizeLevel(expected sdk.ParameterType) *AccountResourceParametersAssert {
	a.AddAssertion(assert.ResourceParameterLevelSet(sdk.AccountParameterUserTaskManagedInitialWarehouseSize, expected))
	return a
}
