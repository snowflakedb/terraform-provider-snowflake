// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type ProgrammaticAccessTokenShowOutputAssert struct {
	*assert.ResourceAssert
}

func ProgrammaticAccessTokenShowOutput(t *testing.T, name string) *ProgrammaticAccessTokenShowOutputAssert {
	t.Helper()

	programmaticAccessTokenAssert := ProgrammaticAccessTokenShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	programmaticAccessTokenAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &programmaticAccessTokenAssert
}

func ImportedProgrammaticAccessTokenShowOutput(t *testing.T, id string) *ProgrammaticAccessTokenShowOutputAssert {
	t.Helper()

	programmaticAccessTokenAssert := ProgrammaticAccessTokenShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	programmaticAccessTokenAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &programmaticAccessTokenAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (p *ProgrammaticAccessTokenShowOutputAssert) HasName(expected string) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasUserName(expected sdk.AccountObjectIdentifier) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("user_name", expected.Name()))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasRoleRestriction(expected sdk.AccountObjectIdentifier) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("role_restriction", expected.Name()))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasExpiresAt(expected time.Time) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("expires_at", expected.String()))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasStatus(expected sdk.ProgrammaticAccessTokenStatus) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("status", expected))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasComment(expected string) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasCreatedOn(expected time.Time) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasCreatedBy(expected string) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("created_by", expected))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasMinsToBypassNetworkPolicyRequirement(expected int) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueSet("mins_to_bypass_network_policy_requirement", expected))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasRotatedTo(expected string) *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("rotated_to", expected))
	return p
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoName() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoUserName() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("user_name"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoRoleRestriction() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("role_restriction"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoExpiresAt() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("expires_at"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoStatus() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("status"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoComment() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoCreatedOn() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoCreatedBy() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("created_by"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoMinsToBypassNetworkPolicyRequirement() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueNotSet("mins_to_bypass_network_policy_requirement"))
	return p
}

func (p *ProgrammaticAccessTokenShowOutputAssert) HasNoRotatedTo() *ProgrammaticAccessTokenShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("rotated_to"))
	return p
}
