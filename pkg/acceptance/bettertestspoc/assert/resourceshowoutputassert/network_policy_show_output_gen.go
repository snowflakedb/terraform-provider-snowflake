// Code generated by resource show output assertions generator (v0.1.0); DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type NetworkPolicyShowOutputAssert struct {
	*assert.ResourceAssert
}

func NetworkPolicyShowOutput(t *testing.T, name string) *NetworkPolicyShowOutputAssert {
	t.Helper()

	networkPolicyAssert := NetworkPolicyShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	networkPolicyAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &networkPolicyAssert
}

func ImportedNetworkPolicyShowOutput(t *testing.T, id string) *NetworkPolicyShowOutputAssert {
	t.Helper()

	networkPolicyAssert := NetworkPolicyShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	networkPolicyAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &networkPolicyAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (n *NetworkPolicyShowOutputAssert) HasCreatedOn(expected string) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasName(expected string) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasComment(expected string) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasEntriesInAllowedIpList(expected int) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueSet("entries_in_allowed_ip_list", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasEntriesInBlockedIpList(expected int) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueSet("entries_in_blocked_ip_list", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasEntriesInAllowedNetworkRules(expected int) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueSet("entries_in_allowed_network_rules", expected))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasEntriesInBlockedNetworkRules(expected int) *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueSet("entries_in_blocked_network_rules", expected))
	return n
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (n *NetworkPolicyShowOutputAssert) HasNoCreatedOn() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoName() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoComment() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoEntriesInAllowedIpList() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueNotSet("entries_in_allowed_ip_list"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoEntriesInBlockedIpList() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueNotSet("entries_in_blocked_ip_list"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoEntriesInAllowedNetworkRules() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueNotSet("entries_in_allowed_network_rules"))
	return n
}

func (n *NetworkPolicyShowOutputAssert) HasNoEntriesInBlockedNetworkRules() *NetworkPolicyShowOutputAssert {
	n.AddAssertion(assert.ResourceShowOutputIntValueNotSet("entries_in_blocked_network_rules"))
	return n
}
