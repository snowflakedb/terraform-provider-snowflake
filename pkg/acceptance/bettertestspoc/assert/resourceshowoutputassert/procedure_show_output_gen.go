// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type ProcedureShowOutputAssert struct {
	*assert.ResourceAssert
}

func ProcedureShowOutput(t *testing.T, name string) *ProcedureShowOutputAssert {
	t.Helper()

	procedureAssert := ProcedureShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	procedureAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &procedureAssert
}

func ImportedProcedureShowOutput(t *testing.T, id string) *ProcedureShowOutputAssert {
	t.Helper()

	procedureAssert := ProcedureShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	procedureAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &procedureAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (p *ProcedureShowOutputAssert) HasCreatedOn(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasName(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasSchemaName(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("schema_name", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasIsBuiltin(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_builtin", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasIsAggregate(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_aggregate", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasIsAnsi(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_ansi", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasMinNumArguments(expected int) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueSet("min_num_arguments", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasMaxNumArguments(expected int) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueSet("max_num_arguments", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasArgumentsRaw(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("arguments_raw", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasDescription(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("description", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasCatalogName(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("catalog_name", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasIsTableFunction(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_table_function", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasValidForClustering(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("valid_for_clustering", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasIsSecure(expected bool) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_secure", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasSecrets(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("secrets", expected))
	return p
}

func (p *ProcedureShowOutputAssert) HasExternalAccessIntegrations(expected string) *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("external_access_integrations", expected))
	return p
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (p *ProcedureShowOutputAssert) HasNoCreatedOn() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoName() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoSchemaName() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("schema_name"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoIsBuiltin() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_builtin"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoIsAggregate() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_aggregate"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoIsAnsi() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_ansi"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoMinNumArguments() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueNotSet("min_num_arguments"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoMaxNumArguments() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputIntValueNotSet("max_num_arguments"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoArgumentsOld() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueSet("arguments_old.#", "0"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoArgumentsRaw() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("arguments_raw"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoDescription() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("description"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoCatalogName() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("catalog_name"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoIsTableFunction() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_table_function"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoValidForClustering() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("valid_for_clustering"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoIsSecure() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_secure"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoSecrets() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("secrets"))
	return p
}

func (p *ProcedureShowOutputAssert) HasNoExternalAccessIntegrations() *ProcedureShowOutputAssert {
	p.AddAssertion(assert.ResourceShowOutputValueNotSet("external_access_integrations"))
	return p
}
