// Code generated by resource show output assertions generator (v0.1.0); DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type RoleShowOutputAssert struct {
	*assert.ResourceAssert
}

func RoleShowOutput(t *testing.T, name string) *RoleShowOutputAssert {
	t.Helper()

	roleAssert := RoleShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	roleAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &roleAssert
}

func ImportedRoleShowOutput(t *testing.T, id string) *RoleShowOutputAssert {
	t.Helper()

	roleAssert := RoleShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	roleAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &roleAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (r *RoleShowOutputAssert) HasCreatedOn(expected time.Time) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return r
}

func (r *RoleShowOutputAssert) HasName(expected string) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return r
}

func (r *RoleShowOutputAssert) HasIsDefault(expected bool) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_default", expected))
	return r
}

func (r *RoleShowOutputAssert) HasIsCurrent(expected bool) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_current", expected))
	return r
}

func (r *RoleShowOutputAssert) HasIsInherited(expected bool) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_inherited", expected))
	return r
}

func (r *RoleShowOutputAssert) HasAssignedToUsers(expected int) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueSet("assigned_to_users", expected))
	return r
}

func (r *RoleShowOutputAssert) HasGrantedToRoles(expected int) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueSet("granted_to_roles", expected))
	return r
}

func (r *RoleShowOutputAssert) HasGrantedRoles(expected int) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueSet("granted_roles", expected))
	return r
}

func (r *RoleShowOutputAssert) HasOwner(expected string) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return r
}

func (r *RoleShowOutputAssert) HasComment(expected string) *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return r
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (r *RoleShowOutputAssert) HasNoCreatedOn() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return r
}

func (r *RoleShowOutputAssert) HasNoName() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return r
}

func (r *RoleShowOutputAssert) HasNoIsDefault() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_default"))
	return r
}

func (r *RoleShowOutputAssert) HasNoIsCurrent() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_current"))
	return r
}

func (r *RoleShowOutputAssert) HasNoIsInherited() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_inherited"))
	return r
}

func (r *RoleShowOutputAssert) HasNoAssignedToUsers() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueNotSet("assigned_to_users"))
	return r
}

func (r *RoleShowOutputAssert) HasNoGrantedToRoles() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueNotSet("granted_to_roles"))
	return r
}

func (r *RoleShowOutputAssert) HasNoGrantedRoles() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputIntValueNotSet("granted_roles"))
	return r
}

func (r *RoleShowOutputAssert) HasNoOwner() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueNotSet("owner"))
	return r
}

func (r *RoleShowOutputAssert) HasNoComment() *RoleShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return r
}
