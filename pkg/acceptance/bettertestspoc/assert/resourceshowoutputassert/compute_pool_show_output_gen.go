// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type ComputePoolShowOutputAssert struct {
	*assert.ResourceAssert
}

func ComputePoolShowOutput(t *testing.T, name string) *ComputePoolShowOutputAssert {
	t.Helper()

	computePoolAssert := ComputePoolShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	computePoolAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &computePoolAssert
}

func ImportedComputePoolShowOutput(t *testing.T, id string) *ComputePoolShowOutputAssert {
	t.Helper()

	computePoolAssert := ComputePoolShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	computePoolAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &computePoolAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (c *ComputePoolShowOutputAssert) HasName(expected string) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasState(expected sdk.ComputePoolState) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("state", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasMinNodes(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("min_nodes", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasMaxNodes(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("max_nodes", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasInstanceFamily(expected sdk.ComputePoolInstanceFamily) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("instance_family", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNumServices(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("num_services", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNumJobs(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("num_jobs", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasAutoSuspendSecs(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("auto_suspend_secs", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasAutoResume(expected bool) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputBoolValueSet("auto_resume", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasActiveNodes(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("active_nodes", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasIdleNodes(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("idle_nodes", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasTargetNodes(expected int) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueSet("target_nodes", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasCreatedOn(expected time.Time) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return c
}

func (c *ComputePoolShowOutputAssert) HasResumedOn(expected time.Time) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("resumed_on", expected.String()))
	return c
}

func (c *ComputePoolShowOutputAssert) HasUpdatedOn(expected time.Time) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("updated_on", expected.String()))
	return c
}

func (c *ComputePoolShowOutputAssert) HasOwner(expected string) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasComment(expected string) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasIsExclusive(expected bool) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_exclusive", expected))
	return c
}

func (c *ComputePoolShowOutputAssert) HasApplication(expected sdk.AccountObjectIdentifier) *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("application", expected.Name()))
	return c
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (c *ComputePoolShowOutputAssert) HasNoName() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoState() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("state"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoMinNodes() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("min_nodes"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoMaxNodes() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("max_nodes"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoInstanceFamily() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("instance_family"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoNumServices() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("num_services"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoNumJobs() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("num_jobs"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoAutoSuspendSecs() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("auto_suspend_secs"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoAutoResume() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("auto_resume"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoActiveNodes() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("active_nodes"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoIdleNodes() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("idle_nodes"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoTargetNodes() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputIntValueNotSet("target_nodes"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoCreatedOn() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoResumedOn() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("resumed_on"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoUpdatedOn() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("updated_on"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoOwner() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("owner"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoComment() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoIsExclusive() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_exclusive"))
	return c
}

func (c *ComputePoolShowOutputAssert) HasNoApplication() *ComputePoolShowOutputAssert {
	c.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("application"))
	return c
}
