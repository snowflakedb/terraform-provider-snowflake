// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type ServiceShowOutputAssert struct {
	*assert.ResourceAssert
}

func ServiceShowOutput(t *testing.T, name string) *ServiceShowOutputAssert {
	t.Helper()

	serviceAssert := ServiceShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	serviceAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &serviceAssert
}

func ImportedServiceShowOutput(t *testing.T, id string) *ServiceShowOutputAssert {
	t.Helper()

	serviceAssert := ServiceShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	serviceAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &serviceAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (s *ServiceShowOutputAssert) HasName(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasStatus(expected sdk.ServiceStatus) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("status", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasDatabaseName(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("database_name", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasSchemaName(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("schema_name", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasOwner(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasComputePool(expected sdk.AccountObjectIdentifier) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("compute_pool", expected.Name()))
	return s
}

func (s *ServiceShowOutputAssert) HasDnsName(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("dns_name", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasCurrentInstances(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("current_instances", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasTargetInstances(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("target_instances", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasMinReadyInstances(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("min_ready_instances", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasMinInstances(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("min_instances", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasMaxInstances(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("max_instances", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasAutoResume(expected bool) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueSet("auto_resume", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasCreatedOn(expected time.Time) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return s
}

func (s *ServiceShowOutputAssert) HasUpdatedOn(expected time.Time) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("updated_on", expected.String()))
	return s
}

func (s *ServiceShowOutputAssert) HasResumedOn(expected time.Time) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("resumed_on", expected.String()))
	return s
}

func (s *ServiceShowOutputAssert) HasSuspendedOn(expected time.Time) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("suspended_on", expected.String()))
	return s
}

func (s *ServiceShowOutputAssert) HasAutoSuspendSecs(expected int) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueSet("auto_suspend_secs", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasComment(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasOwnerRoleType(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("owner_role_type", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasQueryWarehouse(expected sdk.AccountObjectIdentifier) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("query_warehouse", expected.Name()))
	return s
}

func (s *ServiceShowOutputAssert) HasIsJob(expected bool) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_job", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasIsAsyncJob(expected bool) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_async_job", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasSpecDigest(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("spec_digest", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasIsUpgrading(expected bool) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_upgrading", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasManagingObjectDomain(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("managing_object_domain", expected))
	return s
}

func (s *ServiceShowOutputAssert) HasManagingObjectName(expected string) *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("managing_object_name", expected))
	return s
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (s *ServiceShowOutputAssert) HasNoName() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoStatus() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("status"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoDatabaseName() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("database_name"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoSchemaName() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("schema_name"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoOwner() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("owner"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoComputePool() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("compute_pool"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoDnsName() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("dns_name"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoCurrentInstances() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("current_instances"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoTargetInstances() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("target_instances"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoMinReadyInstances() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("min_ready_instances"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoMinInstances() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("min_instances"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoMaxInstances() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("max_instances"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoAutoResume() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("auto_resume"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoExternalAccessIntegrations() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("external_access_integrations.#", "0"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoCreatedOn() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoUpdatedOn() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("updated_on"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoResumedOn() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("resumed_on"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoSuspendedOn() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("suspended_on"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoAutoSuspendSecs() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputIntValueNotSet("auto_suspend_secs"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoComment() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoOwnerRoleType() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("owner_role_type"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoQueryWarehouse() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("query_warehouse"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoIsJob() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_job"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoIsAsyncJob() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_async_job"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoSpecDigest() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("spec_digest"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoIsUpgrading() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_upgrading"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoManagingObjectDomain() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("managing_object_domain"))
	return s
}

func (s *ServiceShowOutputAssert) HasNoManagingObjectName() *ServiceShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("managing_object_name"))
	return s
}
