// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type OrganizationAccountShowOutputAssert struct {
	*assert.ResourceAssert
}

func OrganizationAccountShowOutput(t *testing.T, name string) *OrganizationAccountShowOutputAssert {
	t.Helper()

	organizationAccountAssert := OrganizationAccountShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	organizationAccountAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &organizationAccountAssert
}

func ImportedOrganizationAccountShowOutput(t *testing.T, id string) *OrganizationAccountShowOutputAssert {
	t.Helper()

	organizationAccountAssert := OrganizationAccountShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	organizationAccountAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &organizationAccountAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (o *OrganizationAccountShowOutputAssert) HasOrganizationName(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("organization_name", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountName(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_name", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasSnowflakeRegion(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("snowflake_region", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasEdition(expected sdk.OrganizationAccountEdition) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("edition", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountUrl(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_url", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasCreatedOn(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasComment(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountLocator(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_locator", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountLocatorUrl(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_locator_url", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasManagedAccounts(expected int) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputIntValueSet("managed_accounts", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasConsumptionBillingEntityName(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("consumption_billing_entity_name", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasMarketplaceConsumerBillingEntityName(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("marketplace_consumer_billing_entity_name", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasMarketplaceProviderBillingEntityName(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("marketplace_provider_billing_entity_name", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasOldAccountUrl(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("old_account_url", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasIsOrgAdmin(expected bool) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_org_admin", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountOldUrlSavedOn(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_old_url_saved_on", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasAccountOldUrlLastUsed(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("account_old_url_last_used", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasOrganizationOldUrl(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("organization_old_url", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasOrganizationOldUrlSavedOn(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("organization_old_url_saved_on", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasOrganizationOldUrlLastUsed(expected string) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueSet("organization_old_url_last_used", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasIsEventsAccount(expected bool) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_events_account", expected))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasIsOrganizationAccount(expected bool) *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_organization_account", expected))
	return o
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (o *OrganizationAccountShowOutputAssert) HasNoOrganizationName() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("organization_name"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountName() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_name"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoSnowflakeRegion() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("snowflake_region"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoEdition() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("edition"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountUrl() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_url"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoCreatedOn() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoComment() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountLocator() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_locator"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountLocatorUrl() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_locator_url"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoManagedAccounts() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputIntValueNotSet("managed_accounts"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoConsumptionBillingEntityName() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("consumption_billing_entity_name"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoMarketplaceConsumerBillingEntityName() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("marketplace_consumer_billing_entity_name"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoMarketplaceProviderBillingEntityName() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("marketplace_provider_billing_entity_name"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoOldAccountUrl() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("old_account_url"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoIsOrgAdmin() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_org_admin"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountOldUrlSavedOn() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_old_url_saved_on"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoAccountOldUrlLastUsed() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("account_old_url_last_used"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoOrganizationOldUrl() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("organization_old_url"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoOrganizationOldUrlSavedOn() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("organization_old_url_saved_on"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoOrganizationOldUrlLastUsed() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputValueNotSet("organization_old_url_last_used"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoIsEventsAccount() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_events_account"))
	return o
}

func (o *OrganizationAccountShowOutputAssert) HasNoIsOrganizationAccount() *OrganizationAccountShowOutputAssert {
	o.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_organization_account"))
	return o
}
