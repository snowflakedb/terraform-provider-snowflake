// Code generated by resource show output assertions generator (v0.1.0); DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type StorageIntegrationShowOutputAssert struct {
	*assert.ResourceAssert
}

func StorageIntegrationShowOutput(t *testing.T, name string) *StorageIntegrationShowOutputAssert {
	t.Helper()

	storageIntegrationAssert := StorageIntegrationShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	storageIntegrationAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &storageIntegrationAssert
}

func ImportedStorageIntegrationShowOutput(t *testing.T, id string) *StorageIntegrationShowOutputAssert {
	t.Helper()

	storageIntegrationAssert := StorageIntegrationShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	storageIntegrationAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &storageIntegrationAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (s *StorageIntegrationShowOutputAssert) HasName(expected string) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasStorageType(expected string) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("storage_type", expected))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasCategory(expected string) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("category", expected))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasEnabled(expected bool) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueSet("enabled", expected))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasComment(expected string) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasCreatedOn(expected time.Time) *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return s
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (s *StorageIntegrationShowOutputAssert) HasNoName() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasNoStorageType() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("storage_type"))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasNoCategory() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("category"))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasNoEnabled() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("enabled"))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasNoComment() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return s
}

func (s *StorageIntegrationShowOutputAssert) HasNoCreatedOn() *StorageIntegrationShowOutputAssert {
	s.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return s
}
