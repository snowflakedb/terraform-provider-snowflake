// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type ApiAuthenticationIntegrationWithClientCredentialsResourceAssert struct {
	*assert.ResourceAssert
}

func ApiAuthenticationIntegrationWithClientCredentialsResource(t *testing.T, name string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	t.Helper()

	return &ApiAuthenticationIntegrationWithClientCredentialsResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedApiAuthenticationIntegrationWithClientCredentialsResource(t *testing.T, id string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	t.Helper()

	return &ApiAuthenticationIntegrationWithClientCredentialsResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNameString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("name", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasCommentString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("comment", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasEnabledString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("enabled", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasFullyQualifiedNameString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthAccessTokenValidityString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_access_token_validity", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthAllowedScopesString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_allowed_scopes", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientAuthMethodString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_client_auth_method", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientIdString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_client_id", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientSecretString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_client_secret", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthRefreshTokenValidityString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_refresh_token_validity", expected))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthTokenEndpointString(expected string) *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_token_endpoint", expected))
	return a
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoName() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("name"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoComment() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("comment"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoEnabled() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("enabled"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoFullyQualifiedName() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthAccessTokenValidity() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_access_token_validity"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthClientAuthMethod() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_client_auth_method"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthClientId() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_client_id"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthClientSecret() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_client_secret"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthRefreshTokenValidity() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_refresh_token_validity"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNoOauthTokenEndpoint() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueNotSet("oauth_token_endpoint"))
	return a
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasCommentEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("comment", ""))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasFullyQualifiedNameEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("fully_qualified_name", ""))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthAccessTokenValidityEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_access_token_validity", ""))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthAllowedScopesEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_allowed_scopes.#", "0"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientAuthMethodEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_client_auth_method", ""))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthRefreshTokenValidityEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_refresh_token_validity", ""))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthTokenEndpointEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValueSet("oauth_token_endpoint", ""))
	return a
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasNameNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("name"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasCommentNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("comment"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasEnabledNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("enabled"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasFullyQualifiedNameNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("fully_qualified_name"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthAccessTokenValidityNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_access_token_validity"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientAuthMethodNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_client_auth_method"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientIdNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_client_id"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthClientSecretNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_client_secret"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthRefreshTokenValidityNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_refresh_token_validity"))
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert) HasOauthTokenEndpointNotEmpty() *ApiAuthenticationIntegrationWithClientCredentialsResourceAssert {
	a.AddAssertion(assert.ValuePresent("oauth_token_endpoint"))
	return a
}
