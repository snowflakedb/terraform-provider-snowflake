// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type CurrentOrganizationAccountResourceAssert struct {
	*assert.ResourceAssert
}

func CurrentOrganizationAccountResource(t *testing.T, name string) *CurrentOrganizationAccountResourceAssert {
	t.Helper()

	return &CurrentOrganizationAccountResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedCurrentOrganizationAccountResource(t *testing.T, id string) *CurrentOrganizationAccountResourceAssert {
	t.Helper()

	return &CurrentOrganizationAccountResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (c *CurrentOrganizationAccountResourceAssert) HasNameString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("name", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAbortDetachedQueryString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("abort_detached_query", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasActivePythonProfilerString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("active_python_profiler", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowClientMfaCachingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("allow_client_mfa_caching", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowIdTokenString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("allow_id_token", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAutocommitString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("autocommit", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBaseLocationPrefixString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("base_location_prefix", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryInputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("binary_input_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("binary_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("catalog", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogSyncString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("catalog_sync", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEnableLogInfoStatementParametersString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_enable_log_info_statement_parameters", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEncryptionKeySizeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_encryption_key_size", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMemoryLimitString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_memory_limit", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataRequestUseConnectionCtxString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_metadata_request_use_connection_ctx", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataUseSessionDatabaseString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_metadata_use_session_database", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientPrefetchThreadsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_prefetch_threads", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultChunkSizeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_result_chunk_size", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultColumnCaseInsensitiveString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_result_column_case_insensitive", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_session_keep_alive", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveHeartbeatFrequencyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_session_keep_alive_heartbeat_frequency", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientTimestampTypeMappingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_timestamp_type_mapping", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexEnabledCrossRegionString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("cortex_enabled_cross_region", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexModelsAllowlistString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("cortex_models_allowlist", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCsvTimestampFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("csv_timestamp_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDataRetentionTimeInDaysString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("data_retention_time_in_days", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateInputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("date_input_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("date_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultDdlCollationString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_ddl_collation", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolCpuString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_notebook_compute_pool_cpu", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolGpuString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_notebook_compute_pool_gpu", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNullOrderingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_null_ordering", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultStreamlitNotebookWarehouseString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_streamlit_notebook_warehouse", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUiDownloadButtonString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("disable_ui_download_button", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUserPrivilegeGrantsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("disable_user_privilege_grants", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableAutomaticSensitiveDataClassificationLogString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_automatic_sensitive_data_classification_log", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableEgressCostOptimizerString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_egress_cost_optimizer", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableIdentifierFirstLoginString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_identifier_first_login", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableInternalStagesPrivatelinkString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_internal_stages_privatelink", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForImageRepositoryString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_tri_secret_and_rekey_opt_out_for_image_repository", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForSpcsBlockStorageString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnhandledExceptionsReportingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unhandled_exceptions_reporting", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnloadPhysicalTypeOptimizationString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unload_physical_type_optimization", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedQuerySyntaxErrorString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unredacted_query_syntax_error", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedSecureObjectErrorString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unredacted_secure_object_error", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnforceNetworkRulesForInternalStagesString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enforce_network_rules_for_internal_stages", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicMergeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("error_on_nondeterministic_merge", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicUpdateString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("error_on_nondeterministic_update", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEventTableString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("event_table", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalOauthAddPrivilegedRolesToBlockedListString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("external_oauth_add_privileged_roles_to_blocked_list", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalVolumeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("external_volume", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeographyOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("geography_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeometryOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("geometry_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasHybridTableLockTimeoutString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("hybrid_table_lock_timeout", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasInitialReplicationSizeLimitInTbString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("initial_replication_size_limit_in_tb", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatDecimalAsIntString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_treat_decimal_as_int", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatTimestampNtzAsUtcString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_treat_timestamp_ntz_as_utc", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcUseSessionTimezoneString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_use_session_timezone", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsTreatIntegerAsBigintString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("js_treat_integer_as_bigint", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsonIndentString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("json_indent", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasListingAutoFulfillmentReplicationRefreshScheduleString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("listing_auto_fulfillment_replication_refresh_schedule", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLockTimeoutString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("lock_timeout", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLogLevelString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("log_level", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxConcurrencyLevelString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("max_concurrency_level", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxDataExtensionTimeInDaysString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("max_data_extension_time_in_days", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMetricLevelString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("metric_level", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMinDataRetentionTimeInDaysString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("min_data_retention_time_in_days", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMultiStatementCountString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("multi_statement_count", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNetworkPolicyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("network_policy", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoorderSequenceAsDefaultString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("noorder_sequence_as_default", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOauthAddPrivilegedRolesToBlockedListString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("oauth_add_privileged_roles_to_blocked_list", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOdbcTreatDecimalAsIntString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("odbc_treat_decimal_as_int", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPasswordPolicyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("password_policy", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPeriodicDataRekeyingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("periodic_data_rekeying", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPipeExecutionPausedString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("pipe_execution_paused", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInlineUrlString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("prevent_unload_to_inline_url", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInternalStagesString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("prevent_unload_to_internal_stages", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerModulesString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("python_profiler_modules", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerTargetStageString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("python_profiler_target_stage", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQueryTagString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("query_tag", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQuotedIdentifiersIgnoreCaseString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("quoted_identifiers_ignore_case", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasReplaceInvalidCharactersString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("replace_invalid_characters", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageCreationString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("require_storage_integration_for_stage_creation", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageOperationString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("require_storage_integration_for_stage_operation", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasResourceMonitorString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("resource_monitor", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRowsPerResultsetString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("rows_per_resultset", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasS3StageVpceDnsNameString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("s3_stage_vpce_dns_name", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSamlIdentityProviderString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("saml_identity_provider", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSearchPathString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("search_path", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMaxStatementSizeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("serverless_task_max_statement_size", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMinStatementSizeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("serverless_task_min_statement_size", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSessionPolicyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("session_policy", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSimulatedDataSharingConsumerString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("simulated_data_sharing_consumer", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSsoLoginPageString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("sso_login_page", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementQueuedTimeoutInSecondsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("statement_queued_timeout_in_seconds", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementTimeoutInSecondsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("statement_timeout_in_seconds", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStorageSerializationPolicyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("storage_serialization_policy", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStrictJsonOutputString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("strict_json_output", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSuspendTaskAfterNumFailuresString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("suspend_task_after_num_failures", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTaskAutoRetryAttemptsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("task_auto_retry_attempts", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeInputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("time_input_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("time_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampDayIsAlways24hString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_day_is_always_24h", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampInputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_input_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampLtzOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_ltz_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampNtzOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_ntz_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTypeMappingString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_type_mapping", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTzOutputFormatString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_tz_output_format", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimezoneString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timezone", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTraceLevelString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("trace_level", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionAbortOnErrorString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("transaction_abort_on_error", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionDefaultIsolationLevelString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("transaction_default_isolation_level", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTwoDigitCenturyStartString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("two_digit_century_start", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUnsupportedDdlActionString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("unsupported_ddl_action", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUseCachedResultString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("use_cached_result", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskManagedInitialWarehouseSizeString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_managed_initial_warehouse_size", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskMinimumTriggerIntervalInSecondsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_minimum_trigger_interval_in_seconds", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskTimeoutMsString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_timeout_ms", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekOfYearPolicyString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("week_of_year_policy", expected))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekStartString(expected string) *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("week_start", expected))
	return c
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (c *CurrentOrganizationAccountResourceAssert) HasNoName() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("name"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoAbortDetachedQuery() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("abort_detached_query"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoActivePythonProfiler() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("active_python_profiler"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoAllowClientMfaCaching() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("allow_client_mfa_caching"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoAllowIdToken() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("allow_id_token"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoAutocommit() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("autocommit"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoBaseLocationPrefix() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("base_location_prefix"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoBinaryInputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("binary_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoBinaryOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("binary_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoCatalog() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("catalog"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoCatalogSync() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("catalog_sync"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientEnableLogInfoStatementParameters() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_enable_log_info_statement_parameters"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientEncryptionKeySize() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_encryption_key_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientMemoryLimit() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_memory_limit"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientMetadataRequestUseConnectionCtx() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_metadata_request_use_connection_ctx"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientMetadataUseSessionDatabase() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_metadata_use_session_database"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientPrefetchThreads() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_prefetch_threads"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientResultChunkSize() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_result_chunk_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientResultColumnCaseInsensitive() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_result_column_case_insensitive"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientSessionKeepAlive() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_session_keep_alive"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientSessionKeepAliveHeartbeatFrequency() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_session_keep_alive_heartbeat_frequency"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoClientTimestampTypeMapping() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("client_timestamp_type_mapping"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoCortexEnabledCrossRegion() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("cortex_enabled_cross_region"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoCortexModelsAllowlist() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("cortex_models_allowlist"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoCsvTimestampFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("csv_timestamp_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDataRetentionTimeInDays() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("data_retention_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDateInputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("date_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDateOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("date_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDefaultDdlCollation() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("default_ddl_collation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDefaultNotebookComputePoolCpu() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("default_notebook_compute_pool_cpu"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDefaultNotebookComputePoolGpu() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("default_notebook_compute_pool_gpu"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDefaultNullOrdering() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("default_null_ordering"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDefaultStreamlitNotebookWarehouse() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("default_streamlit_notebook_warehouse"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDisableUiDownloadButton() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("disable_ui_download_button"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoDisableUserPrivilegeGrants() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("disable_user_privilege_grants"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableAutomaticSensitiveDataClassificationLog() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_automatic_sensitive_data_classification_log"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableEgressCostOptimizer() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_egress_cost_optimizer"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableIdentifierFirstLogin() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_identifier_first_login"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableInternalStagesPrivatelink() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_internal_stages_privatelink"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableTriSecretAndRekeyOptOutForImageRepository() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_tri_secret_and_rekey_opt_out_for_image_repository"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableTriSecretAndRekeyOptOutForSpcsBlockStorage() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableUnhandledExceptionsReporting() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_unhandled_exceptions_reporting"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableUnloadPhysicalTypeOptimization() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_unload_physical_type_optimization"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableUnredactedQuerySyntaxError() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_unredacted_query_syntax_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnableUnredactedSecureObjectError() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enable_unredacted_secure_object_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEnforceNetworkRulesForInternalStages() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("enforce_network_rules_for_internal_stages"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoErrorOnNondeterministicMerge() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("error_on_nondeterministic_merge"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoErrorOnNondeterministicUpdate() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("error_on_nondeterministic_update"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoEventTable() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("event_table"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoExternalOauthAddPrivilegedRolesToBlockedList() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("external_oauth_add_privileged_roles_to_blocked_list"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoExternalVolume() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("external_volume"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoGeographyOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("geography_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoGeometryOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("geometry_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoHybridTableLockTimeout() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("hybrid_table_lock_timeout"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoInitialReplicationSizeLimitInTb() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("initial_replication_size_limit_in_tb"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoJdbcTreatDecimalAsInt() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("jdbc_treat_decimal_as_int"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoJdbcTreatTimestampNtzAsUtc() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("jdbc_treat_timestamp_ntz_as_utc"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoJdbcUseSessionTimezone() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("jdbc_use_session_timezone"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoJsTreatIntegerAsBigint() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("js_treat_integer_as_bigint"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoJsonIndent() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("json_indent"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoListingAutoFulfillmentReplicationRefreshSchedule() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("listing_auto_fulfillment_replication_refresh_schedule"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoLockTimeout() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("lock_timeout"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoLogLevel() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("log_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoMaxConcurrencyLevel() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("max_concurrency_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoMaxDataExtensionTimeInDays() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("max_data_extension_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoMetricLevel() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("metric_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoMinDataRetentionTimeInDays() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("min_data_retention_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoMultiStatementCount() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("multi_statement_count"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoNetworkPolicy() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("network_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoNoorderSequenceAsDefault() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("noorder_sequence_as_default"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoOauthAddPrivilegedRolesToBlockedList() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("oauth_add_privileged_roles_to_blocked_list"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoOdbcTreatDecimalAsInt() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("odbc_treat_decimal_as_int"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPasswordPolicy() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("password_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPeriodicDataRekeying() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("periodic_data_rekeying"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPipeExecutionPaused() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("pipe_execution_paused"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPreventUnloadToInlineUrl() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("prevent_unload_to_inline_url"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPreventUnloadToInternalStages() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("prevent_unload_to_internal_stages"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPythonProfilerModules() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("python_profiler_modules"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoPythonProfilerTargetStage() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("python_profiler_target_stage"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoQueryTag() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("query_tag"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoQuotedIdentifiersIgnoreCase() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("quoted_identifiers_ignore_case"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoReplaceInvalidCharacters() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("replace_invalid_characters"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoRequireStorageIntegrationForStageCreation() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("require_storage_integration_for_stage_creation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoRequireStorageIntegrationForStageOperation() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("require_storage_integration_for_stage_operation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoResourceMonitor() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("resource_monitor"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoRowsPerResultset() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("rows_per_resultset"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoS3StageVpceDnsName() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("s3_stage_vpce_dns_name"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSamlIdentityProvider() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("saml_identity_provider"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSearchPath() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("search_path"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoServerlessTaskMaxStatementSize() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("serverless_task_max_statement_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoServerlessTaskMinStatementSize() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("serverless_task_min_statement_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSessionPolicy() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("session_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSimulatedDataSharingConsumer() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("simulated_data_sharing_consumer"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSsoLoginPage() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("sso_login_page"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoStatementQueuedTimeoutInSeconds() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("statement_queued_timeout_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoStatementTimeoutInSeconds() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("statement_timeout_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoStorageSerializationPolicy() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("storage_serialization_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoStrictJsonOutput() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("strict_json_output"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoSuspendTaskAfterNumFailures() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("suspend_task_after_num_failures"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTaskAutoRetryAttempts() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("task_auto_retry_attempts"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimeInputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("time_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimeOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("time_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampDayIsAlways24h() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_day_is_always_24h"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampInputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampLtzOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_ltz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampNtzOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_ntz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampTypeMapping() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_type_mapping"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimestampTzOutputFormat() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timestamp_tz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTimezone() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("timezone"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTraceLevel() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("trace_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTransactionAbortOnError() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("transaction_abort_on_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTransactionDefaultIsolationLevel() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("transaction_default_isolation_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoTwoDigitCenturyStart() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("two_digit_century_start"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoUnsupportedDdlAction() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("unsupported_ddl_action"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoUseCachedResult() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("use_cached_result"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoUserTaskManagedInitialWarehouseSize() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("user_task_managed_initial_warehouse_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoUserTaskMinimumTriggerIntervalInSeconds() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("user_task_minimum_trigger_interval_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoUserTaskTimeoutMs() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("user_task_timeout_ms"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoWeekOfYearPolicy() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("week_of_year_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoWeekStart() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueNotSet("week_start"))
	return c
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (c *CurrentOrganizationAccountResourceAssert) HasAbortDetachedQueryEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("abort_detached_query", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasActivePythonProfilerEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("active_python_profiler", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowClientMfaCachingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("allow_client_mfa_caching", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowIdTokenEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("allow_id_token", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAutocommitEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("autocommit", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBaseLocationPrefixEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("base_location_prefix", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryInputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("binary_input_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("binary_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("catalog", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogSyncEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("catalog_sync", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEnableLogInfoStatementParametersEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_enable_log_info_statement_parameters", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEncryptionKeySizeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_encryption_key_size", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMemoryLimitEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_memory_limit", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataRequestUseConnectionCtxEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_metadata_request_use_connection_ctx", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataUseSessionDatabaseEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_metadata_use_session_database", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientPrefetchThreadsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_prefetch_threads", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultChunkSizeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_result_chunk_size", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultColumnCaseInsensitiveEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_result_column_case_insensitive", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_session_keep_alive", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveHeartbeatFrequencyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_session_keep_alive_heartbeat_frequency", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientTimestampTypeMappingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("client_timestamp_type_mapping", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexEnabledCrossRegionEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("cortex_enabled_cross_region", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexModelsAllowlistEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("cortex_models_allowlist", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCsvTimestampFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("csv_timestamp_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDataRetentionTimeInDaysEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("data_retention_time_in_days", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateInputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("date_input_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("date_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultDdlCollationEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_ddl_collation", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolCpuEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_notebook_compute_pool_cpu", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolGpuEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_notebook_compute_pool_gpu", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNullOrderingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_null_ordering", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultStreamlitNotebookWarehouseEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("default_streamlit_notebook_warehouse", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUiDownloadButtonEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("disable_ui_download_button", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUserPrivilegeGrantsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("disable_user_privilege_grants", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableAutomaticSensitiveDataClassificationLogEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_automatic_sensitive_data_classification_log", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableEgressCostOptimizerEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_egress_cost_optimizer", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableIdentifierFirstLoginEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_identifier_first_login", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableInternalStagesPrivatelinkEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_internal_stages_privatelink", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForImageRepositoryEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_tri_secret_and_rekey_opt_out_for_image_repository", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForSpcsBlockStorageEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnhandledExceptionsReportingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unhandled_exceptions_reporting", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnloadPhysicalTypeOptimizationEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unload_physical_type_optimization", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedQuerySyntaxErrorEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unredacted_query_syntax_error", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedSecureObjectErrorEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enable_unredacted_secure_object_error", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnforceNetworkRulesForInternalStagesEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("enforce_network_rules_for_internal_stages", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicMergeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("error_on_nondeterministic_merge", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicUpdateEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("error_on_nondeterministic_update", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEventTableEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("event_table", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalOauthAddPrivilegedRolesToBlockedListEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("external_oauth_add_privileged_roles_to_blocked_list", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalVolumeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("external_volume", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeographyOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("geography_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeometryOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("geometry_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasHybridTableLockTimeoutEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("hybrid_table_lock_timeout", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasInitialReplicationSizeLimitInTbEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("initial_replication_size_limit_in_tb", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatDecimalAsIntEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_treat_decimal_as_int", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatTimestampNtzAsUtcEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_treat_timestamp_ntz_as_utc", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcUseSessionTimezoneEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("jdbc_use_session_timezone", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsTreatIntegerAsBigintEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("js_treat_integer_as_bigint", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsonIndentEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("json_indent", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasListingAutoFulfillmentReplicationRefreshScheduleEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("listing_auto_fulfillment_replication_refresh_schedule", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLockTimeoutEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("lock_timeout", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLogLevelEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("log_level", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxConcurrencyLevelEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("max_concurrency_level", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxDataExtensionTimeInDaysEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("max_data_extension_time_in_days", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMetricLevelEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("metric_level", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMinDataRetentionTimeInDaysEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("min_data_retention_time_in_days", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMultiStatementCountEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("multi_statement_count", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNetworkPolicyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("network_policy", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoorderSequenceAsDefaultEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("noorder_sequence_as_default", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOauthAddPrivilegedRolesToBlockedListEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("oauth_add_privileged_roles_to_blocked_list", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOdbcTreatDecimalAsIntEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("odbc_treat_decimal_as_int", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPasswordPolicyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("password_policy", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPeriodicDataRekeyingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("periodic_data_rekeying", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPipeExecutionPausedEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("pipe_execution_paused", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInlineUrlEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("prevent_unload_to_inline_url", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInternalStagesEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("prevent_unload_to_internal_stages", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerModulesEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("python_profiler_modules", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerTargetStageEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("python_profiler_target_stage", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQueryTagEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("query_tag", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQuotedIdentifiersIgnoreCaseEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("quoted_identifiers_ignore_case", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasReplaceInvalidCharactersEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("replace_invalid_characters", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageCreationEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("require_storage_integration_for_stage_creation", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageOperationEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("require_storage_integration_for_stage_operation", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasResourceMonitorEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("resource_monitor", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRowsPerResultsetEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("rows_per_resultset", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasS3StageVpceDnsNameEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("s3_stage_vpce_dns_name", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSamlIdentityProviderEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("saml_identity_provider", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSearchPathEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("search_path", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMaxStatementSizeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("serverless_task_max_statement_size", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMinStatementSizeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("serverless_task_min_statement_size", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSessionPolicyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("session_policy", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSimulatedDataSharingConsumerEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("simulated_data_sharing_consumer", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSsoLoginPageEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("sso_login_page", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementQueuedTimeoutInSecondsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("statement_queued_timeout_in_seconds", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementTimeoutInSecondsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("statement_timeout_in_seconds", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStorageSerializationPolicyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("storage_serialization_policy", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStrictJsonOutputEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("strict_json_output", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSuspendTaskAfterNumFailuresEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("suspend_task_after_num_failures", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTaskAutoRetryAttemptsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("task_auto_retry_attempts", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeInputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("time_input_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("time_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampDayIsAlways24hEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_day_is_always_24h", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampInputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_input_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampLtzOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_ltz_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampNtzOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_ntz_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTypeMappingEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_type_mapping", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTzOutputFormatEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timestamp_tz_output_format", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimezoneEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("timezone", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTraceLevelEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("trace_level", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionAbortOnErrorEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("transaction_abort_on_error", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionDefaultIsolationLevelEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("transaction_default_isolation_level", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTwoDigitCenturyStartEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("two_digit_century_start", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUnsupportedDdlActionEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("unsupported_ddl_action", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUseCachedResultEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("use_cached_result", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskManagedInitialWarehouseSizeEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_managed_initial_warehouse_size", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskMinimumTriggerIntervalInSecondsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_minimum_trigger_interval_in_seconds", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskTimeoutMsEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("user_task_timeout_ms", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekOfYearPolicyEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("week_of_year_policy", ""))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekStartEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValueSet("week_start", ""))
	return c
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (c *CurrentOrganizationAccountResourceAssert) HasNameNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("name"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAbortDetachedQueryNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("abort_detached_query"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasActivePythonProfilerNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("active_python_profiler"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowClientMfaCachingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("allow_client_mfa_caching"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAllowIdTokenNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("allow_id_token"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasAutocommitNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("autocommit"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBaseLocationPrefixNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("base_location_prefix"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryInputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("binary_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasBinaryOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("binary_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("catalog"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCatalogSyncNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("catalog_sync"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEnableLogInfoStatementParametersNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_enable_log_info_statement_parameters"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientEncryptionKeySizeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_encryption_key_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMemoryLimitNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_memory_limit"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataRequestUseConnectionCtxNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_metadata_request_use_connection_ctx"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientMetadataUseSessionDatabaseNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_metadata_use_session_database"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientPrefetchThreadsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_prefetch_threads"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultChunkSizeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_result_chunk_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientResultColumnCaseInsensitiveNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_result_column_case_insensitive"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_session_keep_alive"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientSessionKeepAliveHeartbeatFrequencyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_session_keep_alive_heartbeat_frequency"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasClientTimestampTypeMappingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("client_timestamp_type_mapping"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexEnabledCrossRegionNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("cortex_enabled_cross_region"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCortexModelsAllowlistNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("cortex_models_allowlist"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasCsvTimestampFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("csv_timestamp_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDataRetentionTimeInDaysNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("data_retention_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateInputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("date_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDateOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("date_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultDdlCollationNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("default_ddl_collation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolCpuNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("default_notebook_compute_pool_cpu"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNotebookComputePoolGpuNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("default_notebook_compute_pool_gpu"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultNullOrderingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("default_null_ordering"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDefaultStreamlitNotebookWarehouseNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("default_streamlit_notebook_warehouse"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUiDownloadButtonNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("disable_ui_download_button"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasDisableUserPrivilegeGrantsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("disable_user_privilege_grants"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableAutomaticSensitiveDataClassificationLogNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_automatic_sensitive_data_classification_log"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableEgressCostOptimizerNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_egress_cost_optimizer"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableIdentifierFirstLoginNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_identifier_first_login"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableInternalStagesPrivatelinkNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_internal_stages_privatelink"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForImageRepositoryNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_tri_secret_and_rekey_opt_out_for_image_repository"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableTriSecretAndRekeyOptOutForSpcsBlockStorageNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnhandledExceptionsReportingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_unhandled_exceptions_reporting"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnloadPhysicalTypeOptimizationNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_unload_physical_type_optimization"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedQuerySyntaxErrorNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_unredacted_query_syntax_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnableUnredactedSecureObjectErrorNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enable_unredacted_secure_object_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEnforceNetworkRulesForInternalStagesNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("enforce_network_rules_for_internal_stages"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicMergeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("error_on_nondeterministic_merge"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasErrorOnNondeterministicUpdateNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("error_on_nondeterministic_update"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasEventTableNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("event_table"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalOauthAddPrivilegedRolesToBlockedListNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("external_oauth_add_privileged_roles_to_blocked_list"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasExternalVolumeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("external_volume"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeographyOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("geography_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasGeometryOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("geometry_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasHybridTableLockTimeoutNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("hybrid_table_lock_timeout"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasInitialReplicationSizeLimitInTbNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("initial_replication_size_limit_in_tb"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatDecimalAsIntNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("jdbc_treat_decimal_as_int"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcTreatTimestampNtzAsUtcNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("jdbc_treat_timestamp_ntz_as_utc"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJdbcUseSessionTimezoneNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("jdbc_use_session_timezone"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsTreatIntegerAsBigintNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("js_treat_integer_as_bigint"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasJsonIndentNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("json_indent"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasListingAutoFulfillmentReplicationRefreshScheduleNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("listing_auto_fulfillment_replication_refresh_schedule"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLockTimeoutNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("lock_timeout"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasLogLevelNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("log_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxConcurrencyLevelNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("max_concurrency_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMaxDataExtensionTimeInDaysNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("max_data_extension_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMetricLevelNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("metric_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMinDataRetentionTimeInDaysNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("min_data_retention_time_in_days"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasMultiStatementCountNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("multi_statement_count"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNetworkPolicyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("network_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasNoorderSequenceAsDefaultNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("noorder_sequence_as_default"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOauthAddPrivilegedRolesToBlockedListNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("oauth_add_privileged_roles_to_blocked_list"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasOdbcTreatDecimalAsIntNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("odbc_treat_decimal_as_int"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPasswordPolicyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("password_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPeriodicDataRekeyingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("periodic_data_rekeying"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPipeExecutionPausedNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("pipe_execution_paused"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInlineUrlNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("prevent_unload_to_inline_url"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPreventUnloadToInternalStagesNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("prevent_unload_to_internal_stages"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerModulesNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("python_profiler_modules"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasPythonProfilerTargetStageNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("python_profiler_target_stage"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQueryTagNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("query_tag"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasQuotedIdentifiersIgnoreCaseNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("quoted_identifiers_ignore_case"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasReplaceInvalidCharactersNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("replace_invalid_characters"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageCreationNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("require_storage_integration_for_stage_creation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRequireStorageIntegrationForStageOperationNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("require_storage_integration_for_stage_operation"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasResourceMonitorNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("resource_monitor"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasRowsPerResultsetNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("rows_per_resultset"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasS3StageVpceDnsNameNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("s3_stage_vpce_dns_name"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSamlIdentityProviderNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("saml_identity_provider"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSearchPathNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("search_path"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMaxStatementSizeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("serverless_task_max_statement_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasServerlessTaskMinStatementSizeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("serverless_task_min_statement_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSessionPolicyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("session_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSimulatedDataSharingConsumerNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("simulated_data_sharing_consumer"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSsoLoginPageNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("sso_login_page"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementQueuedTimeoutInSecondsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("statement_queued_timeout_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStatementTimeoutInSecondsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("statement_timeout_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStorageSerializationPolicyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("storage_serialization_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasStrictJsonOutputNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("strict_json_output"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasSuspendTaskAfterNumFailuresNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("suspend_task_after_num_failures"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTaskAutoRetryAttemptsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("task_auto_retry_attempts"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeInputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("time_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimeOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("time_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampDayIsAlways24hNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_day_is_always_24h"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampInputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_input_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampLtzOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_ltz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampNtzOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_ntz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTypeMappingNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_type_mapping"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimestampTzOutputFormatNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timestamp_tz_output_format"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTimezoneNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("timezone"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTraceLevelNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("trace_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionAbortOnErrorNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("transaction_abort_on_error"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTransactionDefaultIsolationLevelNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("transaction_default_isolation_level"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasTwoDigitCenturyStartNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("two_digit_century_start"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUnsupportedDdlActionNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("unsupported_ddl_action"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUseCachedResultNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("use_cached_result"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskManagedInitialWarehouseSizeNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("user_task_managed_initial_warehouse_size"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskMinimumTriggerIntervalInSecondsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("user_task_minimum_trigger_interval_in_seconds"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasUserTaskTimeoutMsNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("user_task_timeout_ms"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekOfYearPolicyNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("week_of_year_policy"))
	return c
}

func (c *CurrentOrganizationAccountResourceAssert) HasWeekStartNotEmpty() *CurrentOrganizationAccountResourceAssert {
	c.AddAssertion(assert.ValuePresent("week_start"))
	return c
}
