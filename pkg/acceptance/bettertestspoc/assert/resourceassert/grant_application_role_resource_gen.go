// Code generated by resource assertions generator (v0.1.0); DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type GrantApplicationRoleResourceAssert struct {
	*assert.ResourceAssert
}

func GrantApplicationRoleResource(t *testing.T, name string) *GrantApplicationRoleResourceAssert {
	t.Helper()

	return &GrantApplicationRoleResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedGrantApplicationRoleResource(t *testing.T, id string) *GrantApplicationRoleResourceAssert {
	t.Helper()

	return &GrantApplicationRoleResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (g *GrantApplicationRoleResourceAssert) HasApplicationNameString(expected string) *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("application_name", expected))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasApplicationRoleNameString(expected string) *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("application_role_name", expected))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasParentAccountRoleNameString(expected string) *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("parent_account_role_name", expected))
	return g
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (g *GrantApplicationRoleResourceAssert) HasNoApplicationName() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("application_name"))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasNoApplicationRoleName() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("application_role_name"))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasNoParentAccountRoleName() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("parent_account_role_name"))
	return g
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (g *GrantApplicationRoleResourceAssert) HasApplicationNameEmpty() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("application_name", ""))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasParentAccountRoleNameEmpty() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("parent_account_role_name", ""))
	return g
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (g *GrantApplicationRoleResourceAssert) HasApplicationNameNotEmpty() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("application_name"))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasApplicationRoleNameNotEmpty() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("application_role_name"))
	return g
}

func (g *GrantApplicationRoleResourceAssert) HasParentAccountRoleNameNotEmpty() *GrantApplicationRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("parent_account_role_name"))
	return g
}
