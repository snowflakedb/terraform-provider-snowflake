// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type TableResourceAssert struct {
	*assert.ResourceAssert
}

func TableResource(t *testing.T, name string) *TableResourceAssert {
	t.Helper()

	return &TableResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedTableResource(t *testing.T, id string) *TableResourceAssert {
	t.Helper()

	return &TableResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (t *TableResourceAssert) HasDatabaseString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("database", expected))
	return t
}

func (t *TableResourceAssert) HasSchemaString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("schema", expected))
	return t
}

func (t *TableResourceAssert) HasNameString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("name", expected))
	return t
}

func (t *TableResourceAssert) HasChangeTrackingString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("change_tracking", expected))
	return t
}

func (t *TableResourceAssert) HasClusterByString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("cluster_by", expected))
	return t
}

func (t *TableResourceAssert) HasColumnString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("column", expected))
	return t
}

func (t *TableResourceAssert) HasCommentString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("comment", expected))
	return t
}

func (t *TableResourceAssert) HasDataRetentionTimeInDaysString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("data_retention_time_in_days", expected))
	return t
}

func (t *TableResourceAssert) HasFullyQualifiedNameString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return t
}

func (t *TableResourceAssert) HasOwnerString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("owner", expected))
	return t
}

func (t *TableResourceAssert) HasPrimaryKeyString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("primary_key", expected))
	return t
}

func (t *TableResourceAssert) HasTagString(expected string) *TableResourceAssert {
	t.AddAssertion(assert.ValueSet("tag", expected))
	return t
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (t *TableResourceAssert) HasNoDatabase() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("database"))
	return t
}

func (t *TableResourceAssert) HasNoSchema() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("schema"))
	return t
}

func (t *TableResourceAssert) HasNoName() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("name"))
	return t
}

func (t *TableResourceAssert) HasNoChangeTracking() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("change_tracking"))
	return t
}

func (t *TableResourceAssert) HasNoClusterBy() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("cluster_by"))
	return t
}

func (t *TableResourceAssert) HasNoColumn() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("column"))
	return t
}

func (t *TableResourceAssert) HasNoComment() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("comment"))
	return t
}

func (t *TableResourceAssert) HasNoDataRetentionTimeInDays() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("data_retention_time_in_days"))
	return t
}

func (t *TableResourceAssert) HasNoFullyQualifiedName() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return t
}

func (t *TableResourceAssert) HasNoOwner() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("owner"))
	return t
}

func (t *TableResourceAssert) HasNoPrimaryKey() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("primary_key"))
	return t
}

func (t *TableResourceAssert) HasNoTag() *TableResourceAssert {
	t.AddAssertion(assert.ValueNotSet("tag"))
	return t
}
