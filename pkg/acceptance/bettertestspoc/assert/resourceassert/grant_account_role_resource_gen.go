// Code generated by resource assertions generator (v0.1.0); DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type GrantAccountRoleResourceAssert struct {
	*assert.ResourceAssert
}

func GrantAccountRoleResource(t *testing.T, name string) *GrantAccountRoleResourceAssert {
	t.Helper()

	return &GrantAccountRoleResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedGrantAccountRoleResource(t *testing.T, id string) *GrantAccountRoleResourceAssert {
	t.Helper()

	return &GrantAccountRoleResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (g *GrantAccountRoleResourceAssert) HasParentRoleNameString(expected string) *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("parent_role_name", expected))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasRoleNameString(expected string) *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("role_name", expected))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasUserNameString(expected string) *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("user_name", expected))
	return g
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (g *GrantAccountRoleResourceAssert) HasNoParentRoleName() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("parent_role_name"))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasNoRoleName() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("role_name"))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasNoUserName() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueNotSet("user_name"))
	return g
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (g *GrantAccountRoleResourceAssert) HasParentRoleNameEmpty() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("parent_role_name", ""))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasUserNameEmpty() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValueSet("user_name", ""))
	return g
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (g *GrantAccountRoleResourceAssert) HasParentRoleNameNotEmpty() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("parent_role_name"))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasRoleNameNotEmpty() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("role_name"))
	return g
}

func (g *GrantAccountRoleResourceAssert) HasUserNameNotEmpty() *GrantAccountRoleResourceAssert {
	g.AddAssertion(assert.ValuePresent("user_name"))
	return g
}
