// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type AccountRoleResourceAssert struct {
	*assert.ResourceAssert
}

func AccountRoleResource(t *testing.T, name string) *AccountRoleResourceAssert {
	t.Helper()

	return &AccountRoleResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedAccountRoleResource(t *testing.T, id string) *AccountRoleResourceAssert {
	t.Helper()

	return &AccountRoleResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (a *AccountRoleResourceAssert) HasNameString(expected string) *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueSet("name", expected))
	return a
}

func (a *AccountRoleResourceAssert) HasCommentString(expected string) *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueSet("comment", expected))
	return a
}

func (a *AccountRoleResourceAssert) HasFullyQualifiedNameString(expected string) *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return a
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (a *AccountRoleResourceAssert) HasNoName() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueNotSet("name"))
	return a
}

func (a *AccountRoleResourceAssert) HasNoComment() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueNotSet("comment"))
	return a
}

func (a *AccountRoleResourceAssert) HasNoFullyQualifiedName() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return a
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (a *AccountRoleResourceAssert) HasCommentEmpty() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueSet("comment", ""))
	return a
}

func (a *AccountRoleResourceAssert) HasFullyQualifiedNameEmpty() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValueSet("fully_qualified_name", ""))
	return a
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (a *AccountRoleResourceAssert) HasNameNotEmpty() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValuePresent("name"))
	return a
}

func (a *AccountRoleResourceAssert) HasCommentNotEmpty() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValuePresent("comment"))
	return a
}

func (a *AccountRoleResourceAssert) HasFullyQualifiedNameNotEmpty() *AccountRoleResourceAssert {
	a.AddAssertion(assert.ValuePresent("fully_qualified_name"))
	return a
}
