// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type ImageRepositoryResourceAssert struct {
	*assert.ResourceAssert
}

func ImageRepositoryResource(t *testing.T, name string) *ImageRepositoryResourceAssert {
	t.Helper()

	return &ImageRepositoryResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedImageRepositoryResource(t *testing.T, id string) *ImageRepositoryResourceAssert {
	t.Helper()

	return &ImageRepositoryResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (i *ImageRepositoryResourceAssert) HasDatabaseString(expected string) *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueSet("database", expected))
	return i
}

func (i *ImageRepositoryResourceAssert) HasSchemaString(expected string) *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueSet("schema", expected))
	return i
}

func (i *ImageRepositoryResourceAssert) HasNameString(expected string) *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueSet("name", expected))
	return i
}

func (i *ImageRepositoryResourceAssert) HasCommentString(expected string) *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueSet("comment", expected))
	return i
}

func (i *ImageRepositoryResourceAssert) HasFullyQualifiedNameString(expected string) *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return i
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (i *ImageRepositoryResourceAssert) HasNoDatabase() *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueNotSet("database"))
	return i
}

func (i *ImageRepositoryResourceAssert) HasNoSchema() *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueNotSet("schema"))
	return i
}

func (i *ImageRepositoryResourceAssert) HasNoName() *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueNotSet("name"))
	return i
}

func (i *ImageRepositoryResourceAssert) HasNoComment() *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueNotSet("comment"))
	return i
}

func (i *ImageRepositoryResourceAssert) HasNoFullyQualifiedName() *ImageRepositoryResourceAssert {
	i.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return i
}
