builds:
- env:
  - >-
    {{- if or (eq .Os "windows") (eq .Os "darwin") -}}
      CGO_ENABLED=1
    {{- else -}}
      CGO_ENABLED=0
    {{- end -}}
  goos:
    - windows
    - linux
    - darwin
    - freebsd
  goarch:
    - amd64
    - arm64
    - '386'
  flags:
    - -trimpath
  binary: '{{ .ProjectName }}_v{{ .Version }}'

archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

checksum:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256

# More on signing through GoReleaser: https://goreleaser.com/customization/sign/
signs:
  - artifacts: checksum
    args:
      # This option tells GPG to run in non-interactive mode.
      - "--batch"
      # Specifies which key to use.
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      # The pinentry loopback mode in GPG allows the passphrase to be provided programmatically (e.g., via the command line or a script) instead of requiring user interaction through a graphical or terminal-based pinentry prompt.
      - "--pinentry-mode"
      - "loopback"
      - "--passphrase"
      - "{{ .Env.GPG_PASSPHRASE }}"
      # Signature file name output.
      - "--output"
      - "${signature}"
      # Path to the artifact that will be signed.
      - "--detach-sign"
      - "${artifact}"

release:
  github:
    owner: snowflakedb
    name: terraform-provider-snowflake
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
